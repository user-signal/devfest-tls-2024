Classfile /home/fred/Projets/Pr√©sentations/devfest-tls-2024/out/production/Kotlin/BaseKt.class
  Last modified 19 sept. 2024; size 6868 bytes
  SHA-256 checksum 1d93404efa4ece5356df9676f09dd49cfc5cbae5f04fd5cefd33b97a227bb3a4
  Compiled from "Base.kt"
public final class BaseKt
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // BaseKt
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 16, attributes: 5
Constant pool:
    #1 = Utf8               BaseKt
    #2 = Class              #1            // BaseKt
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               main
    #6 = Utf8               ()V
    #7 = Utf8               java/lang/Integer
    #8 = Class              #7            // java/lang/Integer
    #9 = Utf8               valueOf
   #10 = Utf8               (I)Ljava/lang/Integer;
   #11 = NameAndType        #9:#10        // valueOf:(I)Ljava/lang/Integer;
   #12 = Methodref          #8.#11        // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
   #13 = Utf8               kotlin/collections/CollectionsKt
   #14 = Class              #13           // kotlin/collections/CollectionsKt
   #15 = Utf8               listOf
   #16 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;
   #17 = NameAndType        #15:#16       // listOf:([Ljava/lang/Object;)Ljava/util/List;
   #18 = Methodref          #14.#17       // kotlin/collections/CollectionsKt.listOf:([Ljava/lang/Object;)Ljava/util/List;
   #19 = Utf8               java/lang/Iterable
   #20 = Class              #19           // java/lang/Iterable
   #21 = Utf8               java/util/ArrayList
   #22 = Class              #21           // java/util/ArrayList
   #23 = Utf8               <init>
   #24 = NameAndType        #23:#6        // "<init>":()V
   #25 = Methodref          #22.#24       // java/util/ArrayList."<init>":()V
   #26 = Utf8               java/util/Collection
   #27 = Class              #26           // java/util/Collection
   #28 = Utf8               iterator
   #29 = Utf8               ()Ljava/util/Iterator;
   #30 = NameAndType        #28:#29       // iterator:()Ljava/util/Iterator;
   #31 = InterfaceMethodref #20.#30       // java/lang/Iterable.iterator:()Ljava/util/Iterator;
   #32 = Utf8               java/util/Iterator
   #33 = Class              #32           // java/util/Iterator
   #34 = Utf8               hasNext
   #35 = Utf8               ()Z
   #36 = NameAndType        #34:#35       // hasNext:()Z
   #37 = InterfaceMethodref #33.#36       // java/util/Iterator.hasNext:()Z
   #38 = Utf8               next
   #39 = Utf8               ()Ljava/lang/Object;
   #40 = NameAndType        #38:#39       // next:()Ljava/lang/Object;
   #41 = InterfaceMethodref #33.#40       // java/util/Iterator.next:()Ljava/lang/Object;
   #42 = Utf8               java/lang/Number
   #43 = Class              #42           // java/lang/Number
   #44 = Utf8               intValue
   #45 = Utf8               ()I
   #46 = NameAndType        #44:#45       // intValue:()I
   #47 = Methodref          #43.#46       // java/lang/Number.intValue:()I
   #48 = Utf8               add
   #49 = Utf8               (Ljava/lang/Object;)Z
   #50 = NameAndType        #48:#49       // add:(Ljava/lang/Object;)Z
   #51 = InterfaceMethodref #27.#50       // java/util/Collection.add:(Ljava/lang/Object;)Z
   #52 = Utf8               java/util/List
   #53 = Class              #52           // java/util/List
   #54 = Utf8               java/lang/System
   #55 = Class              #54           // java/lang/System
   #56 = Utf8               out
   #57 = Utf8               Ljava/io/PrintStream;
   #58 = NameAndType        #56:#57       // out:Ljava/io/PrintStream;
   #59 = Fieldref           #55.#58       // java/lang/System.out:Ljava/io/PrintStream;
   #60 = Utf8               java/io/PrintStream
   #61 = Class              #60           // java/io/PrintStream
   #62 = Utf8               println
   #63 = Utf8               (Ljava/lang/Object;)V
   #64 = NameAndType        #62:#63       // println:(Ljava/lang/Object;)V
   #65 = Methodref          #61.#64       // java/io/PrintStream.println:(Ljava/lang/Object;)V
   #66 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #67 = MethodType         #66           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #68 = Utf8               main$lambda$1
   #69 = Utf8               (I)Z
   #70 = NameAndType        #68:#69       // main$lambda$1:(I)Z
   #71 = Methodref          #2.#70        // BaseKt.main$lambda$1:(I)Z
   #72 = MethodHandle       6:#71         // REF_invokeStatic BaseKt.main$lambda$1:(I)Z
   #73 = Utf8               (Ljava/lang/Integer;)Ljava/lang/Boolean;
   #74 = MethodType         #73           //  (Ljava/lang/Integer;)Ljava/lang/Boolean;
   #75 = Utf8               java/lang/invoke/LambdaMetafactory
   #76 = Class              #75           // java/lang/invoke/LambdaMetafactory
   #77 = Utf8               metafactory
   #78 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
   #79 = NameAndType        #77:#78       // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
   #80 = Methodref          #76.#79       // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
   #81 = MethodHandle       6:#80         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
   #82 = Utf8               invoke
   #83 = Utf8               ()Lkotlin/jvm/functions/Function1;
   #84 = NameAndType        #82:#83       // invoke:()Lkotlin/jvm/functions/Function1;
   #85 = InvokeDynamic      #0:#84        // #0:invoke:()Lkotlin/jvm/functions/Function1;
   #86 = Utf8               filter
   #87 = Utf8               (Ljava/util/List;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
   #88 = NameAndType        #86:#87       // filter:(Ljava/util/List;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
   #89 = Methodref          #2.#88        // BaseKt.filter:(Ljava/util/List;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
   #90 = Utf8               main$lambda$2
   #91 = NameAndType        #90:#69       // main$lambda$2:(I)Z
   #92 = Methodref          #2.#91        // BaseKt.main$lambda$2:(I)Z
   #93 = MethodHandle       6:#92         // REF_invokeStatic BaseKt.main$lambda$2:(I)Z
   #94 = InvokeDynamic      #1:#84        // #1:invoke:()Lkotlin/jvm/functions/Function1;
   #95 = Utf8               main$lambda$3
   #96 = NameAndType        #95:#69       // main$lambda$3:(I)Z
   #97 = Methodref          #2.#96        // BaseKt.main$lambda$3:(I)Z
   #98 = MethodHandle       6:#97         // REF_invokeStatic BaseKt.main$lambda$3:(I)Z
   #99 = InvokeDynamic      #2:#84        // #2:invoke:()Lkotlin/jvm/functions/Function1;
  #100 = Utf8               parametricSieve
  #101 = Utf8               (I)Lkotlin/jvm/functions/Function1;
  #102 = NameAndType        #100:#101     // parametricSieve:(I)Lkotlin/jvm/functions/Function1;
  #103 = Methodref          #2.#102       // BaseKt.parametricSieve:(I)Lkotlin/jvm/functions/Function1;
  #104 = Utf8               parametricSieveCurried
  #105 = Utf8               Lkotlin/jvm/functions/Function1;
  #106 = NameAndType        #104:#105     // parametricSieveCurried:Lkotlin/jvm/functions/Function1;
  #107 = Fieldref           #2.#106       // BaseKt.parametricSieveCurried:Lkotlin/jvm/functions/Function1;
  #108 = Utf8               kotlin/jvm/functions/Function1
  #109 = Class              #108          // kotlin/jvm/functions/Function1
  #110 = NameAndType        #82:#66       // invoke:(Ljava/lang/Object;)Ljava/lang/Object;
  #111 = InterfaceMethodref #109.#110     // kotlin/jvm/functions/Function1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
  #112 = Utf8               $i$a$-filter-BaseKt$main$1
  #113 = Utf8               I
  #114 = Utf8               it
  #115 = Utf8               element$iv$iv
  #116 = Utf8               Ljava/lang/Object;
  #117 = Utf8               $i$f$filterTo
  #118 = Utf8               $this$filterTo$iv$iv
  #119 = Utf8               Ljava/lang/Iterable;
  #120 = Utf8               destination$iv$iv
  #121 = Utf8               Ljava/util/Collection;
  #122 = Utf8               $i$f$filter
  #123 = Utf8               $this$filter$iv
  #124 = Utf8               aList
  #125 = Utf8               Ljava/util/List;
  #126 = Utf8               sieve
  #127 = Utf8               sieveCurried
  #128 = Utf8               (I)Lkotlin/jvm/functions/Function1<Ljava/lang/Integer;Ljava/lang/Boolean;>;
  #129 = Utf8               Lorg/jetbrains/annotations/NotNull;
  #130 = Utf8               longComputation
  #131 = Utf8               (I)I
  #132 = NameAndType        #130:#131     // longComputation:(I)I
  #133 = Methodref          #2.#132       // BaseKt.longComputation:(I)I
  #134 = Utf8               parametricSieve$lambda$4
  #135 = Utf8               (II)Z
  #136 = NameAndType        #134:#135     // parametricSieve$lambda$4:(II)Z
  #137 = Methodref          #2.#136       // BaseKt.parametricSieve$lambda$4:(II)Z
  #138 = MethodHandle       6:#137        // REF_invokeStatic BaseKt.parametricSieve$lambda$4:(II)Z
  #139 = NameAndType        #82:#101      // invoke:(I)Lkotlin/jvm/functions/Function1;
  #140 = InvokeDynamic      #3:#139       // #3:invoke:(I)Lkotlin/jvm/functions/Function1;
  #141 = Utf8               c
  #142 = Utf8               x
  #143 = Utf8               getParametricSieveCurried
  #144 = Utf8               ()Lkotlin/jvm/functions/Function1<Ljava/lang/Integer;Lkotlin/jvm/functions/Function1<Ljava/lang/Integer;Ljava/lang/Boolean;>;>;
  #145 = Utf8               (II)Lkotlin/jvm/functions/Function1;
  #146 = Utf8               (II)Lkotlin/jvm/functions/Function1<Ljava/lang/Integer;Ljava/lang/Boolean;>;
  #147 = Utf8               parametricSieve$lambda$7
  #148 = NameAndType        #147:#135     // parametricSieve$lambda$7:(II)Z
  #149 = Methodref          #2.#148       // BaseKt.parametricSieve$lambda$7:(II)Z
  #150 = MethodHandle       6:#149        // REF_invokeStatic BaseKt.parametricSieve$lambda$7:(II)Z
  #151 = InvokeDynamic      #4:#139       // #4:invoke:(I)Lkotlin/jvm/functions/Function1;
  #152 = Utf8               p
  #153 = Utf8               (Ljava/util/List<Ljava/lang/Integer;>;Lkotlin/jvm/functions/Function1<-Ljava/lang/Integer;Ljava/lang/Boolean;>;)Ljava/util/List<Ljava/lang/Integer;>;
  #154 = Utf8               list
  #155 = String             #154          // list
  #156 = Utf8               kotlin/jvm/internal/Intrinsics
  #157 = Class              #156          // kotlin/jvm/internal/Intrinsics
  #158 = Utf8               checkNotNullParameter
  #159 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)V
  #160 = NameAndType        #158:#159     // checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
  #161 = Methodref          #157.#160     // kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
  #162 = Utf8               predicate
  #163 = String             #162          // predicate
  #164 = Utf8               emptyList
  #165 = Utf8               ()Ljava/util/List;
  #166 = NameAndType        #164:#165     // emptyList:()Ljava/util/List;
  #167 = Methodref          #14.#166      // kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;
  #168 = Utf8               filter$filterAux
  #169 = Utf8               (Ljava/util/List;Lkotlin/jvm/functions/Function1;Ljava/util/List;)Ljava/util/List;
  #170 = NameAndType        #168:#169     // filter$filterAux:(Ljava/util/List;Lkotlin/jvm/functions/Function1;Ljava/util/List;)Ljava/util/List;
  #171 = Methodref          #2.#170       // BaseKt.filter$filterAux:(Ljava/util/List;Lkotlin/jvm/functions/Function1;Ljava/util/List;)Ljava/util/List;
  #172 = Utf8               ([Ljava/lang/String;)V
  #173 = NameAndType        #5:#6         // main:()V
  #174 = Methodref          #2.#173       // BaseKt.main:()V
  #175 = Utf8               args
  #176 = Utf8               [Ljava/lang/String;
  #177 = Utf8               someInt
  #178 = Utf8               $c
  #179 = Utf8               y
  #180 = Utf8               parametricSieveCurried$lambda$6$lambda$5
  #181 = Utf8               parametricSieveCurried$lambda$6
  #182 = NameAndType        #180:#135     // parametricSieveCurried$lambda$6$lambda$5:(II)Z
  #183 = Methodref          #2.#182       // BaseKt.parametricSieveCurried$lambda$6$lambda$5:(II)Z
  #184 = MethodHandle       6:#183        // REF_invokeStatic BaseKt.parametricSieveCurried$lambda$6$lambda$5:(II)Z
  #185 = InvokeDynamic      #5:#139       // #5:invoke:(I)Lkotlin/jvm/functions/Function1;
  #186 = Utf8               $p
  #187 = Utf8               (Ljava/util/List<Ljava/lang/Integer;>;Lkotlin/jvm/functions/Function1<-Ljava/lang/Integer;Ljava/lang/Boolean;>;Ljava/util/List<Ljava/lang/Integer;>;)Ljava/util/List<Ljava/lang/Integer;>;
  #188 = Utf8               isEmpty
  #189 = NameAndType        #188:#35      // isEmpty:()Z
  #190 = InterfaceMethodref #53.#189      // java/util/List.isEmpty:()Z
  #191 = Utf8               first
  #192 = Utf8               (Ljava/util/List;)Ljava/lang/Object;
  #193 = NameAndType        #191:#192     // first:(Ljava/util/List;)Ljava/lang/Object;
  #194 = Methodref          #14.#193      // kotlin/collections/CollectionsKt.first:(Ljava/util/List;)Ljava/lang/Object;
  #195 = Utf8               java/lang/Boolean
  #196 = Class              #195          // java/lang/Boolean
  #197 = Utf8               booleanValue
  #198 = NameAndType        #197:#35      // booleanValue:()Z
  #199 = Methodref          #196.#198     // java/lang/Boolean.booleanValue:()Z
  #200 = Utf8               drop
  #201 = Utf8               (Ljava/lang/Iterable;I)Ljava/util/List;
  #202 = NameAndType        #200:#201     // drop:(Ljava/lang/Iterable;I)Ljava/util/List;
  #203 = Methodref          #14.#202      // kotlin/collections/CollectionsKt.drop:(Ljava/lang/Iterable;I)Ljava/util/List;
  #204 = Utf8               plus
  #205 = Utf8               (Ljava/util/Collection;Ljava/lang/Object;)Ljava/util/List;
  #206 = NameAndType        #204:#205     // plus:(Ljava/util/Collection;Ljava/lang/Object;)Ljava/util/List;
  #207 = Methodref          #14.#206      // kotlin/collections/CollectionsKt.plus:(Ljava/util/Collection;Ljava/lang/Object;)Ljava/util/List;
  #208 = Utf8               kotlin/NoWhenBranchMatchedException
  #209 = Class              #208          // kotlin/NoWhenBranchMatchedException
  #210 = Methodref          #209.#24      // kotlin/NoWhenBranchMatchedException."<init>":()V
  #211 = Utf8               acc
  #212 = Utf8               <clinit>
  #213 = NameAndType        #181:#101     // parametricSieveCurried$lambda$6:(I)Lkotlin/jvm/functions/Function1;
  #214 = Methodref          #2.#213       // BaseKt.parametricSieveCurried$lambda$6:(I)Lkotlin/jvm/functions/Function1;
  #215 = MethodHandle       6:#214        // REF_invokeStatic BaseKt.parametricSieveCurried$lambda$6:(I)Lkotlin/jvm/functions/Function1;
  #216 = Utf8               (Ljava/lang/Integer;)Lkotlin/jvm/functions/Function1;
  #217 = MethodType         #216          //  (Ljava/lang/Integer;)Lkotlin/jvm/functions/Function1;
  #218 = InvokeDynamic      #6:#84        // #6:invoke:()Lkotlin/jvm/functions/Function1;
  #219 = Utf8               Lkotlin/jvm/functions/Function1<Ljava/lang/Integer;Lkotlin/jvm/functions/Function1<Ljava/lang/Integer;Ljava/lang/Boolean;>;>;
  #220 = Utf8               Lkotlin/Metadata;
  #221 = Utf8               mv
  #222 = Integer            2
  #223 = Integer            0
  #224 = Utf8               k
  #225 = Utf8               xi
  #226 = Integer            48
  #227 = Utf8               d1
  #228 = Utf8               \u0000 \n\u0000\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0010\b\n\u0002\u0010\u000b\n\u0002\b\u0007\n\u0002\u0010 \n\u0002\b\u0003\u001a\u0006\u0010\u0000\u001a\u00020\u0001\u001a\u001a\u0010\u0002\u001a\u000e\u0012\u0004\u0012\u00020\u0004\u0012\u0004\u0012\u00020\u00050\u00032\u0006\u0010\u0006\u001a\u00020\u0004\u001a\"\u0010\u0002\u001a\u000e\u0012\u0004\u0012\u00020\u0004\u0012\u0004\u0012\u00020\u00050\u00032\u0006\u0010\u0006\u001a\u00020\u00042\u0006\u0010\n\u001a\u00020\u0004\u001a\u000e\u0010\u000b\u001a\u00020\u00042\u0006\u0010\u0006\u001a\u00020\u0004\u001a.\u0010\f\u001a\b\u0012\u0004\u0012\u00020\u00040\r2\f\u0010\u000e\u001a\b\u0012\u0004\u0012\u00020\u00040\r2\u0012\u0010\u000f\u001a\u000e\u0012\u0004\u0012\u00020\u0004\u0012\u0004\u0012\u00020\u00050\u0003\")\u0010\u0007\u001a\u001a\u0012\u0004\u0012\u00020\u0004\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00020\u0004\u0012\u0004\u0012\u00020\u00050\u00030\u0003¬¢\u0006\b\n\u0000\u001a\u0004\b\b\u0010\t¬®\u0006\u0010
  #229 = Utf8               d2
  #230 = Utf8
  #231 = Utf8               Lkotlin/Function1;
  #232 = Utf8               Kotlin
  #233 = Utf8               Base.kt
  #234 = Utf8               Lkotlin/jvm/internal/SourceDebugExtension;
  #235 = Utf8               value
  #236 = Utf8               SMAP\nBase.kt\nKotlin\n*S Kotlin\n*F\n+ 1 Base.kt\nBaseKt\n+ 2 _Collections.kt\nkotlin/collections/CollectionsKt___CollectionsKt\n*L\n1#1,59:1\n774#2:60\n865#2,2:61\n*S KotlinDebug\n*F\n+ 1 Base.kt\nBaseKt\n*L\n5#1:60\n5#1:61,2\n*E\n
  #237 = Utf8               Signature
  #238 = Utf8               RuntimeInvisibleAnnotations
  #239 = Utf8               Code
  #240 = Utf8               StackMapTable
  #241 = Utf8               LineNumberTable
  #242 = Utf8               LocalVariableTable
  #243 = Utf8               RuntimeInvisibleParameterAnnotations
  #244 = Utf8               SourceFile
  #245 = Utf8               SourceDebugExtension
  #246 = Utf8               RuntimeVisibleAnnotations
  #247 = Utf8               BootstrapMethods
{
  private static final kotlin.jvm.functions.Function1<java.lang.Integer, kotlin.jvm.functions.Function1<java.lang.Integer, java.lang.Boolean>> parametricSieveCurried;
    descriptor: Lkotlin/jvm/functions/Function1;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #219                         // Lkotlin/jvm/functions/Function1<Ljava/lang/Integer;Lkotlin/jvm/functions/Function1<Ljava/lang/Integer;Ljava/lang/Boolean;>;>;
    RuntimeInvisibleAnnotations:
      0: #129()
        org.jetbrains.annotations.NotNull

  public static final void main();
    descriptor: ()V
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=3, locals=10, args_size=0
         0: bipush        10
         2: anewarray     #8                  // class java/lang/Integer
         5: astore_1
         6: aload_1
         7: iconst_0
         8: iconst_1
         9: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        12: aastore
        13: aload_1
        14: iconst_1
        15: iconst_2
        16: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        19: aastore
        20: aload_1
        21: iconst_2
        22: iconst_3
        23: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        26: aastore
        27: aload_1
        28: iconst_3
        29: iconst_4
        30: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        33: aastore
        34: aload_1
        35: iconst_4
        36: iconst_5
        37: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        40: aastore
        41: aload_1
        42: iconst_5
        43: bipush        6
        45: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        48: aastore
        49: aload_1
        50: bipush        6
        52: bipush        7
        54: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        57: aastore
        58: aload_1
        59: bipush        7
        61: bipush        8
        63: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        66: aastore
        67: aload_1
        68: bipush        8
        70: bipush        9
        72: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        75: aastore
        76: aload_1
        77: bipush        9
        79: bipush        10
        81: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        84: aastore
        85: aload_1
        86: invokestatic  #18                 // Method kotlin/collections/CollectionsKt.listOf:([Ljava/lang/Object;)Ljava/util/List;
        89: astore_0
        90: aload_0
        91: checkcast     #20                 // class java/lang/Iterable
        94: astore_1
        95: iconst_0
        96: istore_2
        97: aload_1
        98: astore_3
        99: new           #22                 // class java/util/ArrayList
       102: dup
       103: invokespecial #25                 // Method java/util/ArrayList."<init>":()V
       106: checkcast     #27                 // class java/util/Collection
       109: astore        4
       111: iconst_0
       112: istore        5
       114: aload_3
       115: invokeinterface #31,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       120: astore        6
       122: aload         6
       124: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
       129: ifeq          182
       132: aload         6
       134: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
       139: astore        7
       141: aload         7
       143: checkcast     #43                 // class java/lang/Number
       146: invokevirtual #47                 // Method java/lang/Number.intValue:()I
       149: istore        8
       151: iconst_0
       152: istore        9
       154: iload         8
       156: iconst_2
       157: irem
       158: ifne          165
       161: iconst_1
       162: goto          166
       165: iconst_0
       166: ifeq          122
       169: aload         4
       171: aload         7
       173: invokeinterface #51,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
       178: pop
       179: goto          122
       182: aload         4
       184: checkcast     #53                 // class java/util/List
       187: nop
       188: astore_1
       189: getstatic     #59                 // Field java/lang/System.out:Ljava/io/PrintStream;
       192: aload_1
       193: invokevirtual #65                 // Method java/io/PrintStream.println:(Ljava/lang/Object;)V
       196: aload_0
       197: invokedynamic #85,  0             // InvokeDynamic #0:invoke:()Lkotlin/jvm/functions/Function1;
       202: invokestatic  #89                 // Method filter:(Ljava/util/List;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
       205: getstatic     #59                 // Field java/lang/System.out:Ljava/io/PrintStream;
       208: swap
       209: invokevirtual #65                 // Method java/io/PrintStream.println:(Ljava/lang/Object;)V
       212: aload_0
       213: invokedynamic #94,  0             // InvokeDynamic #1:invoke:()Lkotlin/jvm/functions/Function1;
       218: invokestatic  #89                 // Method filter:(Ljava/util/List;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
       221: getstatic     #59                 // Field java/lang/System.out:Ljava/io/PrintStream;
       224: swap
       225: invokevirtual #65                 // Method java/io/PrintStream.println:(Ljava/lang/Object;)V
       228: aload_0
       229: invokedynamic #99,  0             // InvokeDynamic #2:invoke:()Lkotlin/jvm/functions/Function1;
       234: invokestatic  #89                 // Method filter:(Ljava/util/List;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
       237: getstatic     #59                 // Field java/lang/System.out:Ljava/io/PrintStream;
       240: swap
       241: invokevirtual #65                 // Method java/io/PrintStream.println:(Ljava/lang/Object;)V
       244: iconst_3
       245: invokestatic  #103                // Method parametricSieve:(I)Lkotlin/jvm/functions/Function1;
       248: astore_1
       249: aload_0
       250: aload_1
       251: invokestatic  #89                 // Method filter:(Ljava/util/List;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
       254: getstatic     #59                 // Field java/lang/System.out:Ljava/io/PrintStream;
       257: swap
       258: invokevirtual #65                 // Method java/io/PrintStream.println:(Ljava/lang/Object;)V
       261: getstatic     #107                // Field parametricSieveCurried:Lkotlin/jvm/functions/Function1;
       264: iconst_3
       265: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       268: invokeinterface #111,  2          // InterfaceMethod kotlin/jvm/functions/Function1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
       273: checkcast     #109                // class kotlin/jvm/functions/Function1
       276: astore_2
       277: aload_0
       278: aload_2
       279: invokestatic  #89                 // Method filter:(Ljava/util/List;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
       282: getstatic     #59                 // Field java/lang/System.out:Ljava/io/PrintStream;
       285: swap
       286: invokevirtual #65                 // Method java/io/PrintStream.println:(Ljava/lang/Object;)V
       289: return
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 122
          locals = [ class java/util/List, class java/lang/Iterable, int, class java/lang/Iterable, class java/util/Collection, int, class java/util/Iterator ]
          stack = []
        frame_type = 254 /* append */
          offset_delta = 42
          locals = [ class java/lang/Object, int, int ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 248 /* chop */
          offset_delta = 15
      LineNumberTable:
        line 3: 0
        line 5: 90
        line 60: 97
        line 61: 114
        line 5: 154
        line 61: 166
        line 62: 182
        line 60: 187
        line 5: 189
        line 7: 196
        line 8: 212
        line 9: 228
        line 11: 244
        line 12: 249
        line 14: 261
        line 15: 277
        line 16: 289
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          154      12     9 $i$a$-filter-BaseKt$main$1   I
          151      15     8    it   I
          141      38     7 element$iv$iv   Ljava/lang/Object;
          114      70     5 $i$f$filterTo   I
          111      73     3 $this$filterTo$iv$iv   Ljava/lang/Iterable;
          111      73     4 destination$iv$iv   Ljava/util/Collection;
           97      91     2 $i$f$filter   I
           95      93     1 $this$filter$iv   Ljava/lang/Iterable;
           90     200     0 aList   Ljava/util/List;
          249      41     1 sieve   Lkotlin/jvm/functions/Function1;
          277      13     2 sieveCurried   Lkotlin/jvm/functions/Function1;

  public static final kotlin.jvm.functions.Function1<java.lang.Integer, java.lang.Boolean> parametricSieve(int);
    descriptor: (I)Lkotlin/jvm/functions/Function1;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=1
         0: iload_0
         1: invokestatic  #133                // Method longComputation:(I)I
         4: istore_1
         5: iload_1
         6: invokedynamic #140,  0            // InvokeDynamic #3:invoke:(I)Lkotlin/jvm/functions/Function1;
        11: areturn
      LineNumberTable:
        line 19: 0
        line 20: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5       7     1     c   I
            0      12     0     x   I
    Signature: #128                         // (I)Lkotlin/jvm/functions/Function1<Ljava/lang/Integer;Ljava/lang/Boolean;>;
    RuntimeInvisibleAnnotations:
      0: #129()
        org.jetbrains.annotations.NotNull

  public static final kotlin.jvm.functions.Function1<java.lang.Integer, kotlin.jvm.functions.Function1<java.lang.Integer, java.lang.Boolean>> getParametricSieveCurried();
    descriptor: ()Lkotlin/jvm/functions/Function1;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #107                // Field parametricSieveCurried:Lkotlin/jvm/functions/Function1;
         3: areturn
      LineNumberTable:
        line 23: 0
    Signature: #144                         // ()Lkotlin/jvm/functions/Function1<Ljava/lang/Integer;Lkotlin/jvm/functions/Function1<Ljava/lang/Integer;Ljava/lang/Boolean;>;>;
    RuntimeInvisibleAnnotations:
      0: #129()
        org.jetbrains.annotations.NotNull

  public static final kotlin.jvm.functions.Function1<java.lang.Integer, java.lang.Boolean> parametricSieve(int, int);
    descriptor: (II)Lkotlin/jvm/functions/Function1;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: iload_1
         1: invokedynamic #151,  0            // InvokeDynamic #4:invoke:(I)Lkotlin/jvm/functions/Function1;
         6: areturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0     x   I
            0       7     1     p   I
    Signature: #146                         // (II)Lkotlin/jvm/functions/Function1<Ljava/lang/Integer;Ljava/lang/Boolean;>;
    RuntimeInvisibleAnnotations:
      0: #129()
        org.jetbrains.annotations.NotNull

  public static final int longComputation(int);
    descriptor: (I)I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=1, args_size=1
         0: iload_0
         1: iload_0
         2: imul
         3: ireturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0     x   I

  public static final java.util.List<java.lang.Integer> filter(java.util.List<java.lang.Integer>, kotlin.jvm.functions.Function1<? super java.lang.Integer, java.lang.Boolean>);
    descriptor: (Ljava/util/List;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc           #155                // String list
         3: invokestatic  #161                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
         6: aload_1
         7: ldc           #163                // String predicate
         9: invokestatic  #161                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
        12: aload_0
        13: aload_1
        14: invokestatic  #167                // Method kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;
        17: invokestatic  #171                // Method filter$filterAux:(Ljava/util/List;Lkotlin/jvm/functions/Function1;Ljava/util/List;)Ljava/util/List;
        20: areturn
      LineNumberTable:
        line 57: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  list   Ljava/util/List;
            0      21     1 predicate   Lkotlin/jvm/functions/Function1;
    Signature: #153                         // (Ljava/util/List<Ljava/lang/Integer;>;Lkotlin/jvm/functions/Function1<-Ljava/lang/Integer;Ljava/lang/Boolean;>;)Ljava/util/List<Ljava/lang/Integer;>;
    RuntimeInvisibleAnnotations:
      0: #129()
        org.jetbrains.annotations.NotNull
    RuntimeInvisibleParameterAnnotations:
      parameter 0:
        0: #129()
          org.jetbrains.annotations.NotNull
      parameter 1:
        0: #129()
          org.jetbrains.annotations.NotNull

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=0, locals=1, args_size=1
         0: invokestatic  #174                // Method main:()V
         3: return
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  args   [Ljava/lang/String;

  private static final boolean main$lambda$1(int);
    descriptor: (I)Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=1, args_size=1
         0: iload_0
         1: iconst_2
         2: irem
         3: ifne          10
         6: iconst_1
         7: goto          11
        10: iconst_0
        11: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0    it   I

  private static final boolean main$lambda$2(int);
    descriptor: (I)Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=1, args_size=1
         0: iload_0
         1: iconst_2
         2: irem
         3: ifne          10
         6: iconst_1
         7: goto          11
        10: iconst_0
        11: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 8: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0    it   I

  private static final boolean main$lambda$3(int);
    descriptor: (I)Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=1, args_size=1
         0: iload_0
         1: iconst_2
         2: irem
         3: ifne          10
         6: iconst_1
         7: goto          11
        10: iconst_0
        11: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 someInt   I

  private static final boolean parametricSieve$lambda$4(int, int);
    descriptor: (II)Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: iload_0
         1: iload_1
         2: irem
         3: ifne          10
         6: iconst_1
         7: goto          11
        10: iconst_0
        11: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0    $c   I
            0      12     1     y   I

  private static final boolean parametricSieveCurried$lambda$6$lambda$5(int, int);
    descriptor: (II)Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: iload_0
         1: iload_1
         2: irem
         3: ifne          10
         6: iconst_1
         7: goto          11
        10: iconst_0
        11: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 25: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0    $c   I
            0      12     1     y   I

  private static final kotlin.jvm.functions.Function1 parametricSieveCurried$lambda$6(int);
    descriptor: (I)Lkotlin/jvm/functions/Function1;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=1
         0: iload_0
         1: invokestatic  #133                // Method longComputation:(I)I
         4: istore_1
         5: iload_1
         6: invokedynamic #185,  0            // InvokeDynamic #5:invoke:(I)Lkotlin/jvm/functions/Function1;
        11: areturn
      LineNumberTable:
        line 24: 0
        line 25: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5       7     1     c   I
            0      12     0     x   I

  private static final boolean parametricSieve$lambda$7(int, int);
    descriptor: (II)Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: iload_0
         1: iload_1
         2: irem
         3: ifne          10
         6: iconst_1
         7: goto          11
        10: iconst_0
        11: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0    $p   I
            0      12     1    it   I

  private static final java.util.List<java.lang.Integer> filter$filterAux(java.util.List<java.lang.Integer>, kotlin.jvm.functions.Function1<? super java.lang.Integer, java.lang.Boolean>, java.util.List<java.lang.Integer>);
    descriptor: (Ljava/util/List;Lkotlin/jvm/functions/Function1;Ljava/util/List;)Ljava/util/List;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=4, locals=5, args_size=3
         0: aload_0
         1: invokeinterface #190,  1          // InterfaceMethod java/util/List.isEmpty:()Z
         6: istore_3
         7: iload_3
         8: iconst_1
         9: if_icmpne     16
        12: aload_2
        13: goto          103
        16: iload_3
        17: ifne          95
        20: aload_0
        21: invokestatic  #194                // Method kotlin/collections/CollectionsKt.first:(Ljava/util/List;)Ljava/lang/Object;
        24: checkcast     #43                 // class java/lang/Number
        27: invokevirtual #47                 // Method java/lang/Number.intValue:()I
        30: istore        4
        32: aload_1
        33: iload         4
        35: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        38: invokeinterface #111,  2          // InterfaceMethod kotlin/jvm/functions/Function1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
        43: checkcast     #196                // class java/lang/Boolean
        46: invokevirtual #199                // Method java/lang/Boolean.booleanValue:()Z
        49: ifeq          79
        52: aload_0
        53: checkcast     #20                 // class java/lang/Iterable
        56: iconst_1
        57: invokestatic  #203                // Method kotlin/collections/CollectionsKt.drop:(Ljava/lang/Iterable;I)Ljava/util/List;
        60: aload_1
        61: aload_2
        62: checkcast     #27                 // class java/util/Collection
        65: iload         4
        67: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        70: invokestatic  #207                // Method kotlin/collections/CollectionsKt.plus:(Ljava/util/Collection;Ljava/lang/Object;)Ljava/util/List;
        73: invokestatic  #171                // Method filter$filterAux:(Ljava/util/List;Lkotlin/jvm/functions/Function1;Ljava/util/List;)Ljava/util/List;
        76: goto          103
        79: aload_0
        80: checkcast     #20                 // class java/lang/Iterable
        83: iconst_1
        84: invokestatic  #203                // Method kotlin/collections/CollectionsKt.drop:(Ljava/lang/Iterable;I)Ljava/util/List;
        87: aload_1
        88: aload_2
        89: invokestatic  #171                // Method filter$filterAux:(Ljava/util/List;Lkotlin/jvm/functions/Function1;Ljava/util/List;)Ljava/util/List;
        92: goto          103
        95: new           #209                // class kotlin/NoWhenBranchMatchedException
        98: dup
        99: invokespecial #210                // Method kotlin/NoWhenBranchMatchedException."<init>":()V
       102: athrow
       103: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 16
          locals = [ int ]
        frame_type = 252 /* append */
          offset_delta = 62
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 15
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class java/util/List ]
      LineNumberTable:
        line 46: 0
        line 47: 7
        line 48: 16
        line 49: 20
        line 50: 32
        line 51: 52
        line 53: 79
        line 46: 95
        line 56: 103
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           32      60     4 first   I
            0     104     0  list   Ljava/util/List;
            0     104     1 predicate   Lkotlin/jvm/functions/Function1;
            0     104     2   acc   Ljava/util/List;
    Signature: #187                         // (Ljava/util/List<Ljava/lang/Integer;>;Lkotlin/jvm/functions/Function1<-Ljava/lang/Integer;Ljava/lang/Boolean;>;Ljava/util/List<Ljava/lang/Integer;>;)Ljava/util/List<Ljava/lang/Integer;>;

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: invokedynamic #218,  0            // InvokeDynamic #6:invoke:()Lkotlin/jvm/functions/Function1;
         5: putstatic     #107                // Field parametricSieveCurried:Lkotlin/jvm/functions/Function1;
         8: return
      LineNumberTable:
        line 23: 0
}
SourceFile: "Base.kt"
SourceDebugExtension:
  SMAP
  Base.kt
  Kotlin
  *S Kotlin
  *F
  + 1 Base.kt
  BaseKt
  + 2 _Collections.kt
  kotlin/collections/CollectionsKt___CollectionsKt
  *L
  1#1,59:1
  774#2:60
  865#2,2:61
  *S KotlinDebug
  *F
  + 1 Base.kt
  BaseKt
  *L
  5#1:60
  5#1:61,2
  *E
RuntimeVisibleAnnotations:
  0: #220(#221=[I#222,I#223,I#223],#224=I#222,#225=I#226,#227=[s#228],#229=[s#5,s#230,s#100,s#231,s#230,s#230,s#142,s#104,s#143,s#83,s#152,s#130,s#86,s#230,s#154,s#162,s#232])
    kotlin.Metadata(
      mv=[2,0,0]
      k=2
      xi=48
      d1=["\u0000 \n\u0000\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0010\b\n\u0002\u0010\u000b\n\u0002\b\u0007\n\u0002\u0010 \n\u0002\b\u0003\u001a\u0006\u0010\u0000\u001a\u00020\u0001\u001a\u001a\u0010\u0002\u001a\u000e\u0012\u0004\u0012\u00020\u0004\u0012\u0004\u0012\u00020\u00050\u00032\u0006\u0010\u0006\u001a\u00020\u0004\u001a\"\u0010\u0002\u001a\u000e\u0012\u0004\u0012\u00020\u0004\u0012\u0004\u0012\u00020\u00050\u00032\u0006\u0010\u0006\u001a\u00020\u00042\u0006\u0010\n\u001a\u00020\u0004\u001a\u000e\u0010\u000b\u001a\u00020\u00042\u0006\u0010\u0006\u001a\u00020\u0004\u001a.\u0010\f\u001a\b\u0012\u0004\u0012\u00020\u00040\r2\f\u0010\u000e\u001a\b\u0012\u0004\u0012\u00020\u00040\r2\u0012\u0010\u000f\u001a\u000e\u0012\u0004\u0012\u00020\u0004\u0012\u0004\u0012\u00020\u00050\u0003\")\u0010\u0007\u001a\u001a\u0012\u0004\u0012\u00020\u0004\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00020\u0004\u0012\u0004\u0012\u00020\u00050\u00030\u0003¬¢\u0006\b\n\u0000\u001a\u0004\b\b\u0010\t¬®\u0006\u0010"]
      d2=["main","","parametricSieve","Lkotlin/Function1;","","","x","parametricSieveCurried","getParametricSieveCurried","()Lkotlin/jvm/functions/Function1;","p","longComputation","filter","","list","predicate","Kotlin"]
    )
RuntimeInvisibleAnnotations:
  0: #234(#235=[s#236])
    kotlin.jvm.internal.SourceDebugExtension(
      value=["SMAP\nBase.kt\nKotlin\n*S Kotlin\n*F\n+ 1 Base.kt\nBaseKt\n+ 2 _Collections.kt\nkotlin/collections/CollectionsKt___CollectionsKt\n*L\n1#1,59:1\n774#2:60\n865#2,2:61\n*S KotlinDebug\n*F\n+ 1 Base.kt\nBaseKt\n*L\n5#1:60\n5#1:61,2\n*E\n"]
    )
BootstrapMethods:
  0: #81 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #67 (Ljava/lang/Object;)Ljava/lang/Object;
      #72 REF_invokeStatic BaseKt.main$lambda$1:(I)Z
      #74 (Ljava/lang/Integer;)Ljava/lang/Boolean;
  1: #81 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #67 (Ljava/lang/Object;)Ljava/lang/Object;
      #93 REF_invokeStatic BaseKt.main$lambda$2:(I)Z
      #74 (Ljava/lang/Integer;)Ljava/lang/Boolean;
  2: #81 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #67 (Ljava/lang/Object;)Ljava/lang/Object;
      #98 REF_invokeStatic BaseKt.main$lambda$3:(I)Z
      #74 (Ljava/lang/Integer;)Ljava/lang/Boolean;
  3: #81 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #67 (Ljava/lang/Object;)Ljava/lang/Object;
      #138 REF_invokeStatic BaseKt.parametricSieve$lambda$4:(II)Z
      #74 (Ljava/lang/Integer;)Ljava/lang/Boolean;
  4: #81 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #67 (Ljava/lang/Object;)Ljava/lang/Object;
      #150 REF_invokeStatic BaseKt.parametricSieve$lambda$7:(II)Z
      #74 (Ljava/lang/Integer;)Ljava/lang/Boolean;
  5: #81 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #67 (Ljava/lang/Object;)Ljava/lang/Object;
      #184 REF_invokeStatic BaseKt.parametricSieveCurried$lambda$6$lambda$5:(II)Z
      #74 (Ljava/lang/Integer;)Ljava/lang/Boolean;
  6: #81 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #67 (Ljava/lang/Object;)Ljava/lang/Object;
      #215 REF_invokeStatic BaseKt.parametricSieveCurried$lambda$6:(I)Lkotlin/jvm/functions/Function1;
      #217 (Ljava/lang/Integer;)Lkotlin/jvm/functions/Function1;
