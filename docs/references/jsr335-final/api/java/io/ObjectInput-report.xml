<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:ObjectInput [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:ObjectInput"/><ul class="blockList"><li class="blockList"><dl> <dt>All Superinterfaces: </dt><dd> <a href="../../java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a>, <a href="../../java/io/DataInput.html" title="interface in java.io">DataInput</a>  </dd> </dl><dl> <dt>All Known Implementing Classes:   </dt><dd> <a href="../../java/io/ObjectInputStream.html" title="class in java.io">ObjectInputStream</a> </dd> </dl> <hr/> <br/><pre>public interface <span class="typeNameLabel">ObjectInput</span>
extends <a href="../../java/io/DataInput.html" title="interface in java.io">DataInput</a>, <a href="../../java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a></pre><div class="block">ObjectInput extends the DataInput interface to include the reading of objects. DataInput includes methods for the input of primitive types, ObjectInput extends that interface to include objects, arrays, and Strings.                             </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>JDK1.1</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/InputStream.html" title="class in java.io"><code>InputStream</code></a>, <a href="../../java/io/ObjectOutputStream.html" title="class in java.io"><code>ObjectOutputStream</code></a>, <a href="../../java/io/ObjectInputStream.html" title="class in java.io"><code>ObjectInputStream</code></a>   </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:ObjectInput"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:readObject-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:readObject--"/><a name="readObject--"/><ul class="blockList"><li class="blockList"><h4>readObject</h4><pre><a href="../../java/lang/Object.html" title="class in java.lang">Object</a> readObject()
           throws <a href="../../java/lang/ClassNotFoundException.html" title="class in java.lang">ClassNotFoundException</a>,
                  <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Read and return an object. The class that implements this interface defines where the object is "read" from.                 </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the object read from the stream     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/ClassNotFoundException.html" title="class in java.lang">ClassNotFoundException</a></code> - If the class of a serialized object cannot be found.            </dd><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - If any of the usual Input/Output related exceptions occur.           </dd>  </dl></li></ul> <a end_ctx_id="method:readObject--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:read-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:read--"/><a name="read--"/><ul class="blockList"><li class="blockList"><h4>read</h4><pre>int read()
  throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Reads a byte of data. This method will block if no input is available.             </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the byte read, or -1 if the end of the stream is reached.            </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - If an I/O error has occurred.        </dd>  </dl></li></ul> <a end_ctx_id="method:read--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:read-byte:A- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:read-byte:A-"/><a name="read-byte:A-"/><ul class="blockList"><li class="blockList"><h4>read</h4><pre>int read(byte[] b)
  throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Reads into an array of bytes. This method will block until some input is available.              </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>b</code> - the buffer into which the data is read          </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the actual number of bytes read, -1 is returned when the end of the stream is reached.                </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - If an I/O error has occurred.        </dd>   </dl></li></ul> <a end_ctx_id="method:read-byte:A-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:read-byte:A-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:read-byte:A-int-int-"/><a name="read-byte:A-int-int-"/><ul class="blockList"><li class="blockList"><h4>read</h4><pre>int read(byte[] b,
         int off,
         int len)
  throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Reads into an array of bytes. This method will block until some input is available.              </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>b</code> - the buffer into which the data is read          </dd><dd> <code>off</code> - the start offset of the data        </dd><dd> <code>len</code> - the maximum number of bytes read        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the actual number of bytes read, -1 is returned when the end of the stream is reached.                </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - If an I/O error has occurred.        </dd>   </dl></li></ul> <a end_ctx_id="method:read-byte:A-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:skip-long- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:skip-long-"/><a name="skip-long-"/><ul class="blockList"><li class="blockList"><h4>skip</h4><pre>long skip(long n)
   throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Skips n bytes of input.    </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>n</code> - the number of bytes to be skipped         </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the actual number of bytes skipped.     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - If an I/O error has occurred.        </dd>   </dl></li></ul> <a end_ctx_id="method:skip-long-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:available-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:available--"/><a name="available--"/><ul class="blockList"><li class="blockList"><h4>available</h4><pre>int available()
       throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Returns the number of bytes that can be read without blocking.          </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the number of available bytes.    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - If an I/O error has occurred.        </dd>  </dl></li></ul> <a end_ctx_id="method:available--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:close-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:close--"/><a name="close--"/><ul class="blockListLast"><li class="blockList"><h4>close</h4><pre>void close()
    throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Closes the input stream. Must be called to release any resources associated with the stream.              </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/AutoCloseable.html#close--">close</a></code> in interface <code><a href="../../java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a></code>  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - If an I/O error has occurred.        </dd>  </dl></li></ul> <a end_ctx_id="method:close--"/>  </td></tr></table></td></tr></table></diff></diffreport>