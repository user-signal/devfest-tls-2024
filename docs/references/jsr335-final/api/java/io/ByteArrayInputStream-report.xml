<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:ByteArrayInputStream [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:ByteArrayInputStream"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../java/io/Closeable.html" title="interface in java.io">Closeable</a>, <a href="../../java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a>  </dd> </dl> <hr/> <br/><pre>public class <span class="typeNameLabel">ByteArrayInputStream</span>
extends <a href="../../java/io/InputStream.html" title="class in java.io">InputStream</a></pre><div class="block">A <code>ByteArrayInputStream</code> contains an internal buffer that contains bytes that may be read from the stream. An internal counter keeps track of the next byte to be supplied by the <code>read</code> method.<p> Closing a <tt>ByteArrayInputStream</tt> has no effect. The methods in this class can be called after the stream has been closed without generating an <tt>IOException</tt>.                        </p>                               </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>JDK1.0</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/StringBufferInputStream.html" title="class in java.io"><code>StringBufferInputStream</code></a> </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:ByteArrayInputStream"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:buf [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:buf"/><a name="buf"/><ul class="blockList"><li class="blockList"><h4>buf</h4><pre>protected byte[] buf</pre><div class="block">An array of bytes that was provided by the creator of the stream. Elements <code>buf[0]</code> through <code>buf[count-1]</code> are the only bytes that can ever be read from the stream; element <code>buf[pos]</code> is the next byte to be read.                                     </div></li></ul> <a end_ctx_id="field:buf"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:pos [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:pos"/><a name="pos"/><ul class="blockList"><li class="blockList"><h4>pos</h4><pre>protected int pos</pre><div class="block">The index of the next character to read from the input stream buffer. This value should always be nonnegative and not larger than the value of <code>count</code>. The next byte to be read from the input stream buffer will be <code>buf[pos]</code>.                                        </div></li></ul> <a end_ctx_id="field:pos"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:mark [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:mark"/><a name="mark"/><ul class="blockList"><li class="blockList"><h4>mark</h4><pre>protected int mark</pre><div class="block">The currently marked position in the stream. ByteArrayInputStream objects are marked at position zero by default when constructed. They may be marked at another position within the buffer by the <code>mark()</code> method. The current buffer position is set to this point by the <code>reset()</code> method.<p> If no mark has been set, then the value of mark is the offset passed to the constructor (or 0 if the offset was not supplied).                          </p>                                            </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>JDK1.1</dd> </dl></li></ul> <a end_ctx_id="field:mark"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:count [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:count"/><a name="count"/><ul class="blockListLast"><li class="blockList"><h4>count</h4><pre>protected int count</pre><div class="block">The index one greater than the last valid character in the input stream buffer. This value should always be nonnegative and not larger than the length of <code>buf</code>. It is one greater than the position of the last byte within <code>buf</code> that can ever be read from the input stream buffer.                                                  </div></li></ul> <a end_ctx_id="field:count"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:ByteArrayInputStream-byte:A- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:ByteArrayInputStream-byte:A-"/><a name="ByteArrayInputStream-byte:A-"/><ul class="blockList"><li class="blockList"><h4>ByteArrayInputStream</h4><pre>public ByteArrayInputStream(byte[] buf)</pre><div class="block">Creates a <code>ByteArrayInputStream</code> so that it uses <code>buf</code> as its buffer array. The buffer array is not copied. The initial value of <code>pos</code> is <code>0</code> and the initial value of <code>count</code> is the length of <code>buf</code>.                                   </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>buf</code> - the input buffer.     </dd> </dl></li></ul> <a end_ctx_id="constructor:ByteArrayInputStream-byte:A-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:ByteArrayInputStream-byte:A-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:ByteArrayInputStream-byte:A-int-int-"/><a name="ByteArrayInputStream-byte:A-int-int-"/><ul class="blockListLast"><li class="blockList"><h4>ByteArrayInputStream</h4><pre>public ByteArrayInputStream(byte[] buf,
                            int offset,
                            int length)</pre><div class="block">Creates <code>ByteArrayInputStream</code> that uses <code>buf</code> as its buffer array. The initial value of <code>pos</code> is <code>offset</code> and the initial value of <code>count</code> is the minimum of <code>offset+length</code> and <code>buf.length</code>. The buffer array is not copied. The buffer's mark is set to the specified offset.                                           </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>buf</code> - the input buffer.     </dd><dd> <code>offset</code> - the offset in the buffer of the first byte to read.             </dd><dd> <code>length</code> - the maximum number of bytes to read from the buffer.            </dd> </dl></li></ul> <a end_ctx_id="constructor:ByteArrayInputStream-byte:A-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:read-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:read--"/><a name="read--"/><ul class="blockList"><li class="blockList"><h4>read</h4><pre>public int read()</pre><div class="block">Reads the next byte of data from this input stream. The value byte is returned as an <code>int</code> in the range <code>0</code> to <code>255</code>. If no byte is available because the end of the stream has been reached, the value <code>-1</code> is returned.<p> This <code>read</code> method cannot block.     </p>                                          </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/InputStream.html#read--">read</a></code> in class <code><a href="../../java/io/InputStream.html" title="class in java.io">InputStream</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the next byte of data, or <code>-1</code> if the end of the stream has been reached.               </dd>  </dl></li></ul> <a end_ctx_id="method:read--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:read-byte:A-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:read-byte:A-int-int-"/><a name="read-byte:A-int-int-"/><ul class="blockList"><li class="blockList"><h4>read</h4><pre>public int read(byte[] b,
                int off,
                int len)</pre><div class="block">Reads up to <code>len</code> bytes of data into an array of bytes from this input stream. If <code>pos</code> equals <code>count</code>, then <code>-1</code> is returned to indicate end of file. Otherwise, the number <code>k</code> of bytes read is equal to the smaller of <code>len</code> and <code>count-pos</code>. If <code>k</code> is positive, then bytes <code>buf[pos]</code> through <code>buf[pos+k-1]</code> are copied into <code>b[off]</code> through <code>b[off+k-1]</code> in the manner performed by <code>System.arraycopy</code>. The value <code>k</code> is added into <code>pos</code> and <code>k</code> is returned.<p> This <code>read</code> method cannot block.     </p>                                                                            </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/InputStream.html#read-byte:A-int-int-">read</a></code> in class <code><a href="../../java/io/InputStream.html" title="class in java.io">InputStream</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>b</code> - the buffer into which the data is read.          </dd><dd> <code>off</code> - the start offset in the destination array <code>b</code>          </dd><dd> <code>len</code> - the maximum number of bytes read.        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the total number of bytes read into the buffer, or <code>-1</code> if there is no more data because the end of the stream has been reached.                         </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - If <code>b</code> is <code>null</code>.      </dd><dd> <code><a href="../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - If <code>off</code> is negative, <code>len</code> is negative, or <code>len</code> is greater than <code>b.length - off  </code>               </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/InputStream.html#read--"><code>InputStream.read()</code></a> </dd>     </dl></li></ul> <a end_ctx_id="method:read-byte:A-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:skip-long- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:skip-long-"/><a name="skip-long-"/><ul class="blockList"><li class="blockList"><h4>skip</h4><pre>public long skip(long n)</pre><div class="block">Skips <code>n</code> bytes of input from this input stream. Fewer bytes might be skipped if the end of the input stream is reached. The actual number <code>k</code> of bytes to be skipped is equal to the smaller of <code>n</code> and <code>count-pos</code>. The value <code>k</code> is added into <code>pos</code> and <code>k</code> is returned.                                                   </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/InputStream.html#skip-long-">skip</a></code> in class <code><a href="../../java/io/InputStream.html" title="class in java.io">InputStream</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>n</code> - the number of bytes to be skipped.         </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the actual number of bytes skipped.     </dd>   </dl></li></ul> <a end_ctx_id="method:skip-long-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:available-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:available--"/><a name="available--"/><ul class="blockList"><li class="blockList"><h4>available</h4><pre>public int available()</pre><div class="block">Returns the number of remaining bytes that can be read (or skipped over) from this input stream.<p> The value returned is <code>count - pos </code>, which is the number of bytes remaining to be read from the input buffer.                   </p>                </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/InputStream.html#available--">available</a></code> in class <code><a href="../../java/io/InputStream.html" title="class in java.io">InputStream</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the number of remaining bytes that can be read (or skipped over) from this input stream without blocking.                 </dd>  </dl></li></ul> <a end_ctx_id="method:available--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:markSupported-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:markSupported--"/><a name="markSupported--"/><ul class="blockList"><li class="blockList"><h4>markSupported</h4><pre>public boolean markSupported()</pre><div class="block">Tests if this <code>InputStream</code> supports mark/reset. The <code>markSupported</code> method of <code>ByteArrayInputStream</code> always returns <code>true</code>.             </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/InputStream.html#markSupported--">markSupported</a></code> in class <code><a href="../../java/io/InputStream.html" title="class in java.io">InputStream</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this stream instance supports the mark and reset methods; <code>false</code> otherwise.             </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>JDK1.1</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/InputStream.html#mark-int-"><code>InputStream.mark(int)</code></a>, <a href="../../java/io/InputStream.html#reset--"><code>InputStream.reset()</code></a>  </dd>    </dl></li></ul> <a end_ctx_id="method:markSupported--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:mark-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:mark-int-"/><a name="mark-int-"/><ul class="blockList"><li class="blockList"><h4>mark</h4><pre>public void mark(int readAheadLimit)</pre><div class="block">Set the current marked position in the stream. ByteArrayInputStream objects are marked at position zero by default when constructed. They may be marked at another position within the buffer by this method.<p> If no mark has been set, then the value of the mark is the offset passed to the constructor (or 0 if the offset was not supplied).                           </p><p> Note: The <code>readAheadLimit</code> for this class has no meaning.         </p>                               </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/InputStream.html#mark-int-">mark</a></code> in class <code><a href="../../java/io/InputStream.html" title="class in java.io">InputStream</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>readAheadLimit</code> - the maximum limit of bytes that can be read before the mark position becomes invalid.                 </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>JDK1.1</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/InputStream.html#reset--"><code>InputStream.reset()</code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:mark-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:reset-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:reset--"/><a name="reset--"/><ul class="blockList"><li class="blockList"><h4>reset</h4><pre>public void reset()</pre><div class="block">Resets the buffer to the marked position. The marked position is 0 unless another position was marked or an offset was specified in the constructor.                        </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/InputStream.html#reset--">reset</a></code> in class <code><a href="../../java/io/InputStream.html" title="class in java.io">InputStream</a></code>  </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/InputStream.html#mark-int-"><code>InputStream.mark(int)</code></a>, <a href="../../java/io/IOException.html" title="class in java.io"><code>IOException</code></a>  </dd>  </dl></li></ul> <a end_ctx_id="method:reset--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:close-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:close--"/><a name="close--"/><ul class="blockListLast"><li class="blockList"><h4>close</h4><pre>public void close()
           throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Closing a <tt>ByteArrayInputStream</tt> has no effect. The methods in this class can be called after the stream has been closed without generating an <tt>IOException</tt>.                       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/Closeable.html#close--">close</a></code> in interface <code><a href="../../java/io/Closeable.html" title="interface in java.io">Closeable</a></code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/AutoCloseable.html#close--">close</a></code> in interface <code><a href="../../java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a></code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/InputStream.html#close--">close</a></code> in class <code><a href="../../java/io/InputStream.html" title="class in java.io">InputStream</a></code>  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs.       </dd>    </dl></li></ul> <a end_ctx_id="method:close--"/>  </td></tr></table></td></tr></table></diff></diffreport>