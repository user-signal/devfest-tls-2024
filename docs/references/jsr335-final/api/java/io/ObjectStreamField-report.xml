<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:ObjectStreamField [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:ObjectStreamField"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../java/lang/Comparable.html" title="interface in java.lang">Comparable</a>&lt;<a href="../../java/lang/Object.html" title="class in java.lang">Object</a>&gt; </dd> </dl> <hr/> <br/><pre>public class <span class="typeNameLabel">ObjectStreamField</span>
extends <a href="../../java/lang/Object.html" title="class in java.lang">Object</a>
implements <a href="../../java/lang/Comparable.html" title="interface in java.lang">Comparable</a>&lt;<a href="../../java/lang/Object.html" title="class in java.lang">Object</a>&gt;</pre><div class="block">A description of a Serializable field from a Serializable class. An array of ObjectStreamFields is used to declare the Serializable fields of a class.                       </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/ObjectStreamClass.html" title="class in java.io"><code>ObjectStreamClass</code></a> </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:ObjectStreamField"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:ObjectStreamField-java.lang.String-java.lang.Class- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:ObjectStreamField-java.lang.String-java.lang.Class-"/><a name="ObjectStreamField-java.lang.String-java.lang.Class-"/><ul class="blockList"><li class="blockList"><h4>ObjectStreamField</h4><pre>public ObjectStreamField(<a href="../../java/lang/String.html" title="class in java.lang">String</a> name,
                         <a href="../../java/lang/Class.html" title="class in java.lang">Class</a>&lt;?&gt; type)</pre><div class="block">Create a Serializable field with the specified type. This field should be documented with a <code>serialField</code> tag.                </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>name</code> - the name of the serializable field        </dd><dd> <code>type</code> - the <code>Class</code> object of the serializable field         </dd> </dl></li></ul> <a end_ctx_id="constructor:ObjectStreamField-java.lang.String-java.lang.Class-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:ObjectStreamField-java.lang.String-java.lang.Class-boolean- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:ObjectStreamField-java.lang.String-java.lang.Class-boolean-"/><a name="ObjectStreamField-java.lang.String-java.lang.Class-boolean-"/><ul class="blockListLast"><li class="blockList"><h4>ObjectStreamField</h4><pre>public ObjectStreamField(<a href="../../java/lang/String.html" title="class in java.lang">String</a> name,
                         <a href="../../java/lang/Class.html" title="class in java.lang">Class</a>&lt;?&gt; type,
                         boolean unshared)</pre><div class="block">Creates an ObjectStreamField representing a serializable field with the given name and type. If unshared is false, values of the represented field are serialized and deserialized in the default manner--if the field is non-primitive, object values are serialized and deserialized as if they had been written and read by calls to writeObject and readObject. If unshared is true, values of the represented field are serialized and deserialized as if they had been written and read by calls to writeUnshared and readUnshared.                                                                                </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>name</code> - field name    </dd><dd> <code>type</code> - field type    </dd><dd> <code>unshared</code> - if false, write/read field values in the same manner as writeObject/readObject; if true, write/read in the same manner as writeUnshared/readUnshared                      </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.4</dd>  </dl></li></ul> <a end_ctx_id="constructor:ObjectStreamField-java.lang.String-java.lang.Class-boolean-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getName-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getName--"/><a name="getName--"/><ul class="blockList"><li class="blockList"><h4>getName</h4><pre>public <a href="../../java/lang/String.html" title="class in java.lang">String</a> getName()</pre><div class="block">Get the name of this field.     </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a <code>String</code> representing the name of the serializable field        </dd> </dl></li></ul> <a end_ctx_id="method:getName--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getType-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getType--"/><a name="getType--"/><ul class="blockList"><li class="blockList"><h4>getType</h4><pre>public <a href="../../java/lang/Class.html" title="class in java.lang">Class</a>&lt;?&gt; getType()</pre><div class="block">Get the type of the field. If the type is non-primitive and this <code>ObjectStreamField</code> was obtained from a deserialized <a href="../../java/io/ObjectStreamClass.html" title="class in java.io"><code>ObjectStreamClass</code></a> instance, then <code>Object.class</code> is returned. Otherwise, the <code>Class</code> object for the type of the field is returned.                                    </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a <code>Class</code> object representing the type of the serializable field         </dd> </dl></li></ul> <a end_ctx_id="method:getType--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getTypeCode-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getTypeCode--"/><a name="getTypeCode--"/><ul class="blockList"><li class="blockList"><h4>getTypeCode</h4><pre>public char getTypeCode()</pre><div class="block">Returns character encoding of field type. The encoding is as follows:<blockquote><pre>
 B            byte
 C            char
 D            double
 F            float
 I            int
 J            long
 L            class or interface
 S            short
 Z            boolean
 [            array
 </pre></blockquote>          </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the typecode of the serializable field     </dd> </dl></li></ul> <a end_ctx_id="method:getTypeCode--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getTypeString-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getTypeString--"/><a name="getTypeString--"/><ul class="blockList"><li class="blockList"><h4>getTypeString</h4><pre>public <a href="../../java/lang/String.html" title="class in java.lang">String</a> getTypeString()</pre><div class="block">Return the JVM type signature.    </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>null if this field has a primitive type.       </dd> </dl></li></ul> <a end_ctx_id="method:getTypeString--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getOffset-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getOffset--"/><a name="getOffset--"/><ul class="blockList"><li class="blockList"><h4>getOffset</h4><pre>public int getOffset()</pre><div class="block">Offset of field within instance data.     </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the offset of this field    </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/ObjectStreamField.html#setOffset-int-"><code>setOffset(int)</code></a> </dd>  </dl></li></ul> <a end_ctx_id="method:getOffset--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:setOffset-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:setOffset-int-"/><a name="setOffset-int-"/><ul class="blockList"><li class="blockList"><h4>setOffset</h4><pre>protected void setOffset(int offset)</pre><div class="block">Offset within instance data.   </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>offset</code> - the offset of the field       </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/ObjectStreamField.html#getOffset--"><code>getOffset()</code></a> </dd>  </dl></li></ul> <a end_ctx_id="method:setOffset-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:isPrimitive-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:isPrimitive--"/><a name="isPrimitive--"/><ul class="blockList"><li class="blockList"><h4>isPrimitive</h4><pre>public boolean isPrimitive()</pre><div class="block">Return true if this field has a primitive type.        </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>true if and only if this field corresponds to a primitive type           </dd> </dl></li></ul> <a end_ctx_id="method:isPrimitive--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:isUnshared-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:isUnshared--"/><a name="isUnshared--"/><ul class="blockList"><li class="blockList"><h4>isUnshared</h4><pre>public boolean isUnshared()</pre><div class="block">Returns boolean value indicating whether or not the serializable field represented by this ObjectStreamField instance is unshared.                </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this field is unshared      </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.4</dd>  </dl></li></ul> <a end_ctx_id="method:isUnshared--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:compareTo-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:compareTo-java.lang.Object-"/><a name="compareTo-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>compareTo</h4><pre>public int compareTo(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> obj)</pre><div class="block">Compare this field with another <code>ObjectStreamField</code>. Return -1 if this is smaller, 0 if equal, 1 if greater. Types that are primitives are "smaller" than object types. If equal, the field names are compared.                                 </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/Comparable.html#compareTo-T-">compareTo</a></code> in interface <code><a href="../../java/lang/Comparable.html" title="interface in java.lang">Comparable</a>&lt;<a href="../../java/lang/Object.html" title="class in java.lang">Object</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>obj</code> - the object to be compared.       </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than the specified object.                     </dd>   </dl></li></ul> <a end_ctx_id="method:compareTo-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toString-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toString--"/><a name="toString--"/><ul class="blockListLast"><li class="blockList"><h4>toString</h4><pre>public <a href="../../java/lang/String.html" title="class in java.lang">String</a> toString()</pre><div class="block">Return a string that describes this field.      </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/lang/Object.html#toString--">toString</a></code> in class <code><a href="../../java/lang/Object.html" title="class in java.lang">Object</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a string representation of the object.     </dd>  </dl></li></ul> <a end_ctx_id="method:toString--"/>  </td></tr></table></td></tr></table></diff></diffreport>