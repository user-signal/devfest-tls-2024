<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:FilterReader [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:FilterReader"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../java/io/Closeable.html" title="interface in java.io">Closeable</a>, <a href="../../java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a>, <a href="../../java/lang/Readable.html" title="interface in java.lang">Readable</a>   </dd> </dl><dl> <dt>Direct Known Subclasses:  </dt><dd> <a href="../../java/io/PushbackReader.html" title="class in java.io">PushbackReader</a> </dd> </dl> <hr/> <br/><pre>public abstract class <span class="typeNameLabel">FilterReader</span>
extends <a href="../../java/io/Reader.html" title="class in java.io">Reader</a></pre><div class="block">Abstract class for reading filtered character streams. The abstract class <code>FilterReader</code> itself provides default methods that pass all requests to the contained stream. Subclasses of <code>FilterReader</code> should override some of these methods and may also provide additional methods and fields.                                       </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>JDK1.1</dd> </dl>  </li></ul> </div> <a end_ctx_id="class:FilterReader"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:in [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:in"/><a name="in"/><ul class="blockListLast"><li class="blockList"><h4>in</h4><pre>protected <a href="../../java/io/Reader.html" title="class in java.io">Reader</a> in</pre><div class="block">The underlying character-input stream.   </div></li></ul> <a end_ctx_id="field:in"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:FilterReader-java.io.Reader- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:FilterReader-java.io.Reader-"/><a name="FilterReader-java.io.Reader-"/><ul class="blockListLast"><li class="blockList"><h4>FilterReader</h4><pre>protected FilterReader(<a href="../../java/io/Reader.html" title="class in java.io">Reader</a> in)</pre><div class="block">Creates a new filtered reader.    </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>in</code> - a Reader object providing the underlying stream.         </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if <code>in</code> is <code>null</code>      </dd>  </dl></li></ul> <a end_ctx_id="constructor:FilterReader-java.io.Reader-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:read-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:read--"/><a name="read--"/><ul class="blockList"><li class="blockList"><h4>read</h4><pre>public int read()
         throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Reads a single character.   </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/Reader.html#read--">read</a></code> in class <code><a href="../../java/io/Reader.html" title="class in java.io">Reader</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>The character read, as an integer in the range 0 to 65535 (<tt>0x00-0xffff</tt>), or -1 if the end of the stream has been reached                       </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - If an I/O error occurs       </dd>   </dl></li></ul> <a end_ctx_id="method:read--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:read-char:A-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:read-char:A-int-int-"/><a name="read-char:A-int-int-"/><ul class="blockList"><li class="blockList"><h4>read</h4><pre>public int read(char[] cbuf,
                int off,
                int len)
         throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Reads characters into a portion of an array.       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/Reader.html#read-char:A-int-int-">read</a></code> in class <code><a href="../../java/io/Reader.html" title="class in java.io">Reader</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>cbuf</code> - Destination buffer    </dd><dd> <code>off</code> - Offset at which to start storing characters         </dd><dd> <code>len</code> - Maximum number of characters to read        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>The number of characters read, or -1 if the end of the stream has been reached               </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - If an I/O error occurs       </dd>    </dl></li></ul> <a end_ctx_id="method:read-char:A-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:skip-long- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:skip-long-"/><a name="skip-long-"/><ul class="blockList"><li class="blockList"><h4>skip</h4><pre>public long skip(long n)
          throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Skips characters. </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/Reader.html#skip-long-">skip</a></code> in class <code><a href="../../java/io/Reader.html" title="class in java.io">Reader</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>n</code> - The number of characters to skip        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>The number of characters actually skipped     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - If an I/O error occurs       </dd>    </dl></li></ul> <a end_ctx_id="method:skip-long-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:ready-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:ready--"/><a name="ready--"/><ul class="blockList"><li class="blockList"><h4>ready</h4><pre>public boolean ready()
              throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Tells whether this stream is ready to be read.        </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/Reader.html#ready--">ready</a></code> in class <code><a href="../../java/io/Reader.html" title="class in java.io">Reader</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>True if the next read() is guaranteed not to block for input, false otherwise. Note that returning false does not guarantee that the next read will block.                          </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - If an I/O error occurs       </dd>   </dl></li></ul> <a end_ctx_id="method:ready--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:markSupported-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:markSupported--"/><a name="markSupported--"/><ul class="blockList"><li class="blockList"><h4>markSupported</h4><pre>public boolean markSupported()</pre><div class="block">Tells whether this stream supports the mark() operation.       </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/Reader.html#markSupported--">markSupported</a></code> in class <code><a href="../../java/io/Reader.html" title="class in java.io">Reader</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>true if and only if this stream supports the mark operation.          </dd>  </dl></li></ul> <a end_ctx_id="method:markSupported--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:mark-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:mark-int-"/><a name="mark-int-"/><ul class="blockList"><li class="blockList"><h4>mark</h4><pre>public void mark(int readAheadLimit)
          throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Marks the present position in the stream.      </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/Reader.html#mark-int-">mark</a></code> in class <code><a href="../../java/io/Reader.html" title="class in java.io">Reader</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>readAheadLimit</code> - Limit on the number of characters that may be read while still preserving the mark. After reading this many characters, attempting to reset the stream may fail.                             </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - If an I/O error occurs       </dd>   </dl></li></ul> <a end_ctx_id="method:mark-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:reset-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:reset--"/><a name="reset--"/><ul class="blockList"><li class="blockList"><h4>reset</h4><pre>public void reset()
           throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Resets the stream.  </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/Reader.html#reset--">reset</a></code> in class <code><a href="../../java/io/Reader.html" title="class in java.io">Reader</a></code>  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - If an I/O error occurs       </dd>  </dl></li></ul> <a end_ctx_id="method:reset--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:close-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:close--"/><a name="close--"/><ul class="blockListLast"><li class="blockList"><h4>close</h4><pre>public void close()
           throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block"> <span class="descfrmTypeLabel">Description copied from class: <code><a href="../../java/io/Reader.html#close--">Reader</a></code>   </span> </div><div class="block">Closes the stream and releases any system resources associated with it. Once the stream has been closed, further read(), ready(), mark(), reset(), or skip() invocations will throw an IOException. Closing a previously closed stream has no effect.                                    </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/Closeable.html#close--">close</a></code> in interface <code><a href="../../java/io/Closeable.html" title="interface in java.io">Closeable</a></code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/AutoCloseable.html#close--">close</a></code> in interface <code><a href="../../java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a></code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/Reader.html#close--">close</a></code> in class <code><a href="../../java/io/Reader.html" title="class in java.io">Reader</a></code>  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - If an I/O error occurs       </dd>    </dl></li></ul> <a end_ctx_id="method:close--"/>  </td></tr></table></td></tr></table></diff></diffreport>