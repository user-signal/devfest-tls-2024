<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:FilterOutputStream [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:FilterOutputStream"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../java/io/Closeable.html" title="interface in java.io">Closeable</a>, <a href="../../java/io/Flushable.html" title="interface in java.io">Flushable</a>, <a href="../../java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a>   </dd> </dl><dl> <dt>Direct Known Subclasses:  </dt><dd> <a href="../../java/io/BufferedOutputStream.html" title="class in java.io">BufferedOutputStream</a>, <a href="../../java/util/zip/CheckedOutputStream.html" title="class in java.util.zip">CheckedOutputStream</a>, <a href="../../javax/crypto/CipherOutputStream.html" title="class in javax.crypto">CipherOutputStream</a>, <a href="../../java/io/DataOutputStream.html" title="class in java.io">DataOutputStream</a>, <a href="../../java/util/zip/DeflaterOutputStream.html" title="class in java.util.zip">DeflaterOutputStream</a>, <a href="../../java/security/DigestOutputStream.html" title="class in java.security">DigestOutputStream</a>, <a href="../../java/util/zip/InflaterOutputStream.html" title="class in java.util.zip">InflaterOutputStream</a>, <a href="../../java/io/PrintStream.html" title="class in java.io">PrintStream</a>        </dd> </dl> <hr/> <br/><pre>public class <span class="typeNameLabel">FilterOutputStream</span>
extends <a href="../../java/io/OutputStream.html" title="class in java.io">OutputStream</a></pre><div class="block">This class is the superclass of all classes that filter output streams. These streams sit on top of an already existing output stream (the <i>underlying</i> output stream) which it uses as its basic sink of data, but possibly transforming the data along the way or providing additional functionality.<p> The class <code>FilterOutputStream</code> itself simply overrides all methods of <code>OutputStream</code> with versions that pass all requests to the underlying output stream. Subclasses of <code>FilterOutputStream</code> may further override some of these methods as well as provide additional methods and fields.                                       </p>                                               </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>JDK1.0</dd> </dl>  </li></ul> </div> <a end_ctx_id="class:FilterOutputStream"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:out [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:out"/><a name="out"/><ul class="blockListLast"><li class="blockList"><h4>out</h4><pre>protected <a href="../../java/io/OutputStream.html" title="class in java.io">OutputStream</a> out</pre><div class="block">The underlying output stream to be filtered.      </div></li></ul> <a end_ctx_id="field:out"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:FilterOutputStream-java.io.OutputStream- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:FilterOutputStream-java.io.OutputStream-"/><a name="FilterOutputStream-java.io.OutputStream-"/><ul class="blockListLast"><li class="blockList"><h4>FilterOutputStream</h4><pre>public FilterOutputStream(<a href="../../java/io/OutputStream.html" title="class in java.io">OutputStream</a> out)</pre><div class="block">Creates an output stream filter built on top of the specified underlying output stream.             </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>out</code> - the underlying output stream to be assigned to the field <tt>this.out</tt> for later use, or <code>null</code> if this instance is to be created without an underlying stream.                             </dd> </dl></li></ul> <a end_ctx_id="constructor:FilterOutputStream-java.io.OutputStream-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:write-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:write-int-"/><a name="write-int-"/><ul class="blockList"><li class="blockList"><h4>write</h4><pre>public void write(int b)
           throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Writes the specified <code>byte</code> to this output stream.<p> The <code>write</code> method of <code>FilterOutputStream</code> calls the <code>write</code> method of its underlying output stream, that is, it performs <tt>out.write(b)</tt>.                   </p><p> Implements the abstract <tt>write</tt> method of <tt>OutputStream</tt>.       </p>       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/OutputStream.html#write-int-">write</a></code> in class <code><a href="../../java/io/OutputStream.html" title="class in java.io">OutputStream</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>b</code> - the <code>byte</code>.    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs.       </dd>   </dl></li></ul> <a end_ctx_id="method:write-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:write-byte:A- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:write-byte:A-"/><a name="write-byte:A-"/><ul class="blockList"><li class="blockList"><h4>write</h4><pre>public void write(byte[] b)
           throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Writes <code>b.length</code> bytes to this output stream.<p> The <code>write</code> method of <code>FilterOutputStream</code> calls its <code>write</code> method of three arguments with the arguments <code>b</code>, <code>0</code>, and <code>b.length</code>.                   </p><p> Note that this method does not call the one-argument <code>write</code> method of its underlying stream with the single argument <code>b</code>.                    </p>      </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/OutputStream.html#write-byte:A-">write</a></code> in class <code><a href="../../java/io/OutputStream.html" title="class in java.io">OutputStream</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>b</code> - the data to be written.       </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs.       </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/FilterOutputStream.html#write-byte:A-int-int-"><code>write(byte[], int, int)  </code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:write-byte:A-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:write-byte:A-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:write-byte:A-int-int-"/><a name="write-byte:A-int-int-"/><ul class="blockList"><li class="blockList"><h4>write</h4><pre>public void write(byte[] b,
                  int off,
                  int len)
           throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Writes <code>len</code> bytes from the specified <code>byte</code> array starting at offset <code>off</code> to this output stream.<p> The <code>write</code> method of <code>FilterOutputStream</code> calls the <code>write</code> method of one argument on each <code>byte</code> to output.                 </p><p> Note that this method does not call the <code>write</code> method of its underlying input stream with the same arguments. Subclasses of <code>FilterOutputStream</code> should provide a more efficient implementation of this method.                               </p>               </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/OutputStream.html#write-byte:A-int-int-">write</a></code> in class <code><a href="../../java/io/OutputStream.html" title="class in java.io">OutputStream</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>b</code> - the data.    </dd><dd> <code>off</code> - the start offset in the data.        </dd><dd> <code>len</code> - the number of bytes to write.        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs.       </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/FilterOutputStream.html#write-int-"><code>write(int)</code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:write-byte:A-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:flush-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:flush--"/><a name="flush--"/><ul class="blockList"><li class="blockList"><h4>flush</h4><pre>public void flush()
           throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Flushes this output stream and forces any buffered output bytes to be written out to the stream.<p> The <code>flush</code> method of <code>FilterOutputStream</code> calls the <code>flush</code> method of its underlying output stream.              </p>                </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/Flushable.html#flush--">flush</a></code> in interface <code><a href="../../java/io/Flushable.html" title="interface in java.io">Flushable</a></code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/OutputStream.html#flush--">flush</a></code> in class <code><a href="../../java/io/OutputStream.html" title="class in java.io">OutputStream</a></code>  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs.       </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/FilterOutputStream.html#out"><code>out</code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:flush--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:close-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:close--"/><a name="close--"/><ul class="blockListLast"><li class="blockList"><h4>close</h4><pre>public void close()
           throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Closes this output stream and releases any system resources associated with the stream.<p> The <code>close</code> method of <code>FilterOutputStream</code> calls its <code>flush</code> method, and then calls the <code>close</code> method of its underlying output stream.                    </p>            </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/Closeable.html#close--">close</a></code> in interface <code><a href="../../java/io/Closeable.html" title="interface in java.io">Closeable</a></code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/AutoCloseable.html#close--">close</a></code> in interface <code><a href="../../java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a></code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/OutputStream.html#close--">close</a></code> in class <code><a href="../../java/io/OutputStream.html" title="class in java.io">OutputStream</a></code>  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs.       </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/FilterOutputStream.html#flush--"><code>flush()</code></a>, <a href="../../java/io/FilterOutputStream.html#out"><code>out</code></a>  </dd>     </dl></li></ul> <a end_ctx_id="method:close--"/>  </td></tr></table></td></tr></table></diff></diffreport>