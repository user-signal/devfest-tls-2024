<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:FilterWriter [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:FilterWriter"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../java/io/Closeable.html" title="interface in java.io">Closeable</a>, <a href="../../java/io/Flushable.html" title="interface in java.io">Flushable</a>, <a href="../../java/lang/Appendable.html" title="interface in java.lang">Appendable</a>, <a href="../../java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a>    </dd> </dl> <hr/> <br/><pre>public abstract class <span class="typeNameLabel">FilterWriter</span>
extends <a href="../../java/io/Writer.html" title="class in java.io">Writer</a></pre><div class="block">Abstract class for writing filtered character streams. The abstract class <code>FilterWriter</code> itself provides default methods that pass all requests to the contained stream. Subclasses of <code>FilterWriter</code> should override some of these methods and may also provide additional methods and fields.                                       </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>JDK1.1</dd> </dl>  </li></ul> </div> <a end_ctx_id="class:FilterWriter"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:out [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:out"/><a name="out"/><ul class="blockListLast"><li class="blockList"><h4>out</h4><pre>protected <a href="../../java/io/Writer.html" title="class in java.io">Writer</a> out</pre><div class="block">The underlying character-output stream.   </div></li></ul> <a end_ctx_id="field:out"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:FilterWriter-java.io.Writer- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:FilterWriter-java.io.Writer-"/><a name="FilterWriter-java.io.Writer-"/><ul class="blockListLast"><li class="blockList"><h4>FilterWriter</h4><pre>protected FilterWriter(<a href="../../java/io/Writer.html" title="class in java.io">Writer</a> out)</pre><div class="block">Create a new filtered writer.    </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>out</code> - a Writer object to provide the underlying stream.          </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if <code>out</code> is <code>null</code>      </dd>  </dl></li></ul> <a end_ctx_id="constructor:FilterWriter-java.io.Writer-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:write-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:write-int-"/><a name="write-int-"/><ul class="blockList"><li class="blockList"><h4>write</h4><pre>public void write(int c)
           throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Writes a single character.   </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/Writer.html#write-int-">write</a></code> in class <code><a href="../../java/io/Writer.html" title="class in java.io">Writer</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - int specifying a character to be written         </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - If an I/O error occurs       </dd>   </dl></li></ul> <a end_ctx_id="method:write-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:write-char:A-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:write-char:A-int-int-"/><a name="write-char:A-int-int-"/><ul class="blockList"><li class="blockList"><h4>write</h4><pre>public void write(char[] cbuf,
                  int off,
                  int len)
           throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Writes a portion of an array of characters.       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/Writer.html#write-char:A-int-int-">write</a></code> in class <code><a href="../../java/io/Writer.html" title="class in java.io">Writer</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>cbuf</code> - Buffer of characters to be written        </dd><dd> <code>off</code> - Offset from which to start reading characters         </dd><dd> <code>len</code> - Number of characters to be written        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - If an I/O error occurs       </dd>   </dl></li></ul> <a end_ctx_id="method:write-char:A-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:write-java.lang.String-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:write-java.lang.String-int-int-"/><a name="write-java.lang.String-int-int-"/><ul class="blockList"><li class="blockList"><h4>write</h4><pre>public void write(<a href="../../java/lang/String.html" title="class in java.lang">String</a> str,
                  int off,
                  int len)
           throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Writes a portion of a string.     </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/Writer.html#write-java.lang.String-int-int-">write</a></code> in class <code><a href="../../java/io/Writer.html" title="class in java.io">Writer</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>str</code> - String to be written      </dd><dd> <code>off</code> - Offset from which to start reading characters         </dd><dd> <code>len</code> - Number of characters to be written        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - If an I/O error occurs       </dd>   </dl></li></ul> <a end_ctx_id="method:write-java.lang.String-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:flush-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:flush--"/><a name="flush--"/><ul class="blockList"><li class="blockList"><h4>flush</h4><pre>public void flush()
           throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Flushes the stream.  </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/Flushable.html#flush--">flush</a></code> in interface <code><a href="../../java/io/Flushable.html" title="interface in java.io">Flushable</a></code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/Writer.html#flush--">flush</a></code> in class <code><a href="../../java/io/Writer.html" title="class in java.io">Writer</a></code>  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - If an I/O error occurs       </dd>   </dl></li></ul> <a end_ctx_id="method:flush--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:close-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:close--"/><a name="close--"/><ul class="blockListLast"><li class="blockList"><h4>close</h4><pre>public void close()
           throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block"> <span class="descfrmTypeLabel">Description copied from class: <code><a href="../../java/io/Writer.html#close--">Writer</a></code>   </span> </div><div class="block">Closes the stream, flushing it first. Once the stream has been closed, further write() or flush() invocations will cause an IOException to be thrown. Closing a previously closed stream has no effect.                               </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/Closeable.html#close--">close</a></code> in interface <code><a href="../../java/io/Closeable.html" title="interface in java.io">Closeable</a></code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/AutoCloseable.html#close--">close</a></code> in interface <code><a href="../../java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a></code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/Writer.html#close--">close</a></code> in class <code><a href="../../java/io/Writer.html" title="class in java.io">Writer</a></code>  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - If an I/O error occurs       </dd>    </dl></li></ul> <a end_ctx_id="method:close--"/>  </td></tr></table></td></tr></table></diff></diffreport>