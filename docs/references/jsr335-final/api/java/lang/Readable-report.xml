<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:Readable [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:Readable"/><ul class="blockList"><li class="blockList"><dl> <dt>All Known Implementing Classes:   </dt><dd> <a href="../../java/io/BufferedReader.html" title="class in java.io">BufferedReader</a>, <a href="../../java/io/CharArrayReader.html" title="class in java.io">CharArrayReader</a>, <a href="../../java/nio/CharBuffer.html" title="class in java.nio">CharBuffer</a>, <a href="../../java/io/FileReader.html" title="class in java.io">FileReader</a>, <a href="../../java/io/FilterReader.html" title="class in java.io">FilterReader</a>, <a href="../../java/io/InputStreamReader.html" title="class in java.io">InputStreamReader</a>, <a href="../../java/io/LineNumberReader.html" title="class in java.io">LineNumberReader</a>, <a href="../../java/io/PipedReader.html" title="class in java.io">PipedReader</a>, <a href="../../java/io/PushbackReader.html" title="class in java.io">PushbackReader</a>, <a href="../../java/io/Reader.html" title="class in java.io">Reader</a>, <a href="../../java/io/StringReader.html" title="class in java.io">StringReader</a>           </dd> </dl> <hr/> <br/><pre>public interface <span class="typeNameLabel">Readable</span></pre><div class="block">A <tt>Readable</tt> is a source of characters. Characters from a <tt>Readable</tt> are made available to callers of the read method via a <a href="../../java/nio/CharBuffer.html" title="class in java.nio"><code>CharBuffer</code></a>.                      </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd> </dl>  </li></ul> </div> <a end_ctx_id="class:Readable"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:read-java.nio.CharBuffer- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:read-java.nio.CharBuffer-"/><a name="read-java.nio.CharBuffer-"/><ul class="blockListLast"><li class="blockList"><h4>read</h4><pre>int read(<a href="../../java/nio/CharBuffer.html" title="class in java.nio">CharBuffer</a> cb)
  throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Attempts to read characters into the specified character buffer. The buffer is used as a repository of characters as-is: the only changes made are the results of a put operation. No flipping or rewinding of the buffer is performed.                                      </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>cb</code> - the buffer to read characters into        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>The number of <code>char</code> values added to the buffer, or -1 if this source of characters is at its end                   </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs       </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if cb is null      </dd><dd> <code><a href="../../java/nio/ReadOnlyBufferException.html" title="class in java.nio">ReadOnlyBufferException</a></code> - if cb is a read only buffer         </dd>   </dl></li></ul> <a end_ctx_id="method:read-java.nio.CharBuffer-"/>  </td></tr></table></td></tr></table></diff></diffreport>