<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:Package [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:Package"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../java/lang/reflect/AnnotatedElement.html" title="interface in java.lang.reflect">AnnotatedElement</a> </dd> </dl> <hr/> <br/><pre>public class <span class="typeNameLabel">Package</span>
extends <a href="../../java/lang/Object.html" title="class in java.lang">Object</a>
implements <a href="../../java/lang/reflect/AnnotatedElement.html" title="interface in java.lang.reflect">AnnotatedElement</a></pre><div class="block"> <code>Package</code> objects contain version information about the implementation and specification of a Java package. This versioning information is retrieved and made available by the <a href="../../java/lang/ClassLoader.html" title="class in java.lang"><code>ClassLoader</code></a> instance that loaded the class(es). Typically, it is stored in the manifest that is distributed with the classes.<p>The set of classes that make up the package may implement a particular specification and if so the specification title, version number, and vendor strings identify that specification. An application can ask if the package is compatible with a particular version, see the <a href="../../java/lang/Package.html#isCompatibleWith-java.lang.String-"><code>isCompatibleWith</code></a> method for details.                                              </p><p>Specification version numbers use a syntax that consists of nonnegative decimal integers separated by periods ".", for example "2.0" or "1.2.3.4.5.6.7". This allows an extensible number to be used to represent major, minor, micro, etc. versions. The version specification is described by the following formal grammar:                                             </p><blockquote><dl> <dt> <i>SpecificationVersion:</i>   </dt><dd> <i>Digits RefinedVersion<sub>opt</sub> </i> </dd> <dt> <i>RefinedVersion:</i>   </dt><dd> <code>.</code><i>Digits</i> </dd><dd> <code>.</code><i>Digits RefinedVersion </i> </dd> <dt> <i>Digits:</i>   </dt><dd> <i>Digit</i> </dd><dd> <i>Digits</i> </dd> <dt> <i>Digit:</i>   </dt><dd>any character for which <a href="../../java/lang/Character.html#isDigit-char-"><code>Character.isDigit(char)</code></a> returns <code>true</code>, e.g. 0, 1, 2, ...           </dd>    </dl></blockquote><p>The implementation title, version, and vendor strings identify an implementation and are made available conveniently to enable accurate reporting of the packages involved when a problem occurs. The contents all three implementation strings are vendor specific. The implementation version strings have no specified syntax and should only be compared for equality with desired version identifiers.                                                      </p><p>Within each <code>ClassLoader</code> instance all classes from the same java package have the same Package object. The static methods allow a package to be found by name or the set of all packages known to the current class loader to be found.                                         </p>                                           </div><dl> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/ClassLoader.html#definePackage-java.lang.String-java.lang.String-java.lang.String-java.lang.String-java.lang.String-java.lang.String-java.lang.String-java.net.URL-"><code>ClassLoader.definePackage(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.net.URL)       </code></a> </dd> </dl>  </li></ul> </div> <a end_ctx_id="class:Package"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getName-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getName--"/><a name="getName--"/><ul class="blockList"><li class="blockList"><h4>getName</h4><pre>public <a href="../../java/lang/String.html" title="class in java.lang">String</a> getName()</pre><div class="block">Return the name of this package.     </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>The fully-qualified name of this package as defined in section 6.5.3 of <cite>The Java™ Language Specification   </cite>, for example, <code>java.lang</code>               </dd> </dl></li></ul> <a end_ctx_id="method:getName--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getSpecificationTitle-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getSpecificationTitle--"/><a name="getSpecificationTitle--"/><ul class="blockList"><li class="blockList"><h4>getSpecificationTitle</h4><pre>public <a href="../../java/lang/String.html" title="class in java.lang">String</a> getSpecificationTitle()</pre><div class="block">Return the title of the specification that this package implements.         </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the specification title, null is returned if it is not known.          </dd> </dl></li></ul> <a end_ctx_id="method:getSpecificationTitle--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getSpecificationVersion-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getSpecificationVersion--"/><a name="getSpecificationVersion--"/><ul class="blockList"><li class="blockList"><h4>getSpecificationVersion</h4><pre>public <a href="../../java/lang/String.html" title="class in java.lang">String</a> getSpecificationVersion()</pre><div class="block">Returns the version number of the specification that this package implements. This version string must be a sequence of nonnegative decimal integers separated by "."'s and may have leading zeros. When version strings are compared the most significant numbers are compared.                                        </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the specification version, null is returned if it is not known.          </dd> </dl></li></ul> <a end_ctx_id="method:getSpecificationVersion--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getSpecificationVendor-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getSpecificationVendor--"/><a name="getSpecificationVendor--"/><ul class="blockList"><li class="blockList"><h4>getSpecificationVendor</h4><pre>public <a href="../../java/lang/String.html" title="class in java.lang">String</a> getSpecificationVendor()</pre><div class="block">Return the name of the organization, vendor, or company that owns and maintains the specification of the classes that implement this package.                     </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the specification vendor, null is returned if it is not known.          </dd> </dl></li></ul> <a end_ctx_id="method:getSpecificationVendor--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getImplementationTitle-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getImplementationTitle--"/><a name="getImplementationTitle--"/><ul class="blockList"><li class="blockList"><h4>getImplementationTitle</h4><pre>public <a href="../../java/lang/String.html" title="class in java.lang">String</a> getImplementationTitle()</pre><div class="block">Return the title of this package.     </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the title of the implementation, null is returned if it is not known.            </dd> </dl></li></ul> <a end_ctx_id="method:getImplementationTitle--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getImplementationVersion-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getImplementationVersion--"/><a name="getImplementationVersion--"/><ul class="blockList"><li class="blockList"><h4>getImplementationVersion</h4><pre>public <a href="../../java/lang/String.html" title="class in java.lang">String</a> getImplementationVersion()</pre><div class="block">Return the version of this implementation. It consists of any string assigned by the vendor of this implementation and does not have any particular syntax specified or expected by the Java runtime. It may be compared for equality with other package version strings used for this implementation by this vendor for this package.                                                    </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the version of the implementation, null is returned if it is not known.            </dd> </dl></li></ul> <a end_ctx_id="method:getImplementationVersion--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getImplementationVendor-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getImplementationVendor--"/><a name="getImplementationVendor--"/><ul class="blockList"><li class="blockList"><h4>getImplementationVendor</h4><pre>public <a href="../../java/lang/String.html" title="class in java.lang">String</a> getImplementationVendor()</pre><div class="block">Returns the name of the organization, vendor or company that provided this implementation.            </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the vendor that implemented this package..     </dd> </dl></li></ul> <a end_ctx_id="method:getImplementationVendor--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:isSealed-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:isSealed--"/><a name="isSealed--"/><ul class="blockList"><li class="blockList"><h4>isSealed</h4><pre>public boolean isSealed()</pre><div class="block">Returns true if this package is sealed.      </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>true if the package is sealed, false otherwise       </dd> </dl></li></ul> <a end_ctx_id="method:isSealed--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:isSealed-java.net.URL- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:isSealed-java.net.URL-"/><a name="isSealed-java.net.URL-"/><ul class="blockList"><li class="blockList"><h4>isSealed</h4><pre>public boolean isSealed(<a href="../../java/net/URL.html" title="class in java.net">URL</a> url)</pre><div class="block">Returns true if this package is sealed with respect to the specified code source url.              </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>url</code> - the code source url      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>true if this package is sealed with respect to url         </dd>  </dl></li></ul> <a end_ctx_id="method:isSealed-java.net.URL-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:isCompatibleWith-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:isCompatibleWith-java.lang.String-"/><a name="isCompatibleWith-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>isCompatibleWith</h4><pre>public boolean isCompatibleWith(<a href="../../java/lang/String.html" title="class in java.lang">String</a> desired)
                         throws <a href="../../java/lang/NumberFormatException.html" title="class in java.lang">NumberFormatException</a></pre><div class="block">Compare this package's specification version with a desired version. It returns true if this packages specification version number is greater than or equal to the desired version number.<p> Version numbers are compared by sequentially comparing corresponding components of the desired and specification strings. Each component is converted as a decimal integer and the values compared. If the specification value is greater than the desired value true is returned. If the value is less false is returned. If the values are equal the period is skipped and the next pair of components is compared.                                                                 </p>                           </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>desired</code> - the version string of the desired version.         </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>true if this package's version number is greater than or equal to the desired version number               </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NumberFormatException.html" title="class in java.lang">NumberFormatException</a></code> - if the desired or current version is not of the correct dotted form.               </dd>   </dl></li></ul> <a end_ctx_id="method:isCompatibleWith-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getPackage-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getPackage-java.lang.String-"/><a name="getPackage-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>getPackage</h4><pre>public static <a href="../../java/lang/Package.html" title="class in java.lang">Package</a> getPackage(<a href="../../java/lang/String.html" title="class in java.lang">String</a> name)</pre><div class="block">Find a package by name in the callers <code>ClassLoader</code> instance. The callers <code>ClassLoader</code> instance is used to find the package instance corresponding to the named class. If the callers <code>ClassLoader</code> instance is null then the set of packages loaded by the system <code>ClassLoader</code> instance is searched to find the named package.<p> Packages have attributes for versions and specifications only if the class loader created the package instance with the appropriate attributes. Typically, those attributes are defined in the manifests that accompany the classes.                                </p>                                                  </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>name</code> - a package name, for example, java.lang.        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the package of the requested name. It may be null if no package information is available from the archive or codebase.                    </dd>  </dl></li></ul> <a end_ctx_id="method:getPackage-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getPackages-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getPackages--"/><a name="getPackages--"/><ul class="blockList"><li class="blockList"><h4>getPackages</h4><pre>public static <a href="../../java/lang/Package.html" title="class in java.lang">Package</a>[] getPackages()</pre><div class="block">Get all the packages currently known for the caller's <code>ClassLoader</code> instance. Those packages correspond to classes loaded via or accessible by name to that <code>ClassLoader</code> instance. If the caller's <code>ClassLoader</code> instance is the bootstrap <code>ClassLoader</code> instance, which may be represented by <code>null</code> in some implementations, only packages corresponding to classes loaded by the bootstrap <code>ClassLoader</code> instance will be returned.                                                          </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a new array of packages known to the callers <code>ClassLoader</code> instance. An zero length array is returned if none are known.                    </dd> </dl></li></ul> <a end_ctx_id="method:getPackages--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:hashCode-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:hashCode--"/><a name="hashCode--"/><ul class="blockList"><li class="blockList"><h4>hashCode</h4><pre>public int hashCode()</pre><div class="block">Return the hash code computed from the package name.        </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/lang/Object.html#hashCode--">hashCode</a></code> in class <code><a href="../../java/lang/Object.html" title="class in java.lang">Object</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the hash code computed from the package name.       </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/Object.html#equals-java.lang.Object-"><code>Object.equals(java.lang.Object)</code></a>, <a href="../../java/lang/System.html#identityHashCode-java.lang.Object-"><code>System.identityHashCode(java.lang.Object)</code></a>  </dd>   </dl></li></ul> <a end_ctx_id="method:hashCode--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toString-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toString--"/><a name="toString--"/><ul class="blockList"><li class="blockList"><h4>toString</h4><pre>public <a href="../../java/lang/String.html" title="class in java.lang">String</a> toString()</pre><div class="block">Returns the string representation of this Package. Its value is the string "package " and the package name. If the package title is defined it is appended. If the package version is defined it is appended.                                   </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/lang/Object.html#toString--">toString</a></code> in class <code><a href="../../java/lang/Object.html" title="class in java.lang">Object</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the string representation of the package.     </dd>  </dl></li></ul> <a end_ctx_id="method:toString--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getAnnotation-java.lang.Class- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getAnnotation-java.lang.Class-"/><a name="getAnnotation-java.lang.Class-"/><ul class="blockList"><li class="blockList"><h4>getAnnotation</h4><pre>public &lt;A extends <a href="../../java/lang/annotation/Annotation.html" title="interface in java.lang.annotation">Annotation</a>&gt; A getAnnotation(<a href="../../java/lang/Class.html" title="class in java.lang">Class</a>&lt;A&gt; annotationClass)</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../java/lang/reflect/AnnotatedElement.html#getAnnotation-java.lang.Class-">AnnotatedElement</a></code>   </span> </div><div class="block">Returns this element's annotation for the specified type if such an annotation is <em>present</em>, else null.               </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/reflect/AnnotatedElement.html#getAnnotation-java.lang.Class-">getAnnotation</a></code> in interface <code><a href="../../java/lang/reflect/AnnotatedElement.html" title="interface in java.lang.reflect">AnnotatedElement</a></code>  </dd> <dt> <span class="paramLabel">Type Parameters: </span>   </dt><dd> <code>A</code> - the type of the annotation to query for and return if present              </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>annotationClass</code> - the Class object corresponding to the annotation type          </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>this element's annotation for the specified annotation type if present on this element, else null              </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the given annotation class is null         </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd>      </dl></li></ul> <a end_ctx_id="method:getAnnotation-java.lang.Class-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:isAnnotationPresent-java.lang.Class- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:isAnnotationPresent-java.lang.Class-"/><a name="isAnnotationPresent-java.lang.Class-"/><ul class="blockList"><li class="blockList"><h4>isAnnotationPresent</h4><pre>public boolean isAnnotationPresent(<a href="../../java/lang/Class.html" title="class in java.lang">Class</a>&lt;? extends <a href="../../java/lang/annotation/Annotation.html" title="interface in java.lang.annotation">Annotation</a>&gt; annotationClass)</pre><div class="block">Returns true if an annotation for the specified type is <em>present</em> on this element, else false. This method is designed primarily for convenient access to marker annotations.<p>The truth value returned by this method is equivalent to: <code>getAnnotation(annotationClass) != null  </code>          </p><p>The body of the default method is specified to be the code above.            </p>                          </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/reflect/AnnotatedElement.html#isAnnotationPresent-java.lang.Class-">isAnnotationPresent</a></code> in interface <code><a href="../../java/lang/reflect/AnnotatedElement.html" title="interface in java.lang.reflect">AnnotatedElement</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>annotationClass</code> - the Class object corresponding to the annotation type          </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>true if an annotation for the specified annotation type is present on this element, else false               </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the given annotation class is null         </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd>     </dl></li></ul> <a end_ctx_id="method:isAnnotationPresent-java.lang.Class-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getAnnotationsByType-java.lang.Class- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getAnnotationsByType-java.lang.Class-"/><a name="getAnnotationsByType-java.lang.Class-"/><ul class="blockList"><li class="blockList"><h4>getAnnotationsByType</h4><pre>public &lt;A extends <a href="../../java/lang/annotation/Annotation.html" title="interface in java.lang.annotation">Annotation</a>&gt; A[] getAnnotationsByType(<a href="../../java/lang/Class.html" title="class in java.lang">Class</a>&lt;A&gt; annotationClass)</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../java/lang/reflect/AnnotatedElement.html#getAnnotationsByType-java.lang.Class-">AnnotatedElement</a></code>   </span> </div><div class="block">Returns annotations that are <em>associated</em> with this element. If there are no annotations <em>associated</em> with this element, the return value is an array of length 0. The difference between this method and <a href="../../java/lang/reflect/AnnotatedElement.html#getAnnotation-java.lang.Class-"><code>AnnotatedElement.getAnnotation(Class)</code></a> is that this method detects if its argument is a <em>repeatable annotation type  </em> (JLS 9.6), and if so, attempts to find one or more annotations of that type by "looking through" a container annotation. The caller of this method is free to modify the returned array; it will have no effect on the arrays returned to other callers.                                                                                        </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/reflect/AnnotatedElement.html#getAnnotationsByType-java.lang.Class-">getAnnotationsByType</a></code> in interface <code><a href="../../java/lang/reflect/AnnotatedElement.html" title="interface in java.lang.reflect">AnnotatedElement</a></code>  </dd> <dt> <span class="paramLabel">Type Parameters: </span>   </dt><dd> <code>A</code> - the type of the annotation to query for and return if present              </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>annotationClass</code> - the Class object corresponding to the annotation type          </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>all this element's annotations for the specified annotation type if associated with this element, else an array of length zero                   </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the given annotation class is null         </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.8</dd>      </dl></li></ul> <a end_ctx_id="method:getAnnotationsByType-java.lang.Class-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getAnnotations-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getAnnotations--"/><a name="getAnnotations--"/><ul class="blockList"><li class="blockList"><h4>getAnnotations</h4><pre>public <a href="../../java/lang/annotation/Annotation.html" title="interface in java.lang.annotation">Annotation</a>[] getAnnotations()</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../java/lang/reflect/AnnotatedElement.html#getAnnotations--">AnnotatedElement</a></code>   </span> </div><div class="block">Returns annotations that are <em>present</em> on this element. If there are no annotations <em>present</em> on this element, the return value is an array of length 0. The caller of this method is free to modify the returned array; it will have no effect on the arrays returned to other callers.                                                 </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/reflect/AnnotatedElement.html#getAnnotations--">getAnnotations</a></code> in interface <code><a href="../../java/lang/reflect/AnnotatedElement.html" title="interface in java.lang.reflect">AnnotatedElement</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>annotations present on this element    </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd>   </dl></li></ul> <a end_ctx_id="method:getAnnotations--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getDeclaredAnnotation-java.lang.Class- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getDeclaredAnnotation-java.lang.Class-"/><a name="getDeclaredAnnotation-java.lang.Class-"/><ul class="blockList"><li class="blockList"><h4>getDeclaredAnnotation</h4><pre>public &lt;A extends <a href="../../java/lang/annotation/Annotation.html" title="interface in java.lang.annotation">Annotation</a>&gt; A getDeclaredAnnotation(<a href="../../java/lang/Class.html" title="class in java.lang">Class</a>&lt;A&gt; annotationClass)</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../java/lang/reflect/AnnotatedElement.html#getDeclaredAnnotation-java.lang.Class-">AnnotatedElement</a></code>   </span> </div><div class="block">Returns this element's annotation for the specified type if such an annotation is <em>directly present </em>, else null. This method ignores inherited annotations. (Returns null if no annotations are directly present on this element.)                               </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/reflect/AnnotatedElement.html#getDeclaredAnnotation-java.lang.Class-">getDeclaredAnnotation</a></code> in interface <code><a href="../../java/lang/reflect/AnnotatedElement.html" title="interface in java.lang.reflect">AnnotatedElement</a></code>  </dd> <dt> <span class="paramLabel">Type Parameters: </span>   </dt><dd> <code>A</code> - the type of the annotation to query for and return if directly present               </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>annotationClass</code> - the Class object corresponding to the annotation type          </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>this element's annotation for the specified annotation type if directly present on this element, else null               </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the given annotation class is null         </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.8</dd>      </dl></li></ul> <a end_ctx_id="method:getDeclaredAnnotation-java.lang.Class-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getDeclaredAnnotationsByType-java.lang.Class- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getDeclaredAnnotationsByType-java.lang.Class-"/><a name="getDeclaredAnnotationsByType-java.lang.Class-"/><ul class="blockList"><li class="blockList"><h4>getDeclaredAnnotationsByType</h4><pre>public &lt;A extends <a href="../../java/lang/annotation/Annotation.html" title="interface in java.lang.annotation">Annotation</a>&gt; A[] getDeclaredAnnotationsByType(<a href="../../java/lang/Class.html" title="class in java.lang">Class</a>&lt;A&gt; annotationClass)</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../java/lang/reflect/AnnotatedElement.html#getDeclaredAnnotationsByType-java.lang.Class-">AnnotatedElement</a></code>   </span> </div><div class="block">Returns this element's annotation(s) for the specified type if such annotations are either <em>directly present </em> or <em>indirectly present </em>. This method ignores inherited annotations. If there are no specified annotations directly or indirectly present on this element, the return value is an array of length 0. The difference between this method and <a href="../../java/lang/reflect/AnnotatedElement.html#getDeclaredAnnotation-java.lang.Class-"><code>AnnotatedElement.getDeclaredAnnotation(Class)</code></a> is that this method detects if its argument is a <em>repeatable annotation type  </em> (JLS 9.6), and if so, attempts to find one or more annotations of that type by "looking through" a container annotation if one is present. The caller of this method is free to modify the returned array; it will have no effect on the arrays returned to other callers.                                                                                                             </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/reflect/AnnotatedElement.html#getDeclaredAnnotationsByType-java.lang.Class-">getDeclaredAnnotationsByType</a></code> in interface <code><a href="../../java/lang/reflect/AnnotatedElement.html" title="interface in java.lang.reflect">AnnotatedElement</a></code>  </dd> <dt> <span class="paramLabel">Type Parameters: </span>   </dt><dd> <code>A</code> - the type of the annotation to query for and return if directly or indirectly present                 </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>annotationClass</code> - the Class object corresponding to the annotation type          </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>all this element's annotations for the specified annotation type if directly or indirectly present on this element, else an array of length zero                      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the given annotation class is null         </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.8</dd>      </dl></li></ul> <a end_ctx_id="method:getDeclaredAnnotationsByType-java.lang.Class-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getDeclaredAnnotations-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getDeclaredAnnotations--"/><a name="getDeclaredAnnotations--"/><ul class="blockListLast"><li class="blockList"><h4>getDeclaredAnnotations</h4><pre>public <a href="../../java/lang/annotation/Annotation.html" title="interface in java.lang.annotation">Annotation</a>[] getDeclaredAnnotations()</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../java/lang/reflect/AnnotatedElement.html#getDeclaredAnnotations--">AnnotatedElement</a></code>   </span> </div><div class="block">Returns annotations that are <em>directly present </em> on this element. This method ignores inherited annotations. If there are no annotations <em>directly present </em> on this element, the return value is an array of length 0. The caller of this method is free to modify the returned array; it will have no effect on the arrays returned to other callers.                                                      </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/reflect/AnnotatedElement.html#getDeclaredAnnotations--">getDeclaredAnnotations</a></code> in interface <code><a href="../../java/lang/reflect/AnnotatedElement.html" title="interface in java.lang.reflect">AnnotatedElement</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>annotations directly present on this element     </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd>   </dl></li></ul> <a end_ctx_id="method:getDeclaredAnnotations--"/>  </td></tr></table></td></tr></table></diff></diffreport>