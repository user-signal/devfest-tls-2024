<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:IllegalAccessException [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:IllegalAccessException"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a> </dd> </dl> <hr/> <br/><pre>public class <span class="typeNameLabel">IllegalAccessException</span>
extends <a href="../../java/lang/ReflectiveOperationException.html" title="class in java.lang">ReflectiveOperationException</a></pre><div class="block">An IllegalAccessException is thrown when an application tries to reflectively create an instance (other than an array), set or get a field, or invoke a method, but the currently executing method does not have access to the definition of the specified class, field, method or constructor.                                             </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>JDK1.0</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/Class.html#newInstance--"><code>Class.newInstance()</code></a>, <a href="../../java/lang/reflect/Field.html#set-java.lang.Object-java.lang.Object-"><code>Field.set(Object, Object) </code></a>, <a href="../../java/lang/reflect/Field.html#setBoolean-java.lang.Object-boolean-"><code>Field.setBoolean(Object, boolean) </code></a>, <a href="../../java/lang/reflect/Field.html#setByte-java.lang.Object-byte-"><code>Field.setByte(Object, byte) </code></a>, <a href="../../java/lang/reflect/Field.html#setShort-java.lang.Object-short-"><code>Field.setShort(Object, short) </code></a>, <a href="../../java/lang/reflect/Field.html#setChar-java.lang.Object-char-"><code>Field.setChar(Object, char) </code></a>, <a href="../../java/lang/reflect/Field.html#setInt-java.lang.Object-int-"><code>Field.setInt(Object, int) </code></a>, <a href="../../java/lang/reflect/Field.html#setLong-java.lang.Object-long-"><code>Field.setLong(Object, long) </code></a>, <a href="../../java/lang/reflect/Field.html#setFloat-java.lang.Object-float-"><code>Field.setFloat(Object, float) </code></a>, <a href="../../java/lang/reflect/Field.html#setDouble-java.lang.Object-double-"><code>Field.setDouble(Object, double) </code></a>, <a href="../../java/lang/reflect/Field.html#get-java.lang.Object-"><code>Field.get(Object)</code></a>, <a href="../../java/lang/reflect/Field.html#getBoolean-java.lang.Object-"><code>Field.getBoolean(Object)</code></a>, <a href="../../java/lang/reflect/Field.html#getByte-java.lang.Object-"><code>Field.getByte(Object)</code></a>, <a href="../../java/lang/reflect/Field.html#getShort-java.lang.Object-"><code>Field.getShort(Object)</code></a>, <a href="../../java/lang/reflect/Field.html#getChar-java.lang.Object-"><code>Field.getChar(Object)</code></a>, <a href="../../java/lang/reflect/Field.html#getInt-java.lang.Object-"><code>Field.getInt(Object)</code></a>, <a href="../../java/lang/reflect/Field.html#getLong-java.lang.Object-"><code>Field.getLong(Object)</code></a>, <a href="../../java/lang/reflect/Field.html#getFloat-java.lang.Object-"><code>Field.getFloat(Object)</code></a>, <a href="../../java/lang/reflect/Field.html#getDouble-java.lang.Object-"><code>Field.getDouble(Object)</code></a>, <a href="../../java/lang/reflect/Method.html#invoke-java.lang.Object-java.lang.Object...-"><code>Method.invoke(Object, Object[]) </code></a>, <a href="../../java/lang/reflect/Constructor.html#newInstance-java.lang.Object...-"><code>Constructor.newInstance(Object[])</code></a>, <a href="../../serialized-form.html#java.lang.IllegalAccessException">Serialized Form </a>                      </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:IllegalAccessException"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:IllegalAccessException-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:IllegalAccessException--"/><a name="IllegalAccessException--"/><ul class="blockList"><li class="blockList"><h4>IllegalAccessException</h4><pre>public IllegalAccessException()</pre><div class="block">Constructs an <code>IllegalAccessException</code> without a detail message.      </div></li></ul> <a end_ctx_id="constructor:IllegalAccessException--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:IllegalAccessException-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:IllegalAccessException-java.lang.String-"/><a name="IllegalAccessException-java.lang.String-"/><ul class="blockListLast"><li class="blockList"><h4>IllegalAccessException</h4><pre>public IllegalAccessException(<a href="../../java/lang/String.html" title="class in java.lang">String</a> s)</pre><div class="block">Constructs an <code>IllegalAccessException</code> with a detail message.      </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>s</code> - the detail message.     </dd> </dl></li></ul> <a end_ctx_id="constructor:IllegalAccessException-java.lang.String-"/>  </td></tr></table></td></tr></table></diff></diffreport>