<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:CharSequence [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:CharSequence"/><ul class="blockList"><li class="blockList"><dl> <dt>All Known Subinterfaces:  </dt><dd> <a href="../../javax/lang/model/element/Name.html" title="interface in javax.lang.model.element">Name</a> </dd> </dl><dl> <dt>All Known Implementing Classes:   </dt><dd> <a href="../../java/nio/CharBuffer.html" title="class in java.nio">CharBuffer</a>, <a href="../../javax/swing/text/Segment.html" title="class in javax.swing.text">Segment</a>, <a href="../../java/lang/String.html" title="class in java.lang">String</a>, <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a>, <a href="../../java/lang/StringBuilder.html" title="class in java.lang">StringBuilder</a>     </dd> </dl> <hr/> <br/><pre>public interface <span class="typeNameLabel">CharSequence</span></pre><div class="block">A <tt>CharSequence</tt> is a readable sequence of <code>char</code> values. This interface provides uniform, read-only access to many different kinds of <code>char</code> sequences. A <code>char</code> value represents a character in the <i>Basic Multilingual Plane (BMP)   </i> or a surrogate. Refer to <a href="Character.html#unicode">Unicode Character Representation  </a> for details.<p> This interface does not refine the general contracts of the <a href="../../java/lang/Object.html#equals-java.lang.Object-"><code>equals</code></a> and <a href="../../java/lang/Object.html#hashCode--"><code>hashCode</code></a> methods. The result of comparing two objects that implement <tt>CharSequence</tt> is therefore, in general, undefined. Each object may be implemented by a different class, and there is no guarantee that each class will be capable of testing its instances for equality with those of the other. It is therefore inappropriate to use arbitrary <tt>CharSequence</tt> instances as elements in a set or as keys in a map.                                                                               </p>                                      </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.4</dd> </dl>  </li></ul> </div> <a end_ctx_id="class:CharSequence"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:length-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:length--"/><a name="length--"/><ul class="blockList"><li class="blockList"><h4>length</h4><pre>int length()</pre><div class="block">Returns the length of this character sequence. The length is the number of 16-bit <code>char</code>s in the sequence.                 </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the number of <code>char</code>s in this sequence      </dd> </dl></li></ul> <a end_ctx_id="method:length--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:charAt-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:charAt-int-"/><a name="charAt-int-"/><ul class="blockList"><li class="blockList"><h4>charAt</h4><pre>char charAt(int index)</pre><div class="block">Returns the <code>char</code> value at the specified index. An index ranges from zero to <tt>length() - 1  </tt>. The first <code>char</code> value of the sequence is at index zero, the next at index one, and so on, as for array indexing.<p>If the <code>char</code> value specified by the index is a <a href="../../java/lang/Character.html#unicode">surrogate</a>, the surrogate value is returned.               </p>                                     </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - the index of the <code>char</code> value to be returned           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the specified <code>char</code> value   </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if the <tt>index</tt> argument is negative or not less than <tt>length()</tt>             </dd>   </dl></li></ul> <a end_ctx_id="method:charAt-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:subSequence-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:subSequence-int-int-"/><a name="subSequence-int-int-"/><ul class="blockList"><li class="blockList"><h4>subSequence</h4><pre><a href="../../java/lang/CharSequence.html" title="interface in java.lang">CharSequence</a> subSequence(int start,
                         int end)</pre><div class="block">Returns a <code>CharSequence</code> that is a subsequence of this sequence. The subsequence starts with the <code>char</code> value at the specified index and ends with the <code>char</code> value at index <tt>end - 1  </tt>. The length (in <code>char</code>s) of the returned sequence is <tt>end - start  </tt>, so if <tt>start == end  </tt> then an empty sequence is returned.                                                </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>start</code> - the start index, inclusive      </dd><dd> <code>end</code> - the end index, exclusive      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the specified subsequence  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if <tt>start</tt> or <tt>end</tt> are negative, if <tt>end</tt> is greater than <tt>length()</tt>, or if <tt>start</tt> is greater than <tt>end</tt>                     </dd>   </dl></li></ul> <a end_ctx_id="method:subSequence-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toString-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toString--"/><a name="toString--"/><ul class="blockList"><li class="blockList"><h4>toString</h4><pre><a href="../../java/lang/String.html" title="class in java.lang">String</a> toString()</pre><div class="block">Returns a string containing the characters in this sequence in the same order as this sequence. The length of the string will be the length of this sequence.                           </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/lang/Object.html#toString--">toString</a></code> in class <code><a href="../../java/lang/Object.html" title="class in java.lang">Object</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a string consisting of exactly this sequence of characters        </dd>  </dl></li></ul> <a end_ctx_id="method:toString--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:chars-- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:chars--"><span class="diff-html-added"/></a><a name="chars--"/><ul class="blockList"><li class="blockList"><h4><span class="diff-html-added">chars</span></h4><pre><span class="diff-html-added">default </span><a href="../../java/util/stream/IntStream.html" title="interface in java.util.stream"><span class="diff-html-added">IntStream</span></a><span class="diff-html-added"> chars()</span></pre><div class="block"><span class="diff-html-added">Returns</span> <span class="diff-html-added">a</span> <span class="diff-html-added">stream</span> <span class="diff-html-added">of</span> <code><span class="diff-html-added">int</span></code> <span class="diff-html-added">zero-extending</span> <span class="diff-html-added">the</span> <code><span class="diff-html-added">char</span></code> <span class="diff-html-added">values</span> <span class="diff-html-added">from</span> <span class="diff-html-added">this</span> <span class="diff-html-added">sequence.</span> <span class="diff-html-added">Any</span> <span class="diff-html-added">char</span> <span class="diff-html-added">which</span> <span class="diff-html-added">maps</span> <span class="diff-html-added">to</span> <span class="diff-html-added">a</span> <a href="../../java/lang/Character.html#unicode"><span class="diff-html-added">surrogate</span> <span class="diff-html-added">code</span> <span class="diff-html-added">point</span>  </a> <span class="diff-html-added">is</span> <span class="diff-html-added">passed</span> <span class="diff-html-added">through</span> <span class="diff-html-added">uninterpreted.</span><p><span class="diff-html-added">If</span> <span class="diff-html-added">the</span> <span class="diff-html-added">sequence</span> <span class="diff-html-added">is</span> <span class="diff-html-added">mutated</span> <span class="diff-html-added">while</span> <span class="diff-html-added">the</span> <span class="diff-html-added">stream</span> <span class="diff-html-added">is</span> <span class="diff-html-added">being</span> <span class="diff-html-added">read,</span> <span class="diff-html-added">the</span> <span class="diff-html-added">result</span> <span class="diff-html-added">is</span> <span class="diff-html-added">undefined.</span>              </p>                      </div><dl> <dt> <span class="returnLabel"><span class="diff-html-added">Returns:</span></span>   </dt><dd><span class="diff-html-added">an</span> <span class="diff-html-added">IntStream</span> <span class="diff-html-added">of</span> <span class="diff-html-added">char</span> <span class="diff-html-added">values</span> <span class="diff-html-added">from</span> <span class="diff-html-added">this</span> <span class="diff-html-added">sequence</span>       </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Since:</span></span>   </dt><dd><span class="diff-html-added">1.8</span></dd>  </dl></li></ul> <a end_ctx_id="method:chars--"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:codePoints-- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:codePoints--"><span class="diff-html-added"/></a><a name="codePoints--"/><ul class="blockListLast"><li class="blockList"><h4><span class="diff-html-added">codePoints</span></h4><pre><span class="diff-html-added">default </span><a href="../../java/util/stream/IntStream.html" title="interface in java.util.stream"><span class="diff-html-added">IntStream</span></a><span class="diff-html-added"> codePoints()</span></pre><div class="block"><span class="diff-html-added">Returns</span> <span class="diff-html-added">a</span> <span class="diff-html-added">stream</span> <span class="diff-html-added">of</span> <span class="diff-html-added">code</span> <span class="diff-html-added">point</span> <span class="diff-html-added">values</span> <span class="diff-html-added">from</span> <span class="diff-html-added">this</span> <span class="diff-html-added">sequence.</span> <span class="diff-html-added">Any</span> <span class="diff-html-added">surrogate</span> <span class="diff-html-added">pairs</span> <span class="diff-html-added">encountered</span> <span class="diff-html-added">in</span> <span class="diff-html-added">the</span> <span class="diff-html-added">sequence</span> <span class="diff-html-added">are</span> <span class="diff-html-added">combined</span> <span class="diff-html-added">as</span> <span class="diff-html-added">if</span> <span class="diff-html-added">by</span> <a href="../../java/lang/Character.html#toCodePoint-char-char-"><span class="diff-html-added">Character.toCodePoint</span></a> <span class="diff-html-added">and</span> <span class="diff-html-added">the</span> <span class="diff-html-added">result</span> <span class="diff-html-added">is</span> <span class="diff-html-added">passed</span> <span class="diff-html-added">to</span> <span class="diff-html-added">the</span> <span class="diff-html-added">stream.</span> <span class="diff-html-added">Any</span> <span class="diff-html-added">other</span> <span class="diff-html-added">code</span> <span class="diff-html-added">units,</span> <span class="diff-html-added">including</span> <span class="diff-html-added">ordinary</span> <span class="diff-html-added">BMP</span> <span class="diff-html-added">characters,</span> <span class="diff-html-added">unpaired</span> <span class="diff-html-added">surrogates,</span> <span class="diff-html-added">and</span> <span class="diff-html-added">undefined</span> <span class="diff-html-added">code</span> <span class="diff-html-added">units,</span> <span class="diff-html-added">are</span> <span class="diff-html-added">zero-extended</span> <span class="diff-html-added">to</span> <code><span class="diff-html-added">int</span></code> <span class="diff-html-added">values</span> <span class="diff-html-added">which</span> <span class="diff-html-added">are</span> <span class="diff-html-added">then</span> <span class="diff-html-added">passed</span> <span class="diff-html-added">to</span> <span class="diff-html-added">the</span> <span class="diff-html-added">stream.</span><p><span class="diff-html-added">If</span> <span class="diff-html-added">the</span> <span class="diff-html-added">sequence</span> <span class="diff-html-added">is</span> <span class="diff-html-added">mutated</span> <span class="diff-html-added">while</span> <span class="diff-html-added">the</span> <span class="diff-html-added">stream</span> <span class="diff-html-added">is</span> <span class="diff-html-added">being</span> <span class="diff-html-added">read,</span> <span class="diff-html-added">the</span> <span class="diff-html-added">result</span> <span class="diff-html-added">is</span> <span class="diff-html-added">undefined.</span>              </p>                                                        </div><dl> <dt> <span class="returnLabel"><span class="diff-html-added">Returns:</span></span>   </dt><dd><span class="diff-html-added">an</span> <span class="diff-html-added">IntStream</span> <span class="diff-html-added">of</span> <span class="diff-html-added">Unicode</span> <span class="diff-html-added">code</span> <span class="diff-html-added">points</span> <span class="diff-html-added">from</span> <span class="diff-html-added">this</span> <span class="diff-html-added">sequence</span>        </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Since:</span></span>   </dt><dd><span class="diff-html-added">1.8</span></dd>  </dl></li></ul> <a end_ctx_id="method:codePoints--"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table></diff></diffreport>