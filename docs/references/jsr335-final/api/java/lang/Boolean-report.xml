<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:Boolean [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:Boolean"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>, <a href="../../java/lang/Comparable.html" title="interface in java.lang">Comparable</a>&lt;<a href="../../java/lang/Boolean.html" title="class in java.lang">Boolean</a>&gt;  </dd> </dl> <hr/> <br/><pre>public final class <span class="typeNameLabel">Boolean</span>
extends <a href="../../java/lang/Object.html" title="class in java.lang">Object</a>
implements <a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>, <a href="../../java/lang/Comparable.html" title="interface in java.lang">Comparable</a>&lt;<a href="../../java/lang/Boolean.html" title="class in java.lang">Boolean</a>&gt;</pre><div class="block">The Boolean class wraps a value of the primitive type <code>boolean</code> in an object. An object of type <code>Boolean</code> contains a single field whose type is <code>boolean</code>.<p> In addition, this class provides many methods for converting a <code>boolean</code> to a <code>String</code> and a <code>String</code> to a <code>boolean</code>, as well as other constants and methods useful when dealing with a <code>boolean</code>.                                 </p>                          </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>JDK1.0</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../serialized-form.html#java.lang.Boolean">Serialized Form </a> </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:Boolean"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:TRUE [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:TRUE"/><a name="TRUE"/><ul class="blockList"><li class="blockList"><h4>TRUE</h4><pre>public static final <a href="../../java/lang/Boolean.html" title="class in java.lang">Boolean</a> TRUE</pre><div class="block">The <code>Boolean</code> object corresponding to the primitive value <code>true</code>.        </div></li></ul> <a end_ctx_id="field:TRUE"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:FALSE [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:FALSE"/><a name="FALSE"/><ul class="blockList"><li class="blockList"><h4>FALSE</h4><pre>public static final <a href="../../java/lang/Boolean.html" title="class in java.lang">Boolean</a> FALSE</pre><div class="block">The <code>Boolean</code> object corresponding to the primitive value <code>false</code>.        </div></li></ul> <a end_ctx_id="field:FALSE"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:TYPE [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:TYPE"/><a name="TYPE"/><ul class="blockListLast"><li class="blockList"><h4>TYPE</h4><pre>public static final <a href="../../java/lang/Class.html" title="class in java.lang">Class</a>&lt;<a href="../../java/lang/Boolean.html" title="class in java.lang">Boolean</a>&gt; TYPE</pre><div class="block">The Class object representing the primitive type boolean.       </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>JDK1.1</dd> </dl></li></ul> <a end_ctx_id="field:TYPE"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:Boolean-boolean- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:Boolean-boolean-"/><a name="Boolean-boolean-"/><ul class="blockList"><li class="blockList"><h4>Boolean</h4><pre>public Boolean(boolean value)</pre><div class="block">Allocates a <code>Boolean</code> object representing the <code>value</code> argument.<p> <b>Note: It is rarely appropriate to use this constructor. Unless a <i>new</i> instance is required, the static factory <a href="../../java/lang/Boolean.html#valueOf-boolean-"><code>valueOf(boolean)</code></a> is generally a better choice. It is likely to yield significantly better space and time performance.                                  </b> </p>       </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>value</code> - the value of the <code>Boolean</code>.       </dd> </dl></li></ul> <a end_ctx_id="constructor:Boolean-boolean-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:Boolean-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:Boolean-java.lang.String-"/><a name="Boolean-java.lang.String-"/><ul class="blockListLast"><li class="blockList"><h4>Boolean</h4><pre>public Boolean(<a href="../../java/lang/String.html" title="class in java.lang">String</a> s)</pre><div class="block">Allocates a <code>Boolean</code> object representing the value <code>true</code> if the string argument is not <code>null</code> and is equal, ignoring case, to the string <code>"true"</code>. Otherwise, allocate a <code>Boolean</code> object representing the value <code>false</code>. Examples:<p> <code>new Boolean("True") </code> produces a <code>Boolean</code> object that represents <code>true</code>.<br/> <code>new Boolean("yes") </code> produces a <code>Boolean</code> object that represents <code>false</code>.                </p>                                 </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>s</code> - the string to be converted to a <code>Boolean</code>.          </dd> </dl></li></ul> <a end_ctx_id="constructor:Boolean-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:parseBoolean-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:parseBoolean-java.lang.String-"/><a name="parseBoolean-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>parseBoolean</h4><pre>public static boolean parseBoolean(<a href="../../java/lang/String.html" title="class in java.lang">String</a> s)</pre><div class="block">Parses the string argument as a boolean. The <code>boolean</code> returned represents the value <code>true</code> if the string argument is not <code>null</code> and is equal, ignoring case, to the string <code>"true"</code>.<p> Example: <code>Boolean.parseBoolean("True")</code> returns <code>true</code>.<br/> Example: <code>Boolean.parseBoolean("yes")</code> returns <code>false</code>.        </p>                             </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>s</code> - the <code>String</code> containing the boolean representation to be parsed           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the boolean represented by the string argument      </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd>   </dl></li></ul> <a end_ctx_id="method:parseBoolean-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:booleanValue-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:booleanValue--"/><a name="booleanValue--"/><ul class="blockList"><li class="blockList"><h4>booleanValue</h4><pre>public boolean booleanValue()</pre><div class="block">Returns the value of this <code>Boolean</code> object as a boolean primitive.          </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the primitive <code>boolean</code> value of this object.      </dd> </dl></li></ul> <a end_ctx_id="method:booleanValue--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:valueOf-boolean- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:valueOf-boolean-"/><a name="valueOf-boolean-"/><ul class="blockList"><li class="blockList"><h4>valueOf</h4><pre>public static <a href="../../java/lang/Boolean.html" title="class in java.lang">Boolean</a> valueOf(boolean b)</pre><div class="block">Returns a <code>Boolean</code> instance representing the specified <code>boolean</code> value. If the specified <code>boolean</code> value is <code>true</code>, this method returns <code>Boolean.TRUE</code>; if it is <code>false</code>, this method returns <code>Boolean.FALSE</code>. If a new <code>Boolean</code> instance is not required, this method should generally be used in preference to the constructor <a href="../../java/lang/Boolean.html#Boolean-boolean-"><code>Boolean(boolean)</code></a>, as this method is likely to yield significantly better space and time performance.                                                            </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>b</code> - a boolean value.     </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a <code>Boolean</code> instance representing <code>b</code>.    </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.4</dd>   </dl></li></ul> <a end_ctx_id="method:valueOf-boolean-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:valueOf-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:valueOf-java.lang.String-"/><a name="valueOf-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>valueOf</h4><pre>public static <a href="../../java/lang/Boolean.html" title="class in java.lang">Boolean</a> valueOf(<a href="../../java/lang/String.html" title="class in java.lang">String</a> s)</pre><div class="block">Returns a <code>Boolean</code> with a value represented by the specified string. The <code>Boolean</code> returned represents a true value if the string argument is not <code>null</code> and is equal, ignoring case, to the string <code>"true"</code>.                                 </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>s</code> - a string.    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the <code>Boolean</code> value represented by the string.      </dd>  </dl></li></ul> <a end_ctx_id="method:valueOf-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toString-boolean- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toString-boolean-"/><a name="toString-boolean-"/><ul class="blockList"><li class="blockList"><h4>toString</h4><pre>public static <a href="../../java/lang/String.html" title="class in java.lang">String</a> toString(boolean b)</pre><div class="block">Returns a <code>String</code> object representing the specified boolean. If the specified boolean is <code>true</code>, then the string <code>"true"</code> will be returned, otherwise the string <code>"false"</code> will be returned.                           </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>b</code> - the boolean to be converted       </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the string representation of the specified <code>boolean</code>      </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.4</dd>   </dl></li></ul> <a end_ctx_id="method:toString-boolean-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toString-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toString--"/><a name="toString--"/><ul class="blockList"><li class="blockList"><h4>toString</h4><pre>public <a href="../../java/lang/String.html" title="class in java.lang">String</a> toString()</pre><div class="block">Returns a <code>String</code> object representing this Boolean's value. If this object represents the value <code>true</code>, a string equal to <code>"true"</code> is returned. Otherwise, a string equal to <code>"false"</code> is returned.                             </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/lang/Object.html#toString--">toString</a></code> in class <code><a href="../../java/lang/Object.html" title="class in java.lang">Object</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a string representation of this object.     </dd>  </dl></li></ul> <a end_ctx_id="method:toString--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:hashCode-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:hashCode--"/><a name="hashCode--"/><ul class="blockList"><li class="blockList"><h4>hashCode</h4><pre>public int hashCode()</pre><div class="block">Returns a hash code for this <code>Boolean</code> object.       </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/lang/Object.html#hashCode--">hashCode</a></code> in class <code><a href="../../java/lang/Object.html" title="class in java.lang">Object</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the integer <code>1231</code> if this object represents <code>true</code>; returns the integer <code>1237</code> if this object represents <code>false</code>.                </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/Object.html#equals-java.lang.Object-"><code>Object.equals(java.lang.Object)</code></a>, <a href="../../java/lang/System.html#identityHashCode-java.lang.Object-"><code>System.identityHashCode(java.lang.Object)</code></a>  </dd>   </dl></li></ul> <a end_ctx_id="method:hashCode--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:hashCode-boolean- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:hashCode-boolean-"/><a name="hashCode-boolean-"/><ul class="blockList"><li class="blockList"><h4>hashCode</h4><pre>public static int hashCode(boolean value)</pre><div class="block">Returns a hash code for a <code>boolean</code> value; compatible with <code>Boolean.hashCode()</code>.          </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>value</code> - the value to hash      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a hash code value for a <code>boolean</code> value.       </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.8</dd>   </dl></li></ul> <a end_ctx_id="method:hashCode-boolean-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:equals-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:equals-java.lang.Object-"/><a name="equals-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>equals</h4><pre>public boolean equals(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> obj)</pre><div class="block">Returns <code>true</code> if and only if the argument is not <code>null</code> and is a <code>Boolean</code> object that represents the same <code>boolean</code> value as this object.                        </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/lang/Object.html#equals-java.lang.Object-">equals</a></code> in class <code><a href="../../java/lang/Object.html" title="class in java.lang">Object</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>obj</code> - the object to compare with.       </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if the Boolean objects represent the same value; <code>false</code> otherwise.           </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/Object.html#hashCode--"><code>Object.hashCode()</code></a>, <a href="../../java/util/HashMap.html" title="class in java.util"><code>HashMap</code></a>  </dd>    </dl></li></ul> <a end_ctx_id="method:equals-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getBoolean-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getBoolean-java.lang.String-"/><a name="getBoolean-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>getBoolean</h4><pre>public static boolean getBoolean(<a href="../../java/lang/String.html" title="class in java.lang">String</a> name)</pre><div class="block">Returns <code>true</code> if and only if the system property named by the argument exists and is equal to the string <code>"true"</code>. (Beginning with version 1.0.2 of the Java<small><sup>TM</sup></small> platform, the test of this string is case insensitive.) A system property is accessible through <code>getProperty</code>, a method defined by the <code>System</code> class.<p> If there is no property with the specified name, or if the specified name is empty or null, then <code>false</code> is returned.                      </p>                                                  </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>name</code> - the system property name.      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the <code>boolean</code> value of the system property.      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/SecurityException.html" title="class in java.lang">SecurityException</a></code> - for the same reasons as <a href="../../java/lang/System.html#getProperty-java.lang.String-"><code>System.getProperty</code></a>        </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/System.html#getProperty-java.lang.String-"><code>System.getProperty(java.lang.String)</code></a>, <a href="../../java/lang/System.html#getProperty-java.lang.String-java.lang.String-"><code>System.getProperty(java.lang.String, java.lang.String) </code></a>  </dd>    </dl></li></ul> <a end_ctx_id="method:getBoolean-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:compareTo-java.lang.Boolean- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:compareTo-java.lang.Boolean-"/><a name="compareTo-java.lang.Boolean-"/><ul class="blockList"><li class="blockList"><h4>compareTo</h4><pre>public int compareTo(<a href="../../java/lang/Boolean.html" title="class in java.lang">Boolean</a> b)</pre><div class="block">Compares this <code>Boolean</code> instance with another.     </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/Comparable.html#compareTo-T-">compareTo</a></code> in interface <code><a href="../../java/lang/Comparable.html" title="interface in java.lang">Comparable</a>&lt;<a href="../../java/lang/Boolean.html" title="class in java.lang">Boolean</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>b</code> - the <code>Boolean</code> instance to be compared        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>zero if this object represents the same boolean value as the argument; a positive value if this object represents true and the argument represents false; and a negative value if this object represents false and the argument represents true                                      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the argument is <code>null</code>       </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/Comparable.html" title="interface in java.lang"><code>Comparable</code></a> </dd>      </dl></li></ul> <a end_ctx_id="method:compareTo-java.lang.Boolean-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:compare-boolean-boolean- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:compare-boolean-boolean-"/><a name="compare-boolean-boolean-"/><ul class="blockList"><li class="blockList"><h4>compare</h4><pre>public static int compare(boolean x,
                          boolean y)</pre><div class="block">Compares two <code>boolean</code> values. The value returned is identical to what would be returned by:<pre>
    Boolean.valueOf(x).compareTo(Boolean.valueOf(y))
 </pre>              </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>x</code> - the first <code>boolean</code> to compare       </dd><dd> <code>y</code> - the second <code>boolean</code> to compare       </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the value <code>0</code> if <code>x == y  </code>; a value less than <code>0</code> if <code>!x &amp;&amp; y  </code>; and a value greater than <code>0</code> if <code>x &amp;&amp; !y  </code>                   </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.7</dd>   </dl></li></ul> <a end_ctx_id="method:compare-boolean-boolean-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:logicalAnd-boolean-boolean- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:logicalAnd-boolean-boolean-"><span class="diff-html-added"/></a><a name="logicalAnd-boolean-boolean-"/><ul class="blockList"><li class="blockList"><h4><span class="diff-html-added">logicalAnd</span></h4><pre><span class="diff-html-added">public</span> <span class="diff-html-added">static boolean logicalAnd(boolean a,</span>
                                 <span class="diff-html-added">boolean b)</span></pre><div class="block"><span class="diff-html-added">Returns</span> <span class="diff-html-added">the</span> <span class="diff-html-added">result</span> <span class="diff-html-added">of</span> <span class="diff-html-added">applying</span> <span class="diff-html-added">the</span> <span class="diff-html-added">logical</span> <span class="diff-html-added">AND</span> <span class="diff-html-added">operator</span> <span class="diff-html-added">to</span> <span class="diff-html-added">the</span> <span class="diff-html-added">specified</span> <code><span class="diff-html-added">boolean</span></code> <span class="diff-html-added">operands.</span>             </div><dl> <dt> <span class="paramLabel"><span class="diff-html-added">Parameters:</span></span>   </dt><dd> <code><span class="diff-html-added">a</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">the</span> <span class="diff-html-added">first</span> <span class="diff-html-added">operand</span>     </dd><dd> <code><span class="diff-html-added">b</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">the</span> <span class="diff-html-added">second</span> <span class="diff-html-added">operand</span>     </dd> <dt> <span class="returnLabel"><span class="diff-html-added">Returns:</span></span>   </dt><dd><span class="diff-html-added">the</span> <span class="diff-html-added">logical</span> <span class="diff-html-added">AND</span> <span class="diff-html-added">of</span> <code><span class="diff-html-added">a</span></code> <span class="diff-html-added">and</span> <code><span class="diff-html-added">b</span></code>      </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Since:</span></span>   </dt><dd><span class="diff-html-added">1.8</span></dd> <dt> <span class="seeLabel"><span class="diff-html-added">See</span> <span class="diff-html-added">Also:</span> </span>   </dt><dd> <a href="../../java/util/function/BinaryOperator.html" title="interface in java.util.function"><code><span class="diff-html-added">BinaryOperator</span></code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:logicalAnd-boolean-boolean-"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:logicalOr-boolean-boolean- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:logicalOr-boolean-boolean-"><span class="diff-html-added"/></a><a name="logicalOr-boolean-boolean-"/><ul class="blockList"><li class="blockList"><h4><span class="diff-html-added">logicalOr</span></h4><pre><span class="diff-html-added">public</span> <span class="diff-html-added">static boolean logicalOr(boolean a,</span>
                                <span class="diff-html-added">boolean b)</span></pre><div class="block"><span class="diff-html-added">Returns</span> <span class="diff-html-added">the</span> <span class="diff-html-added">result</span> <span class="diff-html-added">of</span> <span class="diff-html-added">applying</span> <span class="diff-html-added">the</span> <span class="diff-html-added">logical</span> <span class="diff-html-added">OR</span> <span class="diff-html-added">operator</span> <span class="diff-html-added">to</span> <span class="diff-html-added">the</span> <span class="diff-html-added">specified</span> <code><span class="diff-html-added">boolean</span></code> <span class="diff-html-added">operands.</span>             </div><dl> <dt> <span class="paramLabel"><span class="diff-html-added">Parameters:</span></span>   </dt><dd> <code><span class="diff-html-added">a</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">the</span> <span class="diff-html-added">first</span> <span class="diff-html-added">operand</span>     </dd><dd> <code><span class="diff-html-added">b</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">the</span> <span class="diff-html-added">second</span> <span class="diff-html-added">operand</span>     </dd> <dt> <span class="returnLabel"><span class="diff-html-added">Returns:</span></span>   </dt><dd><span class="diff-html-added">the</span> <span class="diff-html-added">logical</span> <span class="diff-html-added">OR</span> <span class="diff-html-added">of</span> <code><span class="diff-html-added">a</span></code> <span class="diff-html-added">and</span> <code><span class="diff-html-added">b</span></code>      </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Since:</span></span>   </dt><dd><span class="diff-html-added">1.8</span></dd> <dt> <span class="seeLabel"><span class="diff-html-added">See</span> <span class="diff-html-added">Also:</span> </span>   </dt><dd> <a href="../../java/util/function/BinaryOperator.html" title="interface in java.util.function"><code><span class="diff-html-added">BinaryOperator</span></code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:logicalOr-boolean-boolean-"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:logicalXor-boolean-boolean- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:logicalXor-boolean-boolean-"><span class="diff-html-added"/></a><a name="logicalXor-boolean-boolean-"/><ul class="blockListLast"><li class="blockList"><h4><span class="diff-html-added">logicalXor</span></h4><pre><span class="diff-html-added">public</span> <span class="diff-html-added">static boolean logicalXor(boolean a,</span>
                                 <span class="diff-html-added">boolean b)</span></pre><div class="block"><span class="diff-html-added">Returns</span> <span class="diff-html-added">the</span> <span class="diff-html-added">result</span> <span class="diff-html-added">of</span> <span class="diff-html-added">applying</span> <span class="diff-html-added">the</span> <span class="diff-html-added">logical</span> <span class="diff-html-added">XOR</span> <span class="diff-html-added">operator</span> <span class="diff-html-added">to</span> <span class="diff-html-added">the</span> <span class="diff-html-added">specified</span> <code><span class="diff-html-added">boolean</span></code> <span class="diff-html-added">operands.</span>             </div><dl> <dt> <span class="paramLabel"><span class="diff-html-added">Parameters:</span></span>   </dt><dd> <code><span class="diff-html-added">a</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">the</span> <span class="diff-html-added">first</span> <span class="diff-html-added">operand</span>     </dd><dd> <code><span class="diff-html-added">b</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">the</span> <span class="diff-html-added">second</span> <span class="diff-html-added">operand</span>     </dd> <dt> <span class="returnLabel"><span class="diff-html-added">Returns:</span></span>   </dt><dd><span class="diff-html-added">the</span> <span class="diff-html-added">logical</span> <span class="diff-html-added">XOR</span> <span class="diff-html-added">of</span> <code><span class="diff-html-added">a</span></code> <span class="diff-html-added">and</span> <code><span class="diff-html-added">b</span></code>      </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Since:</span></span>   </dt><dd><span class="diff-html-added">1.8</span></dd> <dt> <span class="seeLabel"><span class="diff-html-added">See</span> <span class="diff-html-added">Also:</span> </span>   </dt><dd> <a href="../../java/util/function/BinaryOperator.html" title="interface in java.util.function"><code><span class="diff-html-added">BinaryOperator</span></code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:logicalXor-boolean-boolean-"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table></diff></diffreport>