<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:Number [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:Number"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a> </dd> </dl><dl> <dt>Direct Known Subclasses:  </dt><dd> <a href="../../java/util/concurrent/atomic/AtomicInteger.html" title="class in java.util.concurrent.atomic">AtomicInteger</a>, <a href="../../java/util/concurrent/atomic/AtomicLong.html" title="class in java.util.concurrent.atomic">AtomicLong</a>, <a href="../../java/math/BigDecimal.html" title="class in java.math">BigDecimal</a>, <a href="../../java/math/BigInteger.html" title="class in java.math">BigInteger</a>, <a href="../../java/lang/Byte.html" title="class in java.lang">Byte</a>, <a href="../../java/lang/Double.html" title="class in java.lang">Double</a>, <a href="../../java/util/concurrent/atomic/DoubleAccumulator.html" title="class in java.util.concurrent.atomic">DoubleAccumulator</a>, <a href="../../java/util/concurrent/atomic/DoubleAdder.html" title="class in java.util.concurrent.atomic">DoubleAdder</a>, <a href="../../java/lang/Float.html" title="class in java.lang">Float</a>, <a href="../../java/lang/Integer.html" title="class in java.lang">Integer</a>, <a href="../../java/lang/Long.html" title="class in java.lang">Long</a>, <a href="../../java/util/concurrent/atomic/LongAccumulator.html" title="class in java.util.concurrent.atomic">LongAccumulator</a>, <a href="../../java/util/concurrent/atomic/LongAdder.html" title="class in java.util.concurrent.atomic">LongAdder</a>, <a href="../../java/lang/Short.html" title="class in java.lang">Short</a>              </dd> </dl> <hr/> <br/><pre>public abstract class <span class="typeNameLabel">Number</span>
extends <a href="../../java/lang/Object.html" title="class in java.lang">Object</a>
implements <a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a></pre><div class="block">The abstract class <code>Number</code> is the superclass of platform classes representing numeric values that are convertible to the primitive types <code>byte</code>, <code>double</code>, <code>float</code>, <code>int</code>, <code>long</code>, and <code>short</code>. The specific semantics of the conversion from the numeric value of a particular <code>Number</code> implementation to a given primitive type is defined by the <code>Number</code> implementation in question. For platform classes, the conversion is often analogous to a narrowing primitive conversion or a widening primitive conversion as defining in <cite>The Java™ Language Specification   </cite> for converting between primitive types. Therefore, conversions may lose information about the overall magnitude of a numeric value, may lose precision, and may even return a result of a different sign than the input. See the documentation of a given <code>Number</code> implementation for conversion details.                                                                                                                         </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>JDK1.0</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../serialized-form.html#java.lang.Number">Serialized Form </a> </dd> <dt> <span class="simpleTagLabel">See <cite> The Java™ Language Specification    </cite>: </span>   </dt><dd>5.1.2 Widening Primitive Conversions, 5.1.3 Narrowing Primitive Conversions       </dd>   </dl>  </li></ul> </div> <a end_ctx_id="class:Number"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:Number-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:Number--"/><a name="Number--"/><ul class="blockListLast"><li class="blockList"><h4>Number</h4><pre>public Number()</pre></li></ul> <a end_ctx_id="constructor:Number--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:intValue-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:intValue--"/><a name="intValue--"/><ul class="blockList"><li class="blockList"><h4>intValue</h4><pre>public abstract int intValue()</pre><div class="block">Returns the value of the specified number as an <code>int</code>, which may involve rounding or truncation.               </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the numeric value represented by this object after conversion to type <code>int</code>.           </dd> </dl></li></ul> <a end_ctx_id="method:intValue--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:longValue-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:longValue--"/><a name="longValue--"/><ul class="blockList"><li class="blockList"><h4>longValue</h4><pre>public abstract long longValue()</pre><div class="block">Returns the value of the specified number as a <code>long</code>, which may involve rounding or truncation.               </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the numeric value represented by this object after conversion to type <code>long</code>.           </dd> </dl></li></ul> <a end_ctx_id="method:longValue--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:floatValue-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:floatValue--"/><a name="floatValue--"/><ul class="blockList"><li class="blockList"><h4>floatValue</h4><pre>public abstract float floatValue()</pre><div class="block">Returns the value of the specified number as a <code>float</code>, which may involve rounding.             </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the numeric value represented by this object after conversion to type <code>float</code>.           </dd> </dl></li></ul> <a end_ctx_id="method:floatValue--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:doubleValue-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:doubleValue--"/><a name="doubleValue--"/><ul class="blockList"><li class="blockList"><h4>doubleValue</h4><pre>public abstract double doubleValue()</pre><div class="block">Returns the value of the specified number as a <code>double</code>, which may involve rounding.             </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the numeric value represented by this object after conversion to type <code>double</code>.           </dd> </dl></li></ul> <a end_ctx_id="method:doubleValue--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:byteValue-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:byteValue--"/><a name="byteValue--"/><ul class="blockList"><li class="blockList"><h4>byteValue</h4><pre>public byte byteValue()</pre><div class="block">Returns the value of the specified number as a <code>byte</code>, which may involve rounding or truncation.<p>This implementation returns the result of <a href="../../java/lang/Number.html#intValue--"><code>intValue()</code></a> cast to a <code>byte</code>.          </p>               </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the numeric value represented by this object after conversion to type <code>byte</code>.           </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>JDK1.1</dd>  </dl></li></ul> <a end_ctx_id="method:byteValue--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:shortValue-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:shortValue--"/><a name="shortValue--"/><ul class="blockListLast"><li class="blockList"><h4>shortValue</h4><pre>public short shortValue()</pre><div class="block">Returns the value of the specified number as a <code>short</code>, which may involve rounding or truncation.<p>This implementation returns the result of <a href="../../java/lang/Number.html#intValue--"><code>intValue()</code></a> cast to a <code>short</code>.          </p>               </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the numeric value represented by this object after conversion to type <code>short</code>.           </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>JDK1.1</dd>  </dl></li></ul> <a end_ctx_id="method:shortValue--"/>  </td></tr></table></td></tr></table></diff></diffreport>