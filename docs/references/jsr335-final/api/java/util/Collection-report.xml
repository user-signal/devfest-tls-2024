<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:Collection [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:Collection"/><ul class="blockList"><li class="blockList"><dl> <dt> <span class="paramLabel">Type Parameters: </span>   </dt><dd> <code>E</code> - the type of elements in this collection         </dd> </dl><dl> <dt>All Superinterfaces: </dt><dd> <a href="../../java/lang/Iterable.html" title="interface in java.lang">Iterable</a>&lt;E&gt; </dd> </dl><dl> <dt>All Known Subinterfaces:  </dt><dd> <a href="../../java/beans/beancontext/BeanContext.html" title="interface in java.beans.beancontext">BeanContext</a>, <a href="../../java/beans/beancontext/BeanContextServices.html" title="interface in java.beans.beancontext">BeanContextServices</a>, <a href="../../java/util/concurrent/BlockingDeque.html" title="interface in java.util.concurrent">BlockingDeque</a>&lt;E&gt;, <a href="../../java/util/concurrent/BlockingQueue.html" title="interface in java.util.concurrent">BlockingQueue</a>&lt;E&gt;, <a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;E&gt;, <a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;E&gt;, <a href="../../java/util/NavigableSet.html" title="interface in java.util">NavigableSet</a>&lt;E&gt;, <a href="../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;E&gt;, <a href="../../java/util/Set.html" title="interface in java.util">Set</a>&lt;E&gt;, <a href="../../java/util/SortedSet.html" title="interface in java.util">SortedSet</a>&lt;E&gt;, <a href="../../java/util/concurrent/TransferQueue.html" title="interface in java.util.concurrent">TransferQueue</a>&lt;E&gt;           </dd> </dl><dl> <dt>All Known Implementing Classes:   </dt><dd> <a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>, <a href="../../java/util/AbstractList.html" title="class in java.util">AbstractList</a>, <a href="../../java/util/AbstractQueue.html" title="class in java.util">AbstractQueue</a>, <a href="../../java/util/AbstractSequentialList.html" title="class in java.util">AbstractSequentialList</a>, <a href="../../java/util/AbstractSet.html" title="class in java.util">AbstractSet</a>, <a href="../../java/util/concurrent/ArrayBlockingQueue.html" title="class in java.util.concurrent">ArrayBlockingQueue</a>, <a href="../../java/util/ArrayDeque.html" title="class in java.util">ArrayDeque</a>, <a href="../../java/util/ArrayList.html" title="class in java.util">ArrayList</a>, <a href="../../javax/management/AttributeList.html" title="class in javax.management">AttributeList</a>, <a href="../../java/beans/beancontext/BeanContextServicesSupport.html" title="class in java.beans.beancontext">BeanContextServicesSupport</a>, <a href="../../java/beans/beancontext/BeanContextSupport.html" title="class in java.beans.beancontext">BeanContextSupport</a>, <a href="../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="class in java.util.concurrent">ConcurrentHashMap.KeySetView</a>, <a href="../../java/util/concurrent/ConcurrentLinkedDeque.html" title="class in java.util.concurrent">ConcurrentLinkedDeque</a>, <a href="../../java/util/concurrent/ConcurrentLinkedQueue.html" title="class in java.util.concurrent">ConcurrentLinkedQueue</a>, <a href="../../java/util/concurrent/ConcurrentSkipListSet.html" title="class in java.util.concurrent">ConcurrentSkipListSet</a>, <a href="../../java/util/concurrent/CopyOnWriteArrayList.html" title="class in java.util.concurrent">CopyOnWriteArrayList</a>, <a href="../../java/util/concurrent/CopyOnWriteArraySet.html" title="class in java.util.concurrent">CopyOnWriteArraySet</a>, <a href="../../java/util/concurrent/DelayQueue.html" title="class in java.util.concurrent">DelayQueue</a>, <a href="../../java/util/EnumSet.html" title="class in java.util">EnumSet</a>, <a href="../../java/util/HashSet.html" title="class in java.util">HashSet</a>, <a href="../../javax/print/attribute/standard/JobStateReasons.html" title="class in javax.print.attribute.standard">JobStateReasons</a>, <a href="../../java/util/concurrent/LinkedBlockingDeque.html" title="class in java.util.concurrent">LinkedBlockingDeque</a>, <a href="../../java/util/concurrent/LinkedBlockingQueue.html" title="class in java.util.concurrent">LinkedBlockingQueue</a>, <a href="../../java/util/LinkedHashSet.html" title="class in java.util">LinkedHashSet</a>, <a href="../../java/util/LinkedList.html" title="class in java.util">LinkedList</a>, <a href="../../java/util/concurrent/LinkedTransferQueue.html" title="class in java.util.concurrent">LinkedTransferQueue</a>, <a href="../../java/util/concurrent/PriorityBlockingQueue.html" title="class in java.util.concurrent">PriorityBlockingQueue</a>, <a href="../../java/util/PriorityQueue.html" title="class in java.util">PriorityQueue</a>, <a href="../../javax/management/relation/RoleList.html" title="class in javax.management.relation">RoleList</a>, <a href="../../javax/management/relation/RoleUnresolvedList.html" title="class in javax.management.relation">RoleUnresolvedList</a>, <a href="../../java/util/Stack.html" title="class in java.util">Stack</a>, <a href="../../java/util/concurrent/SynchronousQueue.html" title="class in java.util.concurrent">SynchronousQueue</a>, <a href="../../java/util/TreeSet.html" title="class in java.util">TreeSet</a>, <a href="../../java/util/Vector.html" title="class in java.util">Vector</a>                                  </dd> </dl> <hr/> <br/><pre>public interface <span class="typeNameLabel">Collection&lt;E&gt;</span>
extends <a href="../../java/lang/Iterable.html" title="interface in java.lang">Iterable</a>&lt;E&gt;</pre><div class="block">The root interface in the <i>collection hierarchy </i>. A collection represents a group of objects, known as its <i>elements</i>. Some collections allow duplicate elements and others do not. Some are ordered and others unordered. The JDK does not provide any <i>direct</i> implementations of this interface: it provides implementations of more specific subinterfaces like <tt>Set</tt> and <tt>List</tt>. This interface is typically used to pass collections around and manipulate them where maximum generality is desired.<p> <i>Bags</i> or <i>multisets</i> (unordered collections that may contain duplicate elements) should implement this interface directly.               </p><p>All general-purpose <tt>Collection</tt> implementation classes (which typically implement <tt>Collection</tt> indirectly through one of its subinterfaces) should provide two "standard" constructors: a void (no arguments) constructor, which creates an empty collection, and a constructor with a single argument of type <tt>Collection</tt>, which creates a new collection with the same elements as its argument. In effect, the latter constructor allows the user to copy any collection, producing an equivalent collection of the desired implementation type. There is no way to enforce this convention (as interfaces cannot contain constructors) but all of the general-purpose <tt>Collection</tt> implementations in the Java platform libraries comply.                                                                                                  </p><p>The "destructive" methods contained in this interface, that is, the methods that modify the collection on which they operate, are specified to throw <tt>UnsupportedOperationException</tt> if this collection does not support the operation. If this is the case, these methods may, but are not required to, throw an <tt>UnsupportedOperationException</tt> if the invocation would have no effect on the collection. For example, invoking the <a href="../../java/util/Collection.html#addAll-java.util.Collection-"><code>addAll(Collection)</code></a> method on an unmodifiable collection may, but is not required to, throw the exception if the collection to be added is empty.                                                                                    </p><p> <a name="optional-restrictions"> Some collection implementations have restrictions on the elements that they may contain.            </a> For example, some implementations prohibit null elements, and some have restrictions on the types of their elements. Attempting to add an ineligible element throws an unchecked exception, typically <tt>NullPointerException</tt> or <tt>ClassCastException</tt>. Attempting to query the presence of an ineligible element may throw an exception, or it may simply return false; some implementations will exhibit the former behavior and some will exhibit the latter. More generally, attempting an operation on an ineligible element whose completion would not result in the insertion of an ineligible element into the collection may throw an exception or it may succeed, at the option of the implementation. Such exceptions are marked as "optional" in the specification for this interface.                                                                                                                  </p><p>It is up to each collection to determine its own synchronization policy. In the absence of a stronger guarantee by the implementation, undefined behavior may result from the invocation of any method on a collection that is being mutated by another thread; this includes direct invocations, passing the collection to a method that might perform invocations, and using an existing iterator to examine the collection.                                                                </p><p>Many methods in Collections Framework interfaces are defined in terms of the <a href="../../java/lang/Object.html#equals-java.lang.Object-"><code>equals</code></a> method. For example, the specification for the <a href="../../java/util/Collection.html#contains-java.lang.Object-"><code>contains(Object o) </code></a> method says: "returns <tt>true</tt> if and only if this collection contains at least one element <tt>e</tt> such that <tt>(o==null ? e==null : o.equals(e))    </tt>." This specification should <i>not</i> be construed to imply that invoking <tt>Collection.contains</tt> with a non-null argument <tt>o</tt> will cause <tt>o.equals(e)</tt> to be invoked for any element <tt>e</tt>. Implementations are free to implement optimizations whereby the <tt>equals</tt> invocation is avoided, for example, by first comparing the hash codes of the two elements. (The <a href="../../java/lang/Object.html#hashCode--"><code>Object.hashCode()</code></a> specification guarantees that two objects with unequal hash codes cannot be equal.) More generally, implementations of the various Collections Framework interfaces are free to take advantage of the specified behavior of underlying <a href="../../java/lang/Object.html" title="class in java.lang"><code>Object</code></a> methods wherever the implementor deems it appropriate.                                                                                                                                   </p><p>Some collection operations which perform recursive traversal of the collection may fail with an exception for self-referential instances where the collection directly or indirectly contains itself. This includes the <code>clone()</code>, <code>equals()</code>, <code>hashCode()</code> and <code>toString()</code> methods. Implementations may optionally handle the self-referential scenario, however most current implementations do not do so.                                                 </p><p>This interface is a member of the <a href="http://download.oracle.com/javase/7/docs/technotes/guides/collections/index.html"> Java Collections Framework   </a>.       </p>                                                                      </div><dl> <dt> <span class="simpleTagLabel">Implementation Requirements: </span>   </dt><dd>The default method implementations (inherited or otherwise) do not apply any synchronization protocol. If a <code>Collection</code> implementation has a specific synchronization protocol, then it must override default implementations to apply that protocol.                               </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Set.html" title="interface in java.util"><code>Set</code></a>, <a href="../../java/util/List.html" title="interface in java.util"><code>List</code></a>, <a href="../../java/util/Map.html" title="interface in java.util"><code>Map</code></a>, <a href="../../java/util/SortedSet.html" title="interface in java.util"><code>SortedSet</code></a>, <a href="../../java/util/SortedMap.html" title="interface in java.util"><code>SortedMap</code></a>, <a href="../../java/util/HashSet.html" title="class in java.util"><code>HashSet</code></a>, <a href="../../java/util/TreeSet.html" title="class in java.util"><code>TreeSet</code></a>, <a href="../../java/util/ArrayList.html" title="class in java.util"><code>ArrayList</code></a>, <a href="../../java/util/LinkedList.html" title="class in java.util"><code>LinkedList</code></a>, <a href="../../java/util/Vector.html" title="class in java.util"><code>Vector</code></a>, <a href="../../java/util/Collections.html" title="class in java.util"><code>Collections</code></a>, <a href="../../java/util/Arrays.html" title="class in java.util"><code>Arrays</code></a>, <a href="../../java/util/AbstractCollection.html" title="class in java.util"><code>AbstractCollection</code></a>             </dd>   </dl>  </li></ul> </div> <a end_ctx_id="class:Collection"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:size-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:size--"/><a name="size--"/><ul class="blockList"><li class="blockList"><h4>size</h4><pre>int size()</pre><div class="block">Returns the number of elements in this collection. If this collection contains more than <tt>Integer.MAX_VALUE</tt> elements, returns <tt>Integer.MAX_VALUE</tt>.                 </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the number of elements in this collection      </dd> </dl></li></ul> <a end_ctx_id="method:size--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:isEmpty-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:isEmpty--"/><a name="isEmpty--"/><ul class="blockList"><li class="blockList"><h4>isEmpty</h4><pre>boolean isEmpty()</pre><div class="block">Returns <tt>true</tt> if this collection contains no elements.       </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this collection contains no elements       </dd> </dl></li></ul> <a end_ctx_id="method:isEmpty--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:contains-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:contains-java.lang.Object-"/><a name="contains-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>contains</h4><pre>boolean contains(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Returns <tt>true</tt> if this collection contains the specified element. More formally, returns <tt>true</tt> if and only if this collection contains at least one element <tt>e</tt> such that <tt>(o==null ? e==null : o.equals(e))</tt>.                           </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element whose presence in this collection is to be tested            </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this collection contains the specified element        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the type of the specified element is incompatible with this collection (<a href="#optional-restrictions">optional</a>)               </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null and this collection does not permit null elements (<a href="#optional-restrictions">optional</a>)                 </dd>   </dl></li></ul> <a end_ctx_id="method:contains-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:iterator-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:iterator--"/><a name="iterator--"/><ul class="blockList"><li class="blockList"><h4>iterator</h4><pre><a href="../../java/util/Iterator.html" title="interface in java.util">Iterator</a>&lt;<a href="../../java/util/Collection.html" title="type parameter in Collection">E</a>&gt; iterator()</pre><div class="block">Returns an iterator over the elements in this collection. There are no guarantees concerning the order in which the elements are returned (unless this collection is an instance of some class that provides a guarantee).                                  </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/Iterable.html#iterator--">iterator</a></code> in interface <code><a href="../../java/lang/Iterable.html" title="interface in java.lang">Iterable</a>&lt;<a href="../../java/util/Collection.html" title="type parameter in Collection">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an <tt>Iterator</tt> over the elements in this collection       </dd>  </dl></li></ul> <a end_ctx_id="method:iterator--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toArray-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toArray--"/><a name="toArray--"/><ul class="blockList"><li class="blockList"><h4>toArray</h4><pre><a href="../../java/lang/Object.html" title="class in java.lang">Object</a>[] toArray()</pre><div class="block">Returns an array containing all of the elements in this collection. If this collection makes any guarantees as to what order its elements are returned by its iterator, this method must return the elements in the same order.<p>The returned array will be "safe" in that no references to it are maintained by this collection. (In other words, this method must allocate a new array even if this collection is backed by an array). The caller is thus free to modify the returned array.                                             </p><p>This method acts as bridge between array-based and collection-based APIs.         </p>                                     </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an array containing all of the elements in this collection         </dd> </dl></li></ul> <a name="toArray-java.lang.Object:A-"/><a end_ctx_id="method:toArray--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toArray-T:A- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toArray-T:A-"/><a name="toArray-T:A-"/><ul class="blockList"><li class="blockList"><h4>toArray</h4><pre>&lt;T&gt; T[] toArray(T[] a)</pre><div class="block">Returns an array containing all of the elements in this collection; the runtime type of the returned array is that of the specified array. If the collection fits in the specified array, it is returned therein. Otherwise, a new array is allocated with the runtime type of the specified array and the size of this collection.<p>If this collection fits in the specified array with room to spare (i.e., the array has more elements than this collection), the element in the array immediately following the end of the collection is set to <tt>null</tt>. (This is useful in determining the length of this collection <i>only</i> if the caller knows that this collection does not contain any <tt>null</tt> elements.)                                                            </p><p>If this collection makes any guarantees as to what order its elements are returned by its iterator, this method must return the elements in the same order.                          </p><p>Like the <a href="../../java/util/Collection.html#toArray--"><code>toArray()</code></a> method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.                                      </p><p>Suppose <tt>x</tt> is a collection known to contain only strings. The following code can be used to dump the collection into a newly allocated array of <tt>String</tt>:<pre>
     String[] y = x.toArray(new String[0]);</pre> Note that <tt>toArray(new Object[0]) </tt> is identical in function to <tt>toArray()</tt>.                                   </p>                                                       </div><dl> <dt> <span class="paramLabel">Type Parameters: </span>   </dt><dd> <code>T</code> - the runtime type of the array to contain the collection            </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>a</code> - the array into which the elements of this collection are to be stored, if it is big enough; otherwise, a new array of the same runtime type is allocated for this purpose.                                  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an array containing all of the elements in this collection         </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/ArrayStoreException.html" title="class in java.lang">ArrayStoreException</a></code> - if the runtime type of the specified array is not a supertype of the runtime type of every element in this collection                        </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified array is null        </dd>    </dl></li></ul> <a name="add-java.lang.Object-"/><a end_ctx_id="method:toArray-T:A-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:add-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:add-E-"/><a name="add-E-"/><ul class="blockList"><li class="blockList"><h4>add</h4><pre>boolean add(<a href="../../java/util/Collection.html" title="type parameter in Collection">E</a> e)</pre><div class="block">Ensures that this collection contains the specified element (optional operation). Returns <tt>true</tt> if this collection changed as a result of the call. (Returns <tt>false</tt> if this collection does not permit duplicates and already contains the specified element.)<p> Collections that support this operation may place limitations on what elements may be added to this collection. In particular, some collections will refuse to add <tt>null</tt> elements, and others will impose restrictions on the type of elements that may be added. Collection classes should clearly specify in their documentation any restrictions on what elements may be added.                                                         </p><p> If a collection refuses to add a particular element for any reason other than that it already contains the element, it <i>must</i> throw an exception (rather than returning <tt>false</tt>). This preserves the invariant that a collection always contains the specified element after this call returns.                                             </p>                                    </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - element whose presence in this collection is to be ensured            </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this collection changed as a result of the call           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/UnsupportedOperationException.html" title="class in java.lang">UnsupportedOperationException</a></code> - if the <tt>add</tt> operation is not supported by this collection            </dd><dd> <code><a href="../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of the specified element prevents it from being added to this collection                 </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null and this collection does not permit null elements                </dd><dd> <code><a href="../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if some property of the element prevents it from being added to this collection                </dd><dd> <code><a href="../../java/lang/IllegalStateException.html" title="class in java.lang">IllegalStateException</a></code> - if the element cannot be added at this time due to insertion restrictions               </dd>   </dl></li></ul> <a end_ctx_id="method:add-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:remove-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:remove-java.lang.Object-"/><a name="remove-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>remove</h4><pre>boolean remove(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Removes a single instance of the specified element from this collection, if it is present (optional operation). More formally, removes an element <tt>e</tt> such that <tt>(o==null ? e==null : o.equals(e))</tt>, if this collection contains one or more such elements. Returns <tt>true</tt> if this collection contained the specified element (or equivalently, if this collection changed as a result of the call).                                                       </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element to be removed from this collection, if present           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if an element was removed as a result of this call            </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the type of the specified element is incompatible with this collection (<a href="#optional-restrictions">optional</a>)               </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null and this collection does not permit null elements (<a href="#optional-restrictions">optional</a>)                 </dd><dd> <code><a href="../../java/lang/UnsupportedOperationException.html" title="class in java.lang">UnsupportedOperationException</a></code> - if the <tt>remove</tt> operation is not supported by this collection            </dd>   </dl></li></ul> <a end_ctx_id="method:remove-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:containsAll-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:containsAll-java.util.Collection-"/><a name="containsAll-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>containsAll</h4><pre>boolean containsAll(<a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;?&gt; c)</pre><div class="block">Returns <tt>true</tt> if this collection contains all of the elements in the specified collection.             </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - collection to be checked for containment in this collection           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this collection contains all of the elements in the specified collection             </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the types of one or more elements in the specified collection are incompatible with this collection (<a href="#optional-restrictions">optional</a>)                    </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified collection contains one or more null elements and this collection does not permit null elements (<a href="#optional-restrictions">optional</a>), or if the specified collection is null.                            </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Collection.html#contains-java.lang.Object-"><code>contains(Object)</code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:containsAll-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:addAll-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:addAll-java.util.Collection-"/><a name="addAll-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>addAll</h4><pre>boolean addAll(<a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;? extends <a href="../../java/util/Collection.html" title="type parameter in Collection">E</a>&gt; c)</pre><div class="block">Adds all of the elements in the specified collection to this collection (optional operation). The behavior of this operation is undefined if the specified collection is modified while the operation is in progress. (This implies that the behavior of this call is undefined if the specified collection is this collection, and this collection is nonempty.)                                                      </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - collection containing elements to be added to this collection           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this collection changed as a result of the call           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/UnsupportedOperationException.html" title="class in java.lang">UnsupportedOperationException</a></code> - if the <tt>addAll</tt> operation is not supported by this collection            </dd><dd> <code><a href="../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of an element of the specified collection prevents it from being added to this collection                    </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified collection contains a null element and this collection does not permit null elements, or if the specified collection is null                         </dd><dd> <code><a href="../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if some property of an element of the specified collection prevents it from being added to this collection                    </dd><dd> <code><a href="../../java/lang/IllegalStateException.html" title="class in java.lang">IllegalStateException</a></code> - if not all the elements can be added at this time due to insertion restrictions                 </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Collection.html#add-E-"><code>add(Object)</code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:addAll-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:removeAll-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:removeAll-java.util.Collection-"/><a name="removeAll-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>removeAll</h4><pre>boolean removeAll(<a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;?&gt; c)</pre><div class="block">Removes all of this collection's elements that are also contained in the specified collection (optional operation). After this call returns, this collection will contain no elements in common with the specified collection.                               </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - collection containing elements to be removed from this collection           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this collection changed as a result of the call           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/UnsupportedOperationException.html" title="class in java.lang">UnsupportedOperationException</a></code> - if the <tt>removeAll</tt> method is not supported by this collection            </dd><dd> <code><a href="../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the types of one or more elements in this collection are incompatible with the specified collection (<a href="#optional-restrictions">optional</a>)                    </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if this collection contains one or more null elements and the specified collection does not support null elements (<a href="#optional-restrictions">optional</a>), or if the specified collection is null                            </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Collection.html#remove-java.lang.Object-"><code>remove(Object)</code></a>, <a href="../../java/util/Collection.html#contains-java.lang.Object-"><code>contains(Object)</code></a>  </dd>    </dl></li></ul> <a end_ctx_id="method:removeAll-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:removeIf-java.util.function.Predicate- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:removeIf-java.util.function.Predicate-"><span class="diff-html-added"/></a><a name="removeIf-java.util.function.Predicate-"/><ul class="blockList"><li class="blockList"><h4><span class="diff-html-added">removeIf</span></h4><pre><span class="diff-html-added">default boolean removeIf(</span><a href="../../java/util/function/Predicate.html" title="interface in java.util.function"><span class="diff-html-added">Predicate</span></a><span class="diff-html-added">&lt;?</span> <span class="diff-html-added">super</span> <a href="../../java/util/Collection.html" title="type parameter in Collection"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt; filter)</span></pre><div class="block"><span class="diff-html-added">Removes</span> <span class="diff-html-added">all</span> <span class="diff-html-added">of</span> <span class="diff-html-added">the</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">of</span> <span class="diff-html-added">this</span> <span class="diff-html-added">collection</span> <span class="diff-html-added">that</span> <span class="diff-html-added">satisfy</span> <span class="diff-html-added">the</span> <span class="diff-html-added">given</span> <span class="diff-html-added">predicate.</span> <span class="diff-html-added">Errors</span> <span class="diff-html-added">or</span> <span class="diff-html-added">runtime</span> <span class="diff-html-added">exceptions</span> <span class="diff-html-added">thrown</span> <span class="diff-html-added">during</span> <span class="diff-html-added">iteration</span> <span class="diff-html-added">or</span> <span class="diff-html-added">by</span> <span class="diff-html-added">the</span> <span class="diff-html-added">predicate</span> <span class="diff-html-added">are</span> <span class="diff-html-added">relayed</span> <span class="diff-html-added">to</span> <span class="diff-html-added">the</span> <span class="diff-html-added">caller.</span>                            </div><dl> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Implementation</span> <span class="diff-html-added">Requirements:</span> </span>   </dt><dd><span class="diff-html-added">The</span> <span class="diff-html-added">default</span> <span class="diff-html-added">implementation</span> <span class="diff-html-added">traverses</span> <span class="diff-html-added">all</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">of</span> <span class="diff-html-added">the</span> <span class="diff-html-added">collection</span> <span class="diff-html-added">using</span> <span class="diff-html-added">its</span> <a href="../../java/util/Collection.html#iterator--"><code><span class="diff-html-added">iterator()</span></code></a><span class="diff-html-added">.</span> <span class="diff-html-added">Each</span> <span class="diff-html-added">matching</span> <span class="diff-html-added">element</span> <span class="diff-html-added">is</span> <span class="diff-html-added">removed</span> <span class="diff-html-added">using</span> <a href="../../java/util/Iterator.html#remove--"><code><span class="diff-html-added">Iterator.remove()</span></code></a><span class="diff-html-added">.</span> <span class="diff-html-added">If</span> <span class="diff-html-added">the</span> <span class="diff-html-added">collection's</span> <span class="diff-html-added">iterator</span> <span class="diff-html-added">does</span> <span class="diff-html-added">not</span> <span class="diff-html-added">support</span> <span class="diff-html-added">removal</span> <span class="diff-html-added">then</span> <span class="diff-html-added">an</span> <code><span class="diff-html-added">UnsupportedOperationException</span></code> <span class="diff-html-added">will</span> <span class="diff-html-added">be</span> <span class="diff-html-added">thrown</span> <span class="diff-html-added">on</span> <span class="diff-html-added">the</span> <span class="diff-html-added">first</span> <span class="diff-html-added">matching</span> <span class="diff-html-added">element.</span>                                     </dd> <dt> <span class="paramLabel"><span class="diff-html-added">Parameters:</span></span>   </dt><dd> <code><span class="diff-html-added">filter</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">a</span> <span class="diff-html-added">predicate</span> <span class="diff-html-added">which</span> <span class="diff-html-added">returns</span> <code><span class="diff-html-added">true</span></code> <span class="diff-html-added">for</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">to</span> <span class="diff-html-added">be</span> <span class="diff-html-added">removed</span>            </dd> <dt> <span class="returnLabel"><span class="diff-html-added">Returns:</span></span>   </dt><dd> <code><span class="diff-html-added">true</span></code> <span class="diff-html-added">if</span> <span class="diff-html-added">any</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">were</span> <span class="diff-html-added">removed</span>      </dd> <dt> <span class="throwsLabel"><span class="diff-html-added">Throws:</span></span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang"><span class="diff-html-added">NullPointerException</span></a></code> <span class="diff-html-added">-</span> <span class="diff-html-added">if</span> <span class="diff-html-added">the</span> <span class="diff-html-added">specified</span> <span class="diff-html-added">filter</span> <span class="diff-html-added">is</span> <span class="diff-html-added">null</span>        </dd><dd> <code><a href="../../java/lang/UnsupportedOperationException.html" title="class in java.lang"><span class="diff-html-added">UnsupportedOperationException</span></a></code> <span class="diff-html-added">-</span> <span class="diff-html-added">if</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">cannot</span> <span class="diff-html-added">be</span> <span class="diff-html-added">removed</span> <span class="diff-html-added">from</span> <span class="diff-html-added">this</span> <span class="diff-html-added">collection.</span> <span class="diff-html-added">Implementations</span> <span class="diff-html-added">may</span> <span class="diff-html-added">throw</span> <span class="diff-html-added">this</span> <span class="diff-html-added">exception</span> <span class="diff-html-added">if</span> <span class="diff-html-added">a</span> <span class="diff-html-added">matching</span> <span class="diff-html-added">element</span> <span class="diff-html-added">cannot</span> <span class="diff-html-added">be</span> <span class="diff-html-added">removed</span> <span class="diff-html-added">or</span> <span class="diff-html-added">if,</span> <span class="diff-html-added">in</span> <span class="diff-html-added">general,</span> <span class="diff-html-added">removal</span> <span class="diff-html-added">is</span> <span class="diff-html-added">not</span> <span class="diff-html-added">supported.</span>                              </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Since:</span></span>   </dt><dd><span class="diff-html-added">1.8</span></dd>     </dl></li></ul> <a end_ctx_id="method:removeIf-java.util.function.Predicate-"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:retainAll-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:retainAll-java.util.Collection-"/><a name="retainAll-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>retainAll</h4><pre>boolean retainAll(<a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;?&gt; c)</pre><div class="block">Retains only the elements in this collection that are contained in the specified collection (optional operation). In other words, removes from this collection all of its elements that are not contained in the specified collection.                                  </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - collection containing elements to be retained in this collection           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this collection changed as a result of the call           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/UnsupportedOperationException.html" title="class in java.lang">UnsupportedOperationException</a></code> - if the <tt>retainAll</tt> operation is not supported by this collection            </dd><dd> <code><a href="../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the types of one or more elements in this collection are incompatible with the specified collection (<a href="#optional-restrictions">optional</a>)                    </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if this collection contains one or more null elements and the specified collection does not permit null elements (<a href="#optional-restrictions">optional</a>), or if the specified collection is null                            </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Collection.html#remove-java.lang.Object-"><code>remove(Object)</code></a>, <a href="../../java/util/Collection.html#contains-java.lang.Object-"><code>contains(Object)</code></a>  </dd>    </dl></li></ul> <a end_ctx_id="method:retainAll-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:clear-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:clear--"/><a name="clear--"/><ul class="blockList"><li class="blockList"><h4>clear</h4><pre>void clear()</pre><div class="block">Removes all of the elements from this collection (optional operation). The collection will be empty after this method returns.                  </div><dl> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/UnsupportedOperationException.html" title="class in java.lang">UnsupportedOperationException</a></code> - if the <tt>clear</tt> operation is not supported by this collection            </dd> </dl></li></ul> <a end_ctx_id="method:clear--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:equals-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:equals-java.lang.Object-"/><a name="equals-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>equals</h4><pre>boolean equals(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Compares the specified object with this collection for equality.<p> While the <tt>Collection</tt> interface adds no stipulations to the general contract for the <tt>Object.equals</tt>, programmers who implement the <tt>Collection</tt> interface "directly" (in other words, create a class that is a <tt>Collection</tt> but is not a <tt>Set</tt> or a <tt>List</tt>) must exercise care if they choose to override the <tt>Object.equals</tt>. It is not necessary to do so, and the simplest course of action is to rely on <tt>Object</tt>'s implementation, but the implementor may wish to implement a "value comparison" in place of the default "reference comparison." (The <tt>List</tt> and <tt>Set</tt> interfaces mandate such value comparisons.)                                                                                              </p><p> The general contract for the <tt>Object.equals</tt> method states that equals must be symmetric (in other words, <tt>a.equals(b)</tt> if and only if <tt>b.equals(a)</tt>). The contracts for <tt>List.equals</tt> and <tt>Set.equals</tt> state that lists are only equal to other lists, and sets to other sets. Thus, a custom <tt>equals</tt> method for a collection class that implements neither the <tt>List</tt> nor <tt>Set</tt> interface must return <tt>false</tt> when this collection is compared to any list or set. (By the same logic, it is not possible to write a class that correctly implements both the <tt>Set</tt> and <tt>List</tt> interfaces.)                                                                                             </p>        </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/lang/Object.html#equals-java.lang.Object-">equals</a></code> in class <code><a href="../../java/lang/Object.html" title="class in java.lang">Object</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - object to be compared for equality with this collection           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if the specified object is equal to this collection          </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/Object.html#equals-java.lang.Object-"><code>Object.equals(Object)</code></a>, <a href="../../java/util/Set.html#equals-java.lang.Object-"><code>Set.equals(Object)</code></a>, <a href="../../java/util/List.html#equals-java.lang.Object-"><code>List.equals(Object)</code></a>   </dd>    </dl></li></ul> <a end_ctx_id="method:equals-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:hashCode-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:hashCode--"/><a name="hashCode--"/><ul class="blockList"><li class="blockList"><h4>hashCode</h4><pre>int hashCode()</pre><div class="block">Returns the hash code value for this collection. While the <tt>Collection</tt> interface adds no stipulations to the general contract for the <tt>Object.hashCode</tt> method, programmers should take note that any class that overrides the <tt>Object.equals</tt> method must also override the <tt>Object.hashCode</tt> method in order to satisfy the general contract for the <tt>Object.hashCode</tt> method. In particular, <tt>c1.equals(c2)</tt> implies that <tt>c1.hashCode()==c2.hashCode()</tt>.                                                         </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/lang/Object.html#hashCode--">hashCode</a></code> in class <code><a href="../../java/lang/Object.html" title="class in java.lang">Object</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the hash code value for this collection      </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/Object.html#hashCode--"><code>Object.hashCode()</code></a>, <a href="../../java/lang/Object.html#equals-java.lang.Object-"><code>Object.equals(Object)</code></a>  </dd>   </dl></li></ul> <a end_ctx_id="method:hashCode--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:spliterator-- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:spliterator--"><span class="diff-html-added"/></a><a name="spliterator--"/><ul class="blockList"><li class="blockList"><h4><span class="diff-html-added">spliterator</span></h4><pre><span class="diff-html-added">default </span><a href="../../java/util/Spliterator.html" title="interface in java.util"><span class="diff-html-added">Spliterator</span></a><span class="diff-html-added">&lt;</span><a href="../../java/util/Collection.html" title="type parameter in Collection"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt; spliterator()</span></pre><div class="block"><span class="diff-html-added">Creates</span> <span class="diff-html-added">a</span> <a href="../../java/util/Spliterator.html" title="interface in java.util"><code><span class="diff-html-added">Spliterator</span></code></a> <span class="diff-html-added">over</span> <span class="diff-html-added">the</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">in</span> <span class="diff-html-added">this</span> <span class="diff-html-added">collection.</span> <span class="diff-html-added">Implementations</span> <span class="diff-html-added">should</span> <span class="diff-html-added">document</span> <span class="diff-html-added">characteristic</span> <span class="diff-html-added">values</span> <span class="diff-html-added">reported</span> <span class="diff-html-added">by</span> <span class="diff-html-added">the</span> <span class="diff-html-added">spliterator.</span> <span class="diff-html-added">Such</span> <span class="diff-html-added">characteristic</span> <span class="diff-html-added">values</span> <span class="diff-html-added">are</span> <span class="diff-html-added">not</span> <span class="diff-html-added">required</span> <span class="diff-html-added">to</span> <span class="diff-html-added">be</span> <span class="diff-html-added">reported</span> <span class="diff-html-added">if</span> <span class="diff-html-added">the</span> <span class="diff-html-added">spliterator</span> <span class="diff-html-added">reports</span> <a href="../../java/util/Spliterator.html#SIZED"><code><span class="diff-html-added">Spliterator.SIZED</span></code></a> <span class="diff-html-added">and</span> <span class="diff-html-added">this</span> <span class="diff-html-added">collection</span> <span class="diff-html-added">contains</span> <span class="diff-html-added">no</span> <span class="diff-html-added">elements.</span><p><span class="diff-html-added">The</span> <span class="diff-html-added">default</span> <span class="diff-html-added">implementation</span> <span class="diff-html-added">should</span> <span class="diff-html-added">be</span> <span class="diff-html-added">overridden</span> <span class="diff-html-added">by</span> <span class="diff-html-added">subclasses</span> <span class="diff-html-added">that</span> <span class="diff-html-added">can</span> <span class="diff-html-added">return</span> <span class="diff-html-added">a</span> <span class="diff-html-added">more</span> <span class="diff-html-added">efficient</span> <span class="diff-html-added">spliterator.</span> <span class="diff-html-added">In</span> <span class="diff-html-added">order</span> <span class="diff-html-added">to</span> <span class="diff-html-added">preserve</span> <span class="diff-html-added">expected</span> <span class="diff-html-added">laziness</span> <span class="diff-html-added">behavior</span> <span class="diff-html-added">for</span> <span class="diff-html-added">the</span> <a href="../../java/util/Collection.html#stream--"><code><span class="diff-html-added">stream()</span></code></a> <span class="diff-html-added">and</span> <a href="../../java/util/Collection.html#parallelStream--"><code><span class="diff-html-added">parallelStream()</span></code></a><span class="diff-html-added">}</span> <span class="diff-html-added">methods,</span> <span class="diff-html-added">spliterators</span> <span class="diff-html-added">should</span> <span class="diff-html-added">either</span> <span class="diff-html-added">have</span> <span class="diff-html-added">the</span> <span class="diff-html-added">characteristic</span> <span class="diff-html-added">of</span> <code><span class="diff-html-added">IMMUTABLE</span></code> <span class="diff-html-added">or</span> <code><span class="diff-html-added">CONCURRENT</span></code><span class="diff-html-added">,</span> <span class="diff-html-added">or</span> <span class="diff-html-added">be</span> <em><a href="Spliterator.html#binding"><span class="diff-html-added">late-binding</span></a></em><span class="diff-html-added">.</span> <span class="diff-html-added">If</span> <span class="diff-html-added">none</span> <span class="diff-html-added">of</span> <span class="diff-html-added">these</span> <span class="diff-html-added">is</span> <span class="diff-html-added">practical,</span> <span class="diff-html-added">the</span> <span class="diff-html-added">overriding</span> <span class="diff-html-added">class</span> <span class="diff-html-added">should</span> <span class="diff-html-added">describe</span> <span class="diff-html-added">the</span> <span class="diff-html-added">spliterator's</span> <span class="diff-html-added">documented</span> <span class="diff-html-added">policy</span> <span class="diff-html-added">of</span> <span class="diff-html-added">binding</span> <span class="diff-html-added">and</span> <span class="diff-html-added">structural</span> <span class="diff-html-added">interference,</span> <span class="diff-html-added">and</span> <span class="diff-html-added">should</span> <span class="diff-html-added">override</span> <span class="diff-html-added">the</span> <a href="../../java/util/Collection.html#stream--"><code><span class="diff-html-added">stream()</span></code></a> <span class="diff-html-added">and</span> <a href="../../java/util/Collection.html#parallelStream--"><code><span class="diff-html-added">parallelStream()</span></code></a> <span class="diff-html-added">methods</span> <span class="diff-html-added">to</span> <span class="diff-html-added">create</span> <span class="diff-html-added">streams</span> <span class="diff-html-added">using</span> <span class="diff-html-added">a</span> <code><span class="diff-html-added">Supplier</span></code> <span class="diff-html-added">of</span> <span class="diff-html-added">the</span> <span class="diff-html-added">spliterator,</span> <span class="diff-html-added">as</span> <span class="diff-html-added">in:</span><pre><code>
     <span class="diff-html-added">Stream&lt;E&gt;</span> <span class="diff-html-added">s</span> <span class="diff-html-added">=</span> <span class="diff-html-added">StreamSupport.stream(()</span> <span class="diff-html-added">-&gt;</span> <span class="diff-html-added">spliterator(),</span> <span class="diff-html-added">spliteratorCharacteristics)</span>
 </code></pre>                                                                               </p><p><span class="diff-html-added">These</span> <span class="diff-html-added">requirements</span> <span class="diff-html-added">ensure</span> <span class="diff-html-added">that</span> <span class="diff-html-added">streams</span> <span class="diff-html-added">produced</span> <span class="diff-html-added">by</span> <span class="diff-html-added">the</span> <a href="../../java/util/Collection.html#stream--"><code><span class="diff-html-added">stream()</span></code></a> <span class="diff-html-added">and</span> <a href="../../java/util/Collection.html#parallelStream--"><code><span class="diff-html-added">parallelStream()</span></code></a> <span class="diff-html-added">methods</span> <span class="diff-html-added">will</span> <span class="diff-html-added">reflect</span> <span class="diff-html-added">the</span> <span class="diff-html-added">contents</span> <span class="diff-html-added">of</span> <span class="diff-html-added">the</span> <span class="diff-html-added">collection</span> <span class="diff-html-added">as</span> <span class="diff-html-added">of</span> <span class="diff-html-added">initiation</span> <span class="diff-html-added">of</span> <span class="diff-html-added">the</span> <span class="diff-html-added">terminal</span> <span class="diff-html-added">stream</span> <span class="diff-html-added">operation.</span>                          </p>                                     </div><dl> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../java/lang/Iterable.html#spliterator--"><span class="diff-html-added">spliterator</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../java/lang/Iterable.html" title="interface in java.lang"><span class="diff-html-added">Iterable</span></a><span class="diff-html-added">&lt;</span><a href="../../java/util/Collection.html" title="type parameter in Collection"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Implementation</span> <span class="diff-html-added">Requirements:</span> </span>   </dt><dd><span class="diff-html-added">The</span> <span class="diff-html-added">default</span> <span class="diff-html-added">implementation</span> <span class="diff-html-added">creates</span> <span class="diff-html-added">a</span> <em><a href="Spliterator.html#binding"><span class="diff-html-added">late-binding</span></a></em> <span class="diff-html-added">spliterator</span> <span class="diff-html-added">from</span> <span class="diff-html-added">the</span> <span class="diff-html-added">collections's</span> <code><span class="diff-html-added">Iterator</span></code><span class="diff-html-added">.</span> <span class="diff-html-added">The</span> <span class="diff-html-added">spliterator</span> <span class="diff-html-added">inherits</span> <span class="diff-html-added">the</span> <em><span class="diff-html-added">fail-fast</span></em> <span class="diff-html-added">properties</span> <span class="diff-html-added">of</span> <span class="diff-html-added">the</span> <span class="diff-html-added">collection's</span> <span class="diff-html-added">iterator.</span><p> <span class="diff-html-added">The</span> <span class="diff-html-added">created</span> <code><span class="diff-html-added">Spliterator</span></code> <span class="diff-html-added">reports</span> <a href="../../java/util/Spliterator.html#SIZED"><code><span class="diff-html-added">Spliterator.SIZED</span></code></a><span class="diff-html-added">.</span>     </p>                    </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Implementation</span> <span class="diff-html-added">Note:</span> </span>   </dt><dd><span class="diff-html-added">The</span> <span class="diff-html-added">created</span> <code><span class="diff-html-added">Spliterator</span></code> <span class="diff-html-added">additionally</span> <span class="diff-html-added">reports</span> <a href="../../java/util/Spliterator.html#SUBSIZED"><code><span class="diff-html-added">Spliterator.SUBSIZED</span></code></a><span class="diff-html-added">.</span><p><span class="diff-html-added">If</span> <span class="diff-html-added">a</span> <span class="diff-html-added">spliterator</span> <span class="diff-html-added">covers</span> <span class="diff-html-added">no</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">then</span> <span class="diff-html-added">the</span> <span class="diff-html-added">reporting</span> <span class="diff-html-added">of</span> <span class="diff-html-added">additional</span> <span class="diff-html-added">characteristic</span> <span class="diff-html-added">values,</span> <span class="diff-html-added">beyond</span> <span class="diff-html-added">that</span> <span class="diff-html-added">of</span> <code><span class="diff-html-added">SIZED</span></code> <span class="diff-html-added">and</span> <code><span class="diff-html-added">SUBSIZED</span></code><span class="diff-html-added">,</span> <span class="diff-html-added">does</span> <span class="diff-html-added">not</span> <span class="diff-html-added">aid</span> <span class="diff-html-added">clients</span> <span class="diff-html-added">to</span> <span class="diff-html-added">control,</span> <span class="diff-html-added">specialize</span> <span class="diff-html-added">or</span> <span class="diff-html-added">simplify</span> <span class="diff-html-added">computation.</span> <span class="diff-html-added">However,</span> <span class="diff-html-added">this</span> <span class="diff-html-added">does</span> <span class="diff-html-added">enable</span> <span class="diff-html-added">shared</span> <span class="diff-html-added">use</span> <span class="diff-html-added">of</span> <span class="diff-html-added">an</span> <span class="diff-html-added">immutable</span> <span class="diff-html-added">and</span> <span class="diff-html-added">empty</span> <span class="diff-html-added">spliterator</span> <span class="diff-html-added">instance</span> <span class="diff-html-added">(see</span> <a href="../../java/util/Spliterators.html#emptySpliterator--"><code><span class="diff-html-added">Spliterators.emptySpliterator()</span></code></a><span class="diff-html-added">)</span> <span class="diff-html-added">for</span> <span class="diff-html-added">empty</span> <span class="diff-html-added">collections,</span> <span class="diff-html-added">and</span> <span class="diff-html-added">enables</span> <span class="diff-html-added">clients</span> <span class="diff-html-added">to</span> <span class="diff-html-added">determine</span> <span class="diff-html-added">if</span> <span class="diff-html-added">such</span> <span class="diff-html-added">a</span> <span class="diff-html-added">spliterator</span> <span class="diff-html-added">covers</span> <span class="diff-html-added">no</span> <span class="diff-html-added">elements.</span>                                                          </p>     </dd> <dt> <span class="returnLabel"><span class="diff-html-added">Returns:</span></span>   </dt><dd><span class="diff-html-added">a</span> <code><span class="diff-html-added">Spliterator</span></code> <span class="diff-html-added">over</span> <span class="diff-html-added">the</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">in</span> <span class="diff-html-added">this</span> <span class="diff-html-added">collection</span>       </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Since:</span></span>   </dt><dd><span class="diff-html-added">1.8</span></dd>     </dl></li></ul> <a end_ctx_id="method:spliterator--"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:stream-- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:stream--"><span class="diff-html-added"/></a><a name="stream--"/><ul class="blockList"><li class="blockList"><h4><span class="diff-html-added">stream</span></h4><pre><span class="diff-html-added">default </span><a href="../../java/util/stream/Stream.html" title="interface in java.util.stream"><span class="diff-html-added">Stream</span></a><span class="diff-html-added">&lt;</span><a href="../../java/util/Collection.html" title="type parameter in Collection"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt; stream()</span></pre><div class="block"><span class="diff-html-added">Returns</span> <span class="diff-html-added">a</span> <span class="diff-html-added">sequential</span> <code><span class="diff-html-added">Stream</span></code> <span class="diff-html-added">with</span> <span class="diff-html-added">this</span> <span class="diff-html-added">collection</span> <span class="diff-html-added">as</span> <span class="diff-html-added">its</span> <span class="diff-html-added">source.</span><p><span class="diff-html-added">This</span> <span class="diff-html-added">method</span> <span class="diff-html-added">should</span> <span class="diff-html-added">be</span> <span class="diff-html-added">overridden</span> <span class="diff-html-added">when</span> <span class="diff-html-added">the</span> <a href="../../java/util/Collection.html#spliterator--"><code><span class="diff-html-added">spliterator()</span></code></a> <span class="diff-html-added">method</span> <span class="diff-html-added">cannot</span> <span class="diff-html-added">return</span> <span class="diff-html-added">a</span> <span class="diff-html-added">spliterator</span> <span class="diff-html-added">that</span> <span class="diff-html-added">is</span> <code><span class="diff-html-added">IMMUTABLE</span></code><span class="diff-html-added">,</span> <code><span class="diff-html-added">CONCURRENT</span></code><span class="diff-html-added">,</span> <span class="diff-html-added">or</span> <em><span class="diff-html-added">late-binding</span></em><span class="diff-html-added">.</span> <span class="diff-html-added">(See</span> <a href="../../java/util/Collection.html#spliterator--"><code><span class="diff-html-added">spliterator()</span></code></a> <span class="diff-html-added">for</span> <span class="diff-html-added">details.)</span>                      </p>         </div><dl> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Implementation</span> <span class="diff-html-added">Requirements:</span> </span>   </dt><dd><span class="diff-html-added">The</span> <span class="diff-html-added">default</span> <span class="diff-html-added">implementation</span> <span class="diff-html-added">creates</span> <span class="diff-html-added">a</span> <span class="diff-html-added">sequential</span> <code><span class="diff-html-added">Stream</span></code> <span class="diff-html-added">from</span> <span class="diff-html-added">the</span> <span class="diff-html-added">collection's</span> <code><span class="diff-html-added">Spliterator</span></code><span class="diff-html-added">.</span>          </dd> <dt> <span class="returnLabel"><span class="diff-html-added">Returns:</span></span>   </dt><dd><span class="diff-html-added">a</span> <span class="diff-html-added">sequential</span> <code><span class="diff-html-added">Stream</span></code> <span class="diff-html-added">over</span> <span class="diff-html-added">the</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">in</span> <span class="diff-html-added">this</span> <span class="diff-html-added">collection</span>        </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Since:</span></span>   </dt><dd><span class="diff-html-added">1.8</span></dd>   </dl></li></ul> <a end_ctx_id="method:stream--"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:parallelStream-- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:parallelStream--"><span class="diff-html-added"/></a><a name="parallelStream--"/><ul class="blockListLast"><li class="blockList"><h4><span class="diff-html-added">parallelStream</span></h4><pre><span class="diff-html-added">default </span><a href="../../java/util/stream/Stream.html" title="interface in java.util.stream"><span class="diff-html-added">Stream</span></a><span class="diff-html-added">&lt;</span><a href="../../java/util/Collection.html" title="type parameter in Collection"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt; parallelStream()</span></pre><div class="block"><span class="diff-html-added">Returns</span> <span class="diff-html-added">a</span> <span class="diff-html-added">possibly</span> <span class="diff-html-added">parallel</span> <code><span class="diff-html-added">Stream</span></code> <span class="diff-html-added">with</span> <span class="diff-html-added">this</span> <span class="diff-html-added">collection</span> <span class="diff-html-added">as</span> <span class="diff-html-added">its</span> <span class="diff-html-added">source.</span> <span class="diff-html-added">It</span> <span class="diff-html-added">is</span> <span class="diff-html-added">allowable</span> <span class="diff-html-added">for</span> <span class="diff-html-added">this</span> <span class="diff-html-added">method</span> <span class="diff-html-added">to</span> <span class="diff-html-added">return</span> <span class="diff-html-added">a</span> <span class="diff-html-added">sequential</span> <span class="diff-html-added">stream.</span><p><span class="diff-html-added">This</span> <span class="diff-html-added">method</span> <span class="diff-html-added">should</span> <span class="diff-html-added">be</span> <span class="diff-html-added">overridden</span> <span class="diff-html-added">when</span> <span class="diff-html-added">the</span> <a href="../../java/util/Collection.html#spliterator--"><code><span class="diff-html-added">spliterator()</span></code></a> <span class="diff-html-added">method</span> <span class="diff-html-added">cannot</span> <span class="diff-html-added">return</span> <span class="diff-html-added">a</span> <span class="diff-html-added">spliterator</span> <span class="diff-html-added">that</span> <span class="diff-html-added">is</span> <code><span class="diff-html-added">IMMUTABLE</span></code><span class="diff-html-added">,</span> <code><span class="diff-html-added">CONCURRENT</span></code><span class="diff-html-added">,</span> <span class="diff-html-added">or</span> <em><span class="diff-html-added">late-binding</span></em><span class="diff-html-added">.</span> <span class="diff-html-added">(See</span> <a href="../../java/util/Collection.html#spliterator--"><code><span class="diff-html-added">spliterator()</span></code></a> <span class="diff-html-added">for</span> <span class="diff-html-added">details.)</span>                      </p>                     </div><dl> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Implementation</span> <span class="diff-html-added">Requirements:</span> </span>   </dt><dd><span class="diff-html-added">The</span> <span class="diff-html-added">default</span> <span class="diff-html-added">implementation</span> <span class="diff-html-added">creates</span> <span class="diff-html-added">a</span> <span class="diff-html-added">parallel</span> <code><span class="diff-html-added">Stream</span></code> <span class="diff-html-added">from</span> <span class="diff-html-added">the</span> <span class="diff-html-added">collection's</span> <code><span class="diff-html-added">Spliterator</span></code><span class="diff-html-added">.</span>          </dd> <dt> <span class="returnLabel"><span class="diff-html-added">Returns:</span></span>   </dt><dd><span class="diff-html-added">a</span> <span class="diff-html-added">possibly</span> <span class="diff-html-added">parallel</span> <code><span class="diff-html-added">Stream</span></code> <span class="diff-html-added">over</span> <span class="diff-html-added">the</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">in</span> <span class="diff-html-added">this</span> <span class="diff-html-added">collection</span>         </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Since:</span></span>   </dt><dd><span class="diff-html-added">1.8</span></dd>   </dl></li></ul> <a end_ctx_id="method:parallelStream--"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table></diff></diffreport>