<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:ArrayDeque [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:ArrayDeque"/><ul class="blockList"><li class="blockList"><dl> <dt> <span class="paramLabel">Type Parameters: </span>   </dt><dd> <code>E</code> - the type of elements held in this collection          </dd> </dl><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>, <a href="../../java/lang/Cloneable.html" title="interface in java.lang">Cloneable</a>, <a href="../../java/lang/Iterable.html" title="interface in java.lang">Iterable</a>&lt;E&gt;, <a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;E&gt;, <a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;E&gt;, <a href="../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;E&gt;      </dd> </dl> <hr/> <br/><pre>public class <span class="typeNameLabel">ArrayDeque&lt;E&gt;</span>
extends <a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;E&gt;
implements <a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;E&gt;, <a href="../../java/lang/Cloneable.html" title="interface in java.lang">Cloneable</a>, <a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a></pre><div class="block">Resizable-array implementation of the <a href="../../java/util/Deque.html" title="interface in java.util"><code>Deque</code></a> interface. Array deques have no capacity restrictions; they grow as necessary to support usage. They are not thread-safe; in the absence of external synchronization, they do not support concurrent access by multiple threads. Null elements are prohibited. This class is likely to be faster than <a href="../../java/util/Stack.html" title="class in java.util"><code>Stack</code></a> when used as a stack, and faster than <a href="../../java/util/LinkedList.html" title="class in java.util"><code>LinkedList</code></a> when used as a queue.<p>Most <code>ArrayDeque</code> operations run in amortized constant time. Exceptions include <a href="../../java/util/ArrayDeque.html#remove-java.lang.Object-"><code>remove</code></a>, <a href="../../java/util/ArrayDeque.html#removeFirstOccurrence-java.lang.Object-"><code>removeFirstOccurrence</code></a>, <a href="../../java/util/ArrayDeque.html#removeLastOccurrence-java.lang.Object-"><code>removeLastOccurrence</code></a>, <a href="../../java/util/ArrayDeque.html#contains-java.lang.Object-"><code>contains</code></a>, <a href="../../java/util/ArrayDeque.html#iterator--"><code>iterator.remove()</code></a>, and the bulk operations, all of which run in linear time.                         </p><p>The iterators returned by this class's <code>iterator</code> method are <i>fail-fast</i>: If the deque is modified at any time after the iterator is created, in any way except through the iterator's own <code>remove</code> method, the iterator will generally throw a <a href="../../java/util/ConcurrentModificationException.html" title="class in java.util"><code>ConcurrentModificationException</code></a>. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.                                                                 </p><p>Note that the fail-fast behavior of an iterator cannot be guaranteed as it is, generally speaking, impossible to make any hard guarantees in the presence of unsynchronized concurrent modification. Fail-fast iterators throw <code>ConcurrentModificationException</code> on a best-effort basis. Therefore, it would be wrong to write a program that depended on this exception for its correctness: <i>the fail-fast behavior of iterators should be used only to detect bugs.           </i>                                                      </p><p>This class and its iterator implement all of the <em>optional</em> methods of the <a href="../../java/util/Collection.html" title="interface in java.util"><code>Collection</code></a> and <a href="../../java/util/Iterator.html" title="interface in java.util"><code>Iterator</code></a> interfaces.                </p><p>This class is a member of the <a href="http://download.oracle.com/javase/7/docs/technotes/guides/collections/index.html"> Java Collections Framework   </a>.       </p>                                                                </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.6</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../serialized-form.html#java.util.ArrayDeque">Serialized Form </a> </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:ArrayDeque"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:ArrayDeque-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:ArrayDeque--"/><a name="ArrayDeque--"/><ul class="blockList"><li class="blockList"><h4>ArrayDeque</h4><pre>public ArrayDeque()</pre><div class="block">Constructs an empty array deque with an initial capacity sufficient to hold 16 elements.             </div></li></ul> <a end_ctx_id="constructor:ArrayDeque--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:ArrayDeque-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:ArrayDeque-int-"/><a name="ArrayDeque-int-"/><ul class="blockList"><li class="blockList"><h4>ArrayDeque</h4><pre>public ArrayDeque(int numElements)</pre><div class="block">Constructs an empty array deque with an initial capacity sufficient to hold the specified number of elements.                </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>numElements</code> - lower bound on initial capacity of the deque          </dd> </dl></li></ul> <a end_ctx_id="constructor:ArrayDeque-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:ArrayDeque-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:ArrayDeque-java.util.Collection-"/><a name="ArrayDeque-java.util.Collection-"/><ul class="blockListLast"><li class="blockList"><h4>ArrayDeque</h4><pre>public ArrayDeque(<a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;? extends <a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt; c)</pre><div class="block">Constructs a deque containing the elements of the specified collection, in the order they are returned by the collection's iterator. (The first element returned by the collection's iterator becomes the first element, or <i>front</i> of the deque.)                                    </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - the collection whose elements are to be placed into the deque             </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified collection is null        </dd>  </dl></li></ul> <a end_ctx_id="constructor:ArrayDeque-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:addFirst-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><a start_ctx_id="method:addFirst-E-"/><a name="addFirst-E-"/><ul class="blockList"><li class="blockList"><h4>addFirst</h4><pre>public void addFirst(<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a> e)</pre><div class="block">Inserts the specified element at the front of this deque.         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#addFirst-E-">addFirst</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null        </dd>   </dl></li></ul> <a name="addLast-java.lang.Object-"/><a end_ctx_id="method:addFirst-E-"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:addLast-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:addLast-E-"/><a name="addLast-E-"/><ul class="blockList"><li class="blockList"><h4>addLast</h4><pre>public void addLast(<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a> e)</pre><div class="block">Inserts the specified element at the end of this deque.<p>This method is equivalent to <a href="../../java/util/ArrayDeque.html#add-E-"><code>add(E)</code></a>.     </p>         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#addLast-E-">addLast</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null        </dd>   </dl></li></ul> <a name="offerFirst-java.lang.Object-"/><a end_ctx_id="method:addLast-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:offerFirst-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:offerFirst-E-"/><a name="offerFirst-E-"/><ul class="blockList"><li class="blockList"><h4>offerFirst</h4><pre>public boolean offerFirst(<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a> e)</pre><div class="block">Inserts the specified element at the front of this deque.         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#offerFirst-E-">offerFirst</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> (as specified by <a href="../../java/util/Deque.html#offerFirst-E-"><code>Deque.offerFirst(E)</code></a>)     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null        </dd>    </dl></li></ul> <a name="offerLast-java.lang.Object-"/><a end_ctx_id="method:offerFirst-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:offerLast-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:offerLast-E-"/><a name="offerLast-E-"/><ul class="blockList"><li class="blockList"><h4>offerLast</h4><pre>public boolean offerLast(<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a> e)</pre><div class="block">Inserts the specified element at the end of this deque.         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#offerLast-E-">offerLast</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> (as specified by <a href="../../java/util/Deque.html#offerLast-E-"><code>Deque.offerLast(E)</code></a>)     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null        </dd>    </dl></li></ul> <a end_ctx_id="method:offerLast-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:removeFirst-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:removeFirst--"/><a name="removeFirst--"/><ul class="blockList"><li class="blockList"><h4>removeFirst</h4><pre>public <a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a> removeFirst()</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../java/util/Deque.html#removeFirst--">Deque</a></code>   </span> </div><div class="block">Retrieves and removes the first element of this deque. This method differs from <a href="../../java/util/Deque.html#pollFirst--"><code>pollFirst</code></a> only in that it throws an exception if this deque is empty.                         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#removeFirst--">removeFirst</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of this deque    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/util/NoSuchElementException.html" title="class in java.util">NoSuchElementException</a></code> - if this deque is empty       </dd>   </dl></li></ul> <a end_ctx_id="method:removeFirst--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:removeLast-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:removeLast--"/><a name="removeLast--"/><ul class="blockList"><li class="blockList"><h4>removeLast</h4><pre>public <a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a> removeLast()</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../java/util/Deque.html#removeLast--">Deque</a></code>   </span> </div><div class="block">Retrieves and removes the last element of this deque. This method differs from <a href="../../java/util/Deque.html#pollLast--"><code>pollLast</code></a> only in that it throws an exception if this deque is empty.                         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#removeLast--">removeLast</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the tail of this deque    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/util/NoSuchElementException.html" title="class in java.util">NoSuchElementException</a></code> - if this deque is empty       </dd>   </dl></li></ul> <a end_ctx_id="method:removeLast--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:pollFirst-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:pollFirst--"/><a name="pollFirst--"/><ul class="blockList"><li class="blockList"><h4>pollFirst</h4><pre>public <a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a> pollFirst()</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../java/util/Deque.html#pollFirst--">Deque</a></code>   </span> </div><div class="block">Retrieves and removes the first element of this deque, or returns <code>null</code> if this deque is empty.                </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#pollFirst--">pollFirst</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of this deque, or <code>null</code> if this deque is empty           </dd>  </dl></li></ul> <a end_ctx_id="method:pollFirst--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:pollLast-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:pollLast--"/><a name="pollLast--"/><ul class="blockList"><li class="blockList"><h4>pollLast</h4><pre>public <a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a> pollLast()</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../java/util/Deque.html#pollLast--">Deque</a></code>   </span> </div><div class="block">Retrieves and removes the last element of this deque, or returns <code>null</code> if this deque is empty.                </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#pollLast--">pollLast</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the tail of this deque, or <code>null</code> if this deque is empty           </dd>  </dl></li></ul> <a end_ctx_id="method:pollLast--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getFirst-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getFirst--"/><a name="getFirst--"/><ul class="blockList"><li class="blockList"><h4>getFirst</h4><pre>public <a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a> getFirst()</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../java/util/Deque.html#getFirst--">Deque</a></code>   </span> </div><div class="block">Retrieves, but does not remove, the first element of this deque. This method differs from <a href="../../java/util/Deque.html#peekFirst--"><code>peekFirst</code></a> only in that it throws an exception if this deque is empty.                           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#getFirst--">getFirst</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of this deque    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/util/NoSuchElementException.html" title="class in java.util">NoSuchElementException</a></code> - if this deque is empty       </dd>   </dl></li></ul> <a end_ctx_id="method:getFirst--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getLast-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getLast--"/><a name="getLast--"/><ul class="blockList"><li class="blockList"><h4>getLast</h4><pre>public <a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a> getLast()</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../java/util/Deque.html#getLast--">Deque</a></code>   </span> </div><div class="block">Retrieves, but does not remove, the last element of this deque. This method differs from <a href="../../java/util/Deque.html#peekLast--"><code>peekLast</code></a> only in that it throws an exception if this deque is empty.                           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#getLast--">getLast</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the tail of this deque    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/util/NoSuchElementException.html" title="class in java.util">NoSuchElementException</a></code> - if this deque is empty       </dd>   </dl></li></ul> <a end_ctx_id="method:getLast--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:peekFirst-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:peekFirst--"/><a name="peekFirst--"/><ul class="blockList"><li class="blockList"><h4>peekFirst</h4><pre>public <a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a> peekFirst()</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../java/util/Deque.html#peekFirst--">Deque</a></code>   </span> </div><div class="block">Retrieves, but does not remove, the first element of this deque, or returns <code>null</code> if this deque is empty.                  </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#peekFirst--">peekFirst</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of this deque, or <code>null</code> if this deque is empty           </dd>  </dl></li></ul> <a end_ctx_id="method:peekFirst--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:peekLast-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:peekLast--"/><a name="peekLast--"/><ul class="blockList"><li class="blockList"><h4>peekLast</h4><pre>public <a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a> peekLast()</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../java/util/Deque.html#peekLast--">Deque</a></code>   </span> </div><div class="block">Retrieves, but does not remove, the last element of this deque, or returns <code>null</code> if this deque is empty.                  </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#peekLast--">peekLast</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the tail of this deque, or <code>null</code> if this deque is empty           </dd>  </dl></li></ul> <a end_ctx_id="method:peekLast--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:removeFirstOccurrence-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:removeFirstOccurrence-java.lang.Object-"/><a name="removeFirstOccurrence-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>removeFirstOccurrence</h4><pre>public boolean removeFirstOccurrence(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Removes the first occurrence of the specified element in this deque (when traversing the deque from head to tail). If the deque does not contain the element, it is unchanged. More formally, removes the first element <code>e</code> such that <code>o.equals(e)</code> (if such an element exists). Returns <code>true</code> if this deque contained the specified element (or equivalently, if this deque changed as a result of the call).                                                                 </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#removeFirstOccurrence-java.lang.Object-">removeFirstOccurrence</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element to be removed from this deque, if present           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if the deque contained the specified element        </dd>   </dl></li></ul> <a end_ctx_id="method:removeFirstOccurrence-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:removeLastOccurrence-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:removeLastOccurrence-java.lang.Object-"/><a name="removeLastOccurrence-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>removeLastOccurrence</h4><pre>public boolean removeLastOccurrence(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Removes the last occurrence of the specified element in this deque (when traversing the deque from head to tail). If the deque does not contain the element, it is unchanged. More formally, removes the last element <code>e</code> such that <code>o.equals(e)</code> (if such an element exists). Returns <code>true</code> if this deque contained the specified element (or equivalently, if this deque changed as a result of the call).                                                                 </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#removeLastOccurrence-java.lang.Object-">removeLastOccurrence</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element to be removed from this deque, if present           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if the deque contained the specified element        </dd>   </dl></li></ul> <a name="add-java.lang.Object-"/><a end_ctx_id="method:removeLastOccurrence-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:add-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:add-E-"/><a name="add-E-"/><ul class="blockList"><li class="blockList"><h4>add</h4><pre>public boolean add(<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a> e)</pre><div class="block">Inserts the specified element at the end of this deque.<p>This method is equivalent to <a href="../../java/util/ArrayDeque.html#addLast-E-"><code>addLast(E)</code></a>.     </p>         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#add-E-">add</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#add-E-">add</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Queue.html#add-E-">add</a></code> in interface <code><a href="../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#add-E-">add</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> (as specified by <a href="../../java/util/Collection.html#add-E-"><code>Collection.add(E)</code></a>)     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null        </dd>       </dl></li></ul> <a name="offer-java.lang.Object-"/><a end_ctx_id="method:add-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:offer-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:offer-E-"/><a name="offer-E-"/><ul class="blockList"><li class="blockList"><h4>offer</h4><pre>public boolean offer(<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a> e)</pre><div class="block">Inserts the specified element at the end of this deque.<p>This method is equivalent to <a href="../../java/util/ArrayDeque.html#offerLast-E-"><code>offerLast(E)</code></a>.     </p>         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#offer-E-">offer</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Queue.html#offer-E-">offer</a></code> in interface <code><a href="../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> (as specified by <a href="../../java/util/Queue.html#offer-E-"><code>Queue.offer(E)</code></a>)     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null        </dd>     </dl></li></ul> <a end_ctx_id="method:offer-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:remove-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:remove--"/><a name="remove--"/><ul class="blockList"><li class="blockList"><h4>remove</h4><pre>public <a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a> remove()</pre><div class="block">Retrieves and removes the head of the queue represented by this deque. This method differs from <a href="../../java/util/ArrayDeque.html#poll--"><code>poll</code></a> only in that it throws an exception if this deque is empty.<p>This method is equivalent to <a href="../../java/util/ArrayDeque.html#removeFirst--"><code>removeFirst()</code></a>.     </p>                            </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#remove--">remove</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Queue.html#remove--">remove</a></code> in interface <code><a href="../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of the queue represented by this deque        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/util/NoSuchElementException.html" title="class in java.util">NoSuchElementException</a></code> - if this deque is empty       </dd>    </dl></li></ul> <a end_ctx_id="method:remove--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:poll-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:poll--"/><a name="poll--"/><ul class="blockList"><li class="blockList"><h4>poll</h4><pre>public <a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a> poll()</pre><div class="block">Retrieves and removes the head of the queue represented by this deque (in other words, the first element of this deque), or returns <code>null</code> if this deque is empty.<p>This method is equivalent to <a href="../../java/util/ArrayDeque.html#pollFirst--"><code>pollFirst()</code></a>.     </p>                            </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#poll--">poll</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Queue.html#poll--">poll</a></code> in interface <code><a href="../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of the queue represented by this deque, or <code>null</code> if this deque is empty               </dd>   </dl></li></ul> <a end_ctx_id="method:poll--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:element-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:element--"/><a name="element--"/><ul class="blockList"><li class="blockList"><h4>element</h4><pre>public <a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a> element()</pre><div class="block">Retrieves, but does not remove, the head of the queue represented by this deque. This method differs from <a href="../../java/util/ArrayDeque.html#peek--"><code>peek</code></a> only in that it throws an exception if this deque is empty.<p>This method is equivalent to <a href="../../java/util/ArrayDeque.html#getFirst--"><code>getFirst()</code></a>.     </p>                              </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#element--">element</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Queue.html#element--">element</a></code> in interface <code><a href="../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of the queue represented by this deque        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/util/NoSuchElementException.html" title="class in java.util">NoSuchElementException</a></code> - if this deque is empty       </dd>    </dl></li></ul> <a end_ctx_id="method:element--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:peek-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:peek--"/><a name="peek--"/><ul class="blockList"><li class="blockList"><h4>peek</h4><pre>public <a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a> peek()</pre><div class="block">Retrieves, but does not remove, the head of the queue represented by this deque, or returns <code>null</code> if this deque is empty.<p>This method is equivalent to <a href="../../java/util/ArrayDeque.html#peekFirst--"><code>peekFirst()</code></a>.     </p>                     </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#peek--">peek</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Queue.html#peek--">peek</a></code> in interface <code><a href="../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of the queue represented by this deque, or <code>null</code> if this deque is empty               </dd>   </dl></li></ul> <a name="push-java.lang.Object-"/><a end_ctx_id="method:peek--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:push-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:push-E-"/><a name="push-E-"/><ul class="blockList"><li class="blockList"><h4>push</h4><pre>public void push(<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a> e)</pre><div class="block">Pushes an element onto the stack represented by this deque. In other words, inserts the element at the front of this deque.<p>This method is equivalent to <a href="../../java/util/ArrayDeque.html#addFirst-E-"><code>addFirst(E)</code></a>.     </p>                     </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#push-E-">push</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to push      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null        </dd>   </dl></li></ul> <a end_ctx_id="method:push-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:pop-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:pop--"/><a name="pop--"/><ul class="blockList"><li class="blockList"><h4>pop</h4><pre>public <a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a> pop()</pre><div class="block">Pops an element from the stack represented by this deque. In other words, removes and returns the first element of this deque.<p>This method is equivalent to <a href="../../java/util/ArrayDeque.html#removeFirst--"><code>removeFirst()</code></a>.     </p>                     </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#pop--">pop</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the element at the front of this deque (which is the top of the stack represented by this deque)                  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/util/NoSuchElementException.html" title="class in java.util">NoSuchElementException</a></code> - if this deque is empty       </dd>   </dl></li></ul> <a end_ctx_id="method:pop--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:size-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:size--"/><a name="size--"/><ul class="blockList"><li class="blockList"><h4>size</h4><pre>public int size()</pre><div class="block">Returns the number of elements in this deque.       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#size--">size</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#size--">size</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#size--">size</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the number of elements in this deque      </dd>    </dl></li></ul> <a end_ctx_id="method:size--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:isEmpty-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:isEmpty--"/><a name="isEmpty--"/><ul class="blockList"><li class="blockList"><h4>isEmpty</h4><pre>public boolean isEmpty()</pre><div class="block">Returns <code>true</code> if this deque contains no elements.       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#isEmpty--">isEmpty</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#isEmpty--">isEmpty</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this deque contains no elements       </dd>   </dl></li></ul> <a end_ctx_id="method:isEmpty--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:iterator-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:iterator--"/><a name="iterator--"/><ul class="blockList"><li class="blockList"><h4>iterator</h4><pre>public <a href="../../java/util/Iterator.html" title="interface in java.util">Iterator</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt; iterator()</pre><div class="block">Returns an iterator over the elements in this deque. The elements will be ordered from first (head) to last (tail). This is the same order that elements would be dequeued (via successive calls to <a href="../../java/util/ArrayDeque.html#remove--"><code>remove()</code></a> or popped (via successive calls to <a href="../../java/util/ArrayDeque.html#pop--"><code>pop()</code></a>).                                         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/Iterable.html#iterator--">iterator</a></code> in interface <code><a href="../../java/lang/Iterable.html" title="interface in java.lang">Iterable</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#iterator--">iterator</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#iterator--">iterator</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#iterator--">iterator</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an iterator over the elements in this deque       </dd>     </dl></li></ul> <a end_ctx_id="method:iterator--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:descendingIterator-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:descendingIterator--"/><a name="descendingIterator--"/><ul class="blockList"><li class="blockList"><h4>descendingIterator</h4><pre>public <a href="../../java/util/Iterator.html" title="interface in java.util">Iterator</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt; descendingIterator()</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../java/util/Deque.html#descendingIterator--">Deque</a></code>   </span> </div><div class="block">Returns an iterator over the elements in this deque in reverse sequential order. The elements will be returned in order from last (tail) to first (head).                         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#descendingIterator--">descendingIterator</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an iterator over the elements in this deque in reverse sequence          </dd>  </dl></li></ul> <a end_ctx_id="method:descendingIterator--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:contains-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:contains-java.lang.Object-"/><a name="contains-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>contains</h4><pre>public boolean contains(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Returns <code>true</code> if this deque contains the specified element. More formally, returns <code>true</code> if and only if this deque contains at least one element <code>e</code> such that <code>o.equals(e)</code>.                           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#contains-java.lang.Object-">contains</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#contains-java.lang.Object-">contains</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#contains-java.lang.Object-">contains</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - object to be checked for containment in this deque           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this deque contains the specified element        </dd>     </dl></li></ul> <a end_ctx_id="method:contains-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:remove-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:remove-java.lang.Object-"/><a name="remove-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>remove</h4><pre>public boolean remove(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Removes a single instance of the specified element from this deque. If the deque does not contain the element, it is unchanged. More formally, removes the first element <code>e</code> such that <code>o.equals(e)</code> (if such an element exists). Returns <code>true</code> if this deque contained the specified element (or equivalently, if this deque changed as a result of the call).<p>This method is equivalent to <a href="../../java/util/ArrayDeque.html#removeFirstOccurrence-java.lang.Object-"><code>removeFirstOccurrence(Object)</code></a>.     </p>                                                         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#remove-java.lang.Object-">remove</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#remove-java.lang.Object-">remove</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#remove-java.lang.Object-">remove</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element to be removed from this deque, if present           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this deque contained the specified element        </dd>     </dl></li></ul> <a end_ctx_id="method:remove-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:clear-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:clear--"/><a name="clear--"/><ul class="blockList"><li class="blockList"><h4>clear</h4><pre>public void clear()</pre><div class="block">Removes all of the elements from this deque. The deque will be empty after this call returns.                </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#clear--">clear</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#clear--">clear</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd>  </dl></li></ul> <a end_ctx_id="method:clear--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toArray-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toArray--"/><a name="toArray--"/><ul class="blockList"><li class="blockList"><h4>toArray</h4><pre>public <a href="../../java/lang/Object.html" title="class in java.lang">Object</a>[] toArray()</pre><div class="block">Returns an array containing all of the elements in this deque in proper sequence (from first to last element).<p>The returned array will be "safe" in that no references to it are maintained by this deque. (In other words, this method must allocate a new array). The caller is thus free to modify the returned array.                                    </p><p>This method acts as bridge between array-based and collection-based APIs.         </p>                  </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#toArray--">toArray</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#toArray--">toArray</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an array containing all of the elements in this deque         </dd>   </dl></li></ul> <a name="toArray-java.lang.Object:A-"/><a end_ctx_id="method:toArray--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toArray-T:A- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toArray-T:A-"/><a name="toArray-T:A-"/><ul class="blockList"><li class="blockList"><h4>toArray</h4><pre>public &lt;T&gt; T[] toArray(T[] a)</pre><div class="block">Returns an array containing all of the elements in this deque in proper sequence (from first to last element); the runtime type of the returned array is that of the specified array. If the deque fits in the specified array, it is returned therein. Otherwise, a new array is allocated with the runtime type of the specified array and the size of this deque.<p>If this deque fits in the specified array with room to spare (i.e., the array has more elements than this deque), the element in the array immediately following the end of the deque is set to <code>null</code>.                                    </p><p>Like the <a href="../../java/util/ArrayDeque.html#toArray--"><code>toArray()</code></a> method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.                                      </p><p>Suppose <code>x</code> is a deque known to contain only strings. The following code can be used to dump the deque into a newly allocated array of <code>String</code>:<pre> 
<code> String[] y = x.toArray(new String[0]);</code></pre> Note that <code>toArray(new Object[0]) </code> is identical in function to <code>toArray()</code>.                                   </p>                                                               </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#toArray-T:A-">toArray</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#toArray-T:A-">toArray</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Type Parameters: </span>   </dt><dd> <code>T</code> - the runtime type of the array to contain the collection            </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>a</code> - the array into which the elements of the deque are to be stored, if it is big enough; otherwise, a new array of the same runtime type is allocated for this purpose                                  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an array containing all of the elements in this deque         </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/ArrayStoreException.html" title="class in java.lang">ArrayStoreException</a></code> - if the runtime type of the specified array is not a supertype of the runtime type of every element in this deque                        </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified array is null        </dd>      </dl></li></ul> <a end_ctx_id="method:toArray-T:A-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:clone-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:clone--"/><a name="clone--"/><ul class="blockList"><li class="blockList"><h4>clone</h4><pre>public <a href="../../java/util/ArrayDeque.html" title="class in java.util">ArrayDeque</a>&lt;<a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque">E</a>&gt; clone()</pre><div class="block">Returns a copy of this deque.     </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/lang/Object.html#clone--">clone</a></code> in class <code><a href="../../java/lang/Object.html" title="class in java.lang">Object</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a copy of this deque    </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/Cloneable.html" title="interface in java.lang"><code>Cloneable</code></a> </dd>   </dl></li></ul> <a end_ctx_id="method:clone--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:spliterator-- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:spliterator--"><span class="diff-html-added"/></a><a name="spliterator--"/><ul class="blockListLast"><li class="blockList"><h4><span class="diff-html-added">spliterator</span></h4><pre><span class="diff-html-added">public </span><a href="../../java/util/Spliterator.html" title="interface in java.util"><span class="diff-html-added">Spliterator</span></a><span class="diff-html-added">&lt;</span><a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt; spliterator()</span></pre><div class="block"><span class="diff-html-added">Creates</span> <span class="diff-html-added">a</span> <em><a href="Spliterator.html#binding"><span class="diff-html-added">late-binding</span></a></em> <span class="diff-html-added">and</span> <em><span class="diff-html-added">fail-fast</span></em><a href="../../java/util/Spliterator.html" title="interface in java.util"><code><span class="diff-html-added">Spliterator</span></code></a> <span class="diff-html-added">over</span> <span class="diff-html-added">the</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">in</span> <span class="diff-html-added">this</span> <span class="diff-html-added">deque.</span><p><span class="diff-html-added">The</span> <code><span class="diff-html-added">Spliterator</span></code> <span class="diff-html-added">reports</span> <a href="../../java/util/Spliterator.html#SIZED"><code><span class="diff-html-added">Spliterator.SIZED</span></code></a><span class="diff-html-added">,</span> <a href="../../java/util/Spliterator.html#SUBSIZED"><code><span class="diff-html-added">Spliterator.SUBSIZED</span></code></a><span class="diff-html-added">,</span> <a href="../../java/util/Spliterator.html#ORDERED"><code><span class="diff-html-added">Spliterator.ORDERED</span></code></a><span class="diff-html-added">,</span> <span class="diff-html-added">and</span> <a href="../../java/util/Spliterator.html#NONNULL"><code><span class="diff-html-added">Spliterator.NONNULL</span></code></a><span class="diff-html-added">.</span> <span class="diff-html-added">Overriding</span> <span class="diff-html-added">implementations</span> <span class="diff-html-added">should</span> <span class="diff-html-added">document</span> <span class="diff-html-added">the</span> <span class="diff-html-added">reporting</span> <span class="diff-html-added">of</span> <span class="diff-html-added">additional</span> <span class="diff-html-added">characteristic</span> <span class="diff-html-added">values.</span>                 </p>          </div><dl> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../java/lang/Iterable.html#spliterator--"><span class="diff-html-added">spliterator</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../java/lang/Iterable.html" title="interface in java.lang"><span class="diff-html-added">Iterable</span></a><span class="diff-html-added">&lt;</span><a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../java/util/Collection.html#spliterator--"><span class="diff-html-added">spliterator</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../java/util/Collection.html" title="interface in java.util"><span class="diff-html-added">Collection</span></a><span class="diff-html-added">&lt;</span><a href="../../java/util/ArrayDeque.html" title="type parameter in ArrayDeque"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="returnLabel"><span class="diff-html-added">Returns:</span></span>   </dt><dd><span class="diff-html-added">a</span> <code><span class="diff-html-added">Spliterator</span></code> <span class="diff-html-added">over</span> <span class="diff-html-added">the</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">in</span> <span class="diff-html-added">this</span> <span class="diff-html-added">deque</span>       </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Since:</span></span>   </dt><dd><span class="diff-html-added">1.8</span></dd>    </dl></li></ul> <a end_ctx_id="method:spliterator--"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table></diff></diffreport>