<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:TimeUnit [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:TimeUnit"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../../java/io/Serializable.html" title="interface in java.io">Serializable</a>, <a href="../../../java/lang/Comparable.html" title="interface in java.lang">Comparable</a>&lt;<a href="../../../java/util/concurrent/TimeUnit.html" title="enum in java.util.concurrent">TimeUnit</a>&gt;  </dd> </dl> <hr/> <br/><pre>public enum <span class="typeNameLabel">TimeUnit</span>
extends <a href="../../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../../java/util/concurrent/TimeUnit.html" title="enum in java.util.concurrent">TimeUnit</a>&gt;</pre><div class="block">A <code>TimeUnit</code> represents time durations at a given unit of granularity and provides utility methods to convert across units, and to perform timing and delay operations in these units. A <code>TimeUnit</code> does not maintain time information, but only helps organize and use time representations that may be maintained separately across various contexts. A nanosecond is defined as one thousandth of a microsecond, a microsecond as one thousandth of a millisecond, a millisecond as one thousandth of a second, a minute as sixty seconds, an hour as sixty minutes, and a day as twenty four hours.<p>A <code>TimeUnit</code> is mainly used to inform time-based methods how a given timing parameter should be interpreted. For example, the following code will timeout in 50 milliseconds if the <a href="../../../java/util/concurrent/locks/Lock.html" title="interface in java.util.concurrent.locks"><code>lock</code></a> is not available:<pre> 
<code>
 Lock lock = ...;
 if (lock.tryLock(50L, TimeUnit.MILLISECONDS)) ...</code></pre> while this code will timeout in 50 seconds:<pre> 
<code>
 Lock lock = ...;
 if (lock.tryLock(50L, TimeUnit.SECONDS)) ...</code></pre> Note however, that there is no guarantee that a particular timeout implementation will be able to notice the passage of time at the same granularity as the given <code>TimeUnit</code>.                                                                     </p>                                                                                              </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd> </dl>  </li></ul> </div> <a end_ctx_id="class:TimeUnit"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:NANOSECONDS [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:NANOSECONDS"/><a name="NANOSECONDS"/><ul class="blockList"><li class="blockList"><h4>NANOSECONDS</h4><pre>public static final <a href="../../../java/util/concurrent/TimeUnit.html" title="enum in java.util.concurrent">TimeUnit</a> NANOSECONDS</pre><div class="block">Time unit representing one thousandth of a microsecond       </div></li></ul> <a end_ctx_id="field:NANOSECONDS"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:MICROSECONDS [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:MICROSECONDS"/><a name="MICROSECONDS"/><ul class="blockList"><li class="blockList"><h4>MICROSECONDS</h4><pre>public static final <a href="../../../java/util/concurrent/TimeUnit.html" title="enum in java.util.concurrent">TimeUnit</a> MICROSECONDS</pre><div class="block">Time unit representing one thousandth of a millisecond       </div></li></ul> <a end_ctx_id="field:MICROSECONDS"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:MILLISECONDS [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:MILLISECONDS"/><a name="MILLISECONDS"/><ul class="blockList"><li class="blockList"><h4>MILLISECONDS</h4><pre>public static final <a href="../../../java/util/concurrent/TimeUnit.html" title="enum in java.util.concurrent">TimeUnit</a> MILLISECONDS</pre><div class="block">Time unit representing one thousandth of a second       </div></li></ul> <a end_ctx_id="field:MILLISECONDS"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:SECONDS [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:SECONDS"/><a name="SECONDS"/><ul class="blockList"><li class="blockList"><h4>SECONDS</h4><pre>public static final <a href="../../../java/util/concurrent/TimeUnit.html" title="enum in java.util.concurrent">TimeUnit</a> SECONDS</pre><div class="block">Time unit representing one second    </div></li></ul> <a end_ctx_id="field:SECONDS"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:MINUTES [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:MINUTES"/><a name="MINUTES"/><ul class="blockList"><li class="blockList"><h4>MINUTES</h4><pre>public static final <a href="../../../java/util/concurrent/TimeUnit.html" title="enum in java.util.concurrent">TimeUnit</a> MINUTES</pre><div class="block">Time unit representing sixty seconds    </div></li></ul> <a end_ctx_id="field:MINUTES"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:HOURS [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:HOURS"/><a name="HOURS"/><ul class="blockList"><li class="blockList"><h4>HOURS</h4><pre>public static final <a href="../../../java/util/concurrent/TimeUnit.html" title="enum in java.util.concurrent">TimeUnit</a> HOURS</pre><div class="block">Time unit representing sixty minutes    </div></li></ul> <a end_ctx_id="field:HOURS"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:DAYS [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:DAYS"/><a name="DAYS"/><ul class="blockListLast"><li class="blockList"><h4>DAYS</h4><pre>public static final <a href="../../../java/util/concurrent/TimeUnit.html" title="enum in java.util.concurrent">TimeUnit</a> DAYS</pre><div class="block">Time unit representing twenty four hours     </div></li></ul> <a end_ctx_id="field:DAYS"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:values-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:values--"/><a name="values--"/><ul class="blockList"><li class="blockList"><h4>values</h4><pre>public static <a href="../../../java/util/concurrent/TimeUnit.html" title="enum in java.util.concurrent">TimeUnit</a>[] values()</pre><div class="block">Returns an array containing the constants of this enum type, in the order they are declared. This method may be used to iterate over the constants as follows:<pre>
for (TimeUnit c : TimeUnit.values())
    System.out.println(c);
</pre>                           </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an array containing the constants of this enum type, in the order they are declared              </dd> </dl></li></ul> <a end_ctx_id="method:values--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:valueOf-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:valueOf-java.lang.String-"/><a name="valueOf-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>valueOf</h4><pre>public static <a href="../../../java/util/concurrent/TimeUnit.html" title="enum in java.util.concurrent">TimeUnit</a> valueOf(<a href="../../../java/lang/String.html" title="class in java.lang">String</a> name)</pre><div class="block">Returns the enum constant of this type with the specified name. The string must match <i>exactly</i> an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)                                </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>name</code> - the name of the enum constant to be returned.           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the enum constant with the specified name      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if this enum type has no constant with the specified name             </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the argument is null       </dd>   </dl></li></ul> <a end_ctx_id="method:valueOf-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:convert-long-java.util.concurrent.TimeUnit- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:convert-long-java.util.concurrent.TimeUnit-"/><a name="convert-long-java.util.concurrent.TimeUnit-"/><ul class="blockList"><li class="blockList"><h4>convert</h4><pre>public long convert(long sourceDuration,
                    <a href="../../../java/util/concurrent/TimeUnit.html" title="enum in java.util.concurrent">TimeUnit</a> sourceUnit)</pre><div class="block">Converts the given time duration in the given unit to this unit. Conversions from finer to coarser granularities truncate, so lose precision. For example, converting <code>999</code> milliseconds to seconds results in <code>0</code>. Conversions from coarser to finer granularities with arguments that would numerically overflow saturate to <code>Long.MIN_VALUE</code> if negative or <code>Long.MAX_VALUE</code> if positive.<p>For example, to convert 10 minutes to milliseconds, use: <code>TimeUnit.MILLISECONDS.convert(10L, TimeUnit.MINUTES) </code>         </p>                                                    </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>sourceDuration</code> - the time duration in the given <code>sourceUnit</code>         </dd><dd> <code>sourceUnit</code> - the unit of the <code>sourceDuration</code> argument        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the converted duration in this unit, or <code>Long.MIN_VALUE</code> if conversion would negatively overflow, or <code>Long.MAX_VALUE</code> if it would positively overflow.                   </dd>  </dl></li></ul> <a end_ctx_id="method:convert-long-java.util.concurrent.TimeUnit-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toNanos-long- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toNanos-long-"/><a name="toNanos-long-"/><ul class="blockList"><li class="blockList"><h4>toNanos</h4><pre>public long toNanos(long duration)</pre><div class="block">Equivalent to <a href="../../../java/util/concurrent/TimeUnit.html#convert-long-java.util.concurrent.TimeUnit-"><code>NANOSECONDS.convert(duration, this) </code></a>.  </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>duration</code> - the duration    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the converted duration, or <code>Long.MIN_VALUE</code> if conversion would negatively overflow, or <code>Long.MAX_VALUE</code> if it would positively overflow.                </dd>  </dl></li></ul> <a end_ctx_id="method:toNanos-long-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toMicros-long- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toMicros-long-"/><a name="toMicros-long-"/><ul class="blockList"><li class="blockList"><h4>toMicros</h4><pre>public long toMicros(long duration)</pre><div class="block">Equivalent to <a href="../../../java/util/concurrent/TimeUnit.html#convert-long-java.util.concurrent.TimeUnit-"><code>MICROSECONDS.convert(duration, this) </code></a>.  </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>duration</code> - the duration    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the converted duration, or <code>Long.MIN_VALUE</code> if conversion would negatively overflow, or <code>Long.MAX_VALUE</code> if it would positively overflow.                </dd>  </dl></li></ul> <a end_ctx_id="method:toMicros-long-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toMillis-long- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toMillis-long-"/><a name="toMillis-long-"/><ul class="blockList"><li class="blockList"><h4>toMillis</h4><pre>public long toMillis(long duration)</pre><div class="block">Equivalent to <a href="../../../java/util/concurrent/TimeUnit.html#convert-long-java.util.concurrent.TimeUnit-"><code>MILLISECONDS.convert(duration, this) </code></a>.  </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>duration</code> - the duration    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the converted duration, or <code>Long.MIN_VALUE</code> if conversion would negatively overflow, or <code>Long.MAX_VALUE</code> if it would positively overflow.                </dd>  </dl></li></ul> <a end_ctx_id="method:toMillis-long-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toSeconds-long- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toSeconds-long-"/><a name="toSeconds-long-"/><ul class="blockList"><li class="blockList"><h4>toSeconds</h4><pre>public long toSeconds(long duration)</pre><div class="block">Equivalent to <a href="../../../java/util/concurrent/TimeUnit.html#convert-long-java.util.concurrent.TimeUnit-"><code>SECONDS.convert(duration, this) </code></a>.  </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>duration</code> - the duration    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the converted duration, or <code>Long.MIN_VALUE</code> if conversion would negatively overflow, or <code>Long.MAX_VALUE</code> if it would positively overflow.                </dd>  </dl></li></ul> <a end_ctx_id="method:toSeconds-long-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toMinutes-long- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toMinutes-long-"/><a name="toMinutes-long-"/><ul class="blockList"><li class="blockList"><h4>toMinutes</h4><pre>public long toMinutes(long duration)</pre><div class="block">Equivalent to <a href="../../../java/util/concurrent/TimeUnit.html#convert-long-java.util.concurrent.TimeUnit-"><code>MINUTES.convert(duration, this) </code></a>.  </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>duration</code> - the duration    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the converted duration, or <code>Long.MIN_VALUE</code> if conversion would negatively overflow, or <code>Long.MAX_VALUE</code> if it would positively overflow.                </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.6</dd>   </dl></li></ul> <a end_ctx_id="method:toMinutes-long-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toHours-long- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toHours-long-"/><a name="toHours-long-"/><ul class="blockList"><li class="blockList"><h4>toHours</h4><pre>public long toHours(long duration)</pre><div class="block">Equivalent to <a href="../../../java/util/concurrent/TimeUnit.html#convert-long-java.util.concurrent.TimeUnit-"><code>HOURS.convert(duration, this) </code></a>.  </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>duration</code> - the duration    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the converted duration, or <code>Long.MIN_VALUE</code> if conversion would negatively overflow, or <code>Long.MAX_VALUE</code> if it would positively overflow.                </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.6</dd>   </dl></li></ul> <a end_ctx_id="method:toHours-long-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toDays-long- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toDays-long-"/><a name="toDays-long-"/><ul class="blockList"><li class="blockList"><h4>toDays</h4><pre>public long toDays(long duration)</pre><div class="block">Equivalent to <a href="../../../java/util/concurrent/TimeUnit.html#convert-long-java.util.concurrent.TimeUnit-"><code>DAYS.convert(duration, this) </code></a>.  </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>duration</code> - the duration    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the converted duration  </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.6</dd>   </dl></li></ul> <a end_ctx_id="method:toDays-long-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:timedWait-java.lang.Object-long- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:timedWait-java.lang.Object-long-"/><a name="timedWait-java.lang.Object-long-"/><ul class="blockList"><li class="blockList"><h4>timedWait</h4><pre>public void timedWait(<a href="../../../java/lang/Object.html" title="class in java.lang">Object</a> obj,
                      long timeout)
               throws <a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></pre><div class="block">Performs a timed <a href="../../../java/lang/Object.html#wait-long-int-"><code>Object.wait</code></a> using this time unit. This is a convenience method that converts timeout arguments into the form required by the <code>Object.wait</code> method.<p>For example, you could implement a blocking <code>poll</code> method (see <a href="../../../java/util/concurrent/BlockingQueue.html#poll-long-java.util.concurrent.TimeUnit-"><code>BlockingQueue.poll</code></a>) using:<pre> 
<code>
 public synchronized Object poll(long timeout, TimeUnit unit)
     throws InterruptedException {
   while (empty) {
     unit.timedWait(this, timeout);
     ...
   }
 }</code></pre>           </p>                        </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>obj</code> - the object to wait on       </dd><dd> <code>timeout</code> - the maximum time to wait. If less than or equal to zero, do not wait at all.                   </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></code> - if interrupted while waiting      </dd>  </dl></li></ul> <a end_ctx_id="method:timedWait-java.lang.Object-long-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:timedJoin-java.lang.Thread-long- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:timedJoin-java.lang.Thread-long-"/><a name="timedJoin-java.lang.Thread-long-"/><ul class="blockList"><li class="blockList"><h4>timedJoin</h4><pre>public void timedJoin(<a href="../../../java/lang/Thread.html" title="class in java.lang">Thread</a> thread,
                      long timeout)
               throws <a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></pre><div class="block">Performs a timed <a href="../../../java/lang/Thread.html#join-long-int-"><code>Thread.join</code></a> using this time unit. This is a convenience method that converts time arguments into the form required by the <code>Thread.join</code> method.                        </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>thread</code> - the thread to wait for       </dd><dd> <code>timeout</code> - the maximum time to wait. If less than or equal to zero, do not wait at all.                   </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></code> - if interrupted while waiting      </dd>  </dl></li></ul> <a end_ctx_id="method:timedJoin-java.lang.Thread-long-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:sleep-long- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:sleep-long-"/><a name="sleep-long-"/><ul class="blockListLast"><li class="blockList"><h4>sleep</h4><pre>public void sleep(long timeout)
           throws <a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></pre><div class="block">Performs a <a href="../../../java/lang/Thread.html#sleep-long-int-"><code>Thread.sleep</code></a> using this time unit. This is a convenience method that converts time arguments into the form required by the <code>Thread.sleep</code> method.                       </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>timeout</code> - the minimum time to sleep. If less than or equal to zero, do not sleep at all.                   </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></code> - if interrupted while sleeping      </dd>  </dl></li></ul> <a end_ctx_id="method:sleep-long-"/>  </td></tr></table></td></tr></table></diff></diffreport>