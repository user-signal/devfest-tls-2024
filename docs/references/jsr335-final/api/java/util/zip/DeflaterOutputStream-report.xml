<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:DeflaterOutputStream [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:DeflaterOutputStream"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../../java/io/Closeable.html" title="interface in java.io">Closeable</a>, <a href="../../../java/io/Flushable.html" title="interface in java.io">Flushable</a>, <a href="../../../java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a>   </dd> </dl><dl> <dt>Direct Known Subclasses:  </dt><dd> <a href="../../../java/util/zip/GZIPOutputStream.html" title="class in java.util.zip">GZIPOutputStream</a>, <a href="../../../java/util/zip/ZipOutputStream.html" title="class in java.util.zip">ZipOutputStream</a>  </dd> </dl> <hr/> <br/><pre>public class <span class="typeNameLabel">DeflaterOutputStream</span>
extends <a href="../../../java/io/FilterOutputStream.html" title="class in java.io">FilterOutputStream</a></pre><div class="block">This class implements an output stream filter for compressing data in the "deflate" compression format. It is also used as the basis for other types of compression filters, such as GZIPOutputStream.                              </div><dl> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/util/zip/Deflater.html" title="class in java.util.zip"><code>Deflater</code></a> </dd> </dl>  </li></ul> </div> <a end_ctx_id="class:DeflaterOutputStream"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:def [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:def"/><a name="def"/><ul class="blockList"><li class="blockList"><h4>def</h4><pre>protected <a href="../../../java/util/zip/Deflater.html" title="class in java.util.zip">Deflater</a> def</pre><div class="block">Compressor for this stream.   </div></li></ul> <a end_ctx_id="field:def"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:buf [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:buf"/><a name="buf"/><ul class="blockListLast"><li class="blockList"><h4>buf</h4><pre>protected byte[] buf</pre><div class="block">Output buffer for writing compressed data.     </div></li></ul> <a end_ctx_id="field:buf"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:DeflaterOutputStream-java.io.OutputStream-java.util.zip.Deflater-int-boolean- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:DeflaterOutputStream-java.io.OutputStream-java.util.zip.Deflater-int-boolean-"/><a name="DeflaterOutputStream-java.io.OutputStream-java.util.zip.Deflater-int-boolean-"/><ul class="blockList"><li class="blockList"><h4>DeflaterOutputStream</h4><pre>public DeflaterOutputStream(<a href="../../../java/io/OutputStream.html" title="class in java.io">OutputStream</a> out,
                            <a href="../../../java/util/zip/Deflater.html" title="class in java.util.zip">Deflater</a> def,
                            int size,
                            boolean syncFlush)</pre><div class="block">Creates a new output stream with the specified compressor, buffer size and flush mode.             </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>out</code> - the output stream     </dd><dd> <code>def</code> - the compressor ("deflater")     </dd><dd> <code>size</code> - the output buffer size      </dd><dd> <code>syncFlush</code> - if <code>true</code> the <a href="../../../java/util/zip/DeflaterOutputStream.html#flush--"><code>flush()</code></a> method of this instance flushes the compressor with flush mode <a href="../../../java/util/zip/Deflater.html#SYNC_FLUSH"><code>Deflater.SYNC_FLUSH</code></a> before flushing the output stream, otherwise only flushes the output stream                            </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if <code>size &lt;= 0  </code>    </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.7</dd>   </dl></li></ul> <a end_ctx_id="constructor:DeflaterOutputStream-java.io.OutputStream-java.util.zip.Deflater-int-boolean-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:DeflaterOutputStream-java.io.OutputStream-java.util.zip.Deflater-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:DeflaterOutputStream-java.io.OutputStream-java.util.zip.Deflater-int-"/><a name="DeflaterOutputStream-java.io.OutputStream-java.util.zip.Deflater-int-"/><ul class="blockList"><li class="blockList"><h4>DeflaterOutputStream</h4><pre>public DeflaterOutputStream(<a href="../../../java/io/OutputStream.html" title="class in java.io">OutputStream</a> out,
                            <a href="../../../java/util/zip/Deflater.html" title="class in java.util.zip">Deflater</a> def,
                            int size)</pre><div class="block">Creates a new output stream with the specified compressor and buffer size.<p>The new output stream instance is created as if by invoking the 4-argument constructor DeflaterOutputStream(out, def, size, false).                 </p>           </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>out</code> - the output stream     </dd><dd> <code>def</code> - the compressor ("deflater")     </dd><dd> <code>size</code> - the output buffer size      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if <code>size &lt;= 0  </code>    </dd>  </dl></li></ul> <a end_ctx_id="constructor:DeflaterOutputStream-java.io.OutputStream-java.util.zip.Deflater-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:DeflaterOutputStream-java.io.OutputStream-java.util.zip.Deflater-boolean- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:DeflaterOutputStream-java.io.OutputStream-java.util.zip.Deflater-boolean-"/><a name="DeflaterOutputStream-java.io.OutputStream-java.util.zip.Deflater-boolean-"/><ul class="blockList"><li class="blockList"><h4>DeflaterOutputStream</h4><pre>public DeflaterOutputStream(<a href="../../../java/io/OutputStream.html" title="class in java.io">OutputStream</a> out,
                            <a href="../../../java/util/zip/Deflater.html" title="class in java.util.zip">Deflater</a> def,
                            boolean syncFlush)</pre><div class="block">Creates a new output stream with the specified compressor, flush mode and a default buffer size.               </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>out</code> - the output stream     </dd><dd> <code>def</code> - the compressor ("deflater")     </dd><dd> <code>syncFlush</code> - if <code>true</code> the <a href="../../../java/util/zip/DeflaterOutputStream.html#flush--"><code>flush()</code></a> method of this instance flushes the compressor with flush mode <a href="../../../java/util/zip/Deflater.html#SYNC_FLUSH"><code>Deflater.SYNC_FLUSH</code></a> before flushing the output stream, otherwise only flushes the output stream                            </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.7</dd>  </dl></li></ul> <a end_ctx_id="constructor:DeflaterOutputStream-java.io.OutputStream-java.util.zip.Deflater-boolean-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:DeflaterOutputStream-java.io.OutputStream-java.util.zip.Deflater- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:DeflaterOutputStream-java.io.OutputStream-java.util.zip.Deflater-"/><a name="DeflaterOutputStream-java.io.OutputStream-java.util.zip.Deflater-"/><ul class="blockList"><li class="blockList"><h4>DeflaterOutputStream</h4><pre>public DeflaterOutputStream(<a href="../../../java/io/OutputStream.html" title="class in java.io">OutputStream</a> out,
                            <a href="../../../java/util/zip/Deflater.html" title="class in java.util.zip">Deflater</a> def)</pre><div class="block">Creates a new output stream with the specified compressor and a default buffer size.<p>The new output stream instance is created as if by invoking the 3-argument constructor DeflaterOutputStream(out, def, false).                </p>             </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>out</code> - the output stream     </dd><dd> <code>def</code> - the compressor ("deflater")     </dd> </dl></li></ul> <a end_ctx_id="constructor:DeflaterOutputStream-java.io.OutputStream-java.util.zip.Deflater-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:DeflaterOutputStream-java.io.OutputStream-boolean- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:DeflaterOutputStream-java.io.OutputStream-boolean-"/><a name="DeflaterOutputStream-java.io.OutputStream-boolean-"/><ul class="blockList"><li class="blockList"><h4>DeflaterOutputStream</h4><pre>public DeflaterOutputStream(<a href="../../../java/io/OutputStream.html" title="class in java.io">OutputStream</a> out,
                            boolean syncFlush)</pre><div class="block">Creates a new output stream with a default compressor, a default buffer size and the specified flush mode.                 </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>out</code> - the output stream     </dd><dd> <code>syncFlush</code> - if <code>true</code> the <a href="../../../java/util/zip/DeflaterOutputStream.html#flush--"><code>flush()</code></a> method of this instance flushes the compressor with flush mode <a href="../../../java/util/zip/Deflater.html#SYNC_FLUSH"><code>Deflater.SYNC_FLUSH</code></a> before flushing the output stream, otherwise only flushes the output stream                            </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.7</dd>  </dl></li></ul> <a end_ctx_id="constructor:DeflaterOutputStream-java.io.OutputStream-boolean-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:DeflaterOutputStream-java.io.OutputStream- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:DeflaterOutputStream-java.io.OutputStream-"/><a name="DeflaterOutputStream-java.io.OutputStream-"/><ul class="blockListLast"><li class="blockList"><h4>DeflaterOutputStream</h4><pre>public DeflaterOutputStream(<a href="../../../java/io/OutputStream.html" title="class in java.io">OutputStream</a> out)</pre><div class="block">Creates a new output stream with a default compressor and buffer size.<p>The new output stream instance is created as if by invoking the 2-argument constructor DeflaterOutputStream(out, false).               </p>           </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>out</code> - the output stream     </dd> </dl></li></ul> <a end_ctx_id="constructor:DeflaterOutputStream-java.io.OutputStream-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:write-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:write-int-"/><a name="write-int-"/><ul class="blockList"><li class="blockList"><h4>write</h4><pre>public void write(int b)
           throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Writes a byte to the compressed output stream. This method will block until the byte can be written.                 </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/io/FilterOutputStream.html#write-int-">write</a></code> in class <code><a href="../../../java/io/FilterOutputStream.html" title="class in java.io">FilterOutputStream</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>b</code> - the byte to be written       </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error has occurred        </dd>   </dl></li></ul> <a end_ctx_id="method:write-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:write-byte:A-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:write-byte:A-int-int-"/><a name="write-byte:A-int-int-"/><ul class="blockList"><li class="blockList"><h4>write</h4><pre>public void write(byte[] b,
                  int off,
                  int len)
           throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Writes an array of bytes to the compressed output stream. This method will block until all the bytes are written.                   </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/io/FilterOutputStream.html#write-byte:A-int-int-">write</a></code> in class <code><a href="../../../java/io/FilterOutputStream.html" title="class in java.io">FilterOutputStream</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>b</code> - the data to be written       </dd><dd> <code>off</code> - the start offset of the data        </dd><dd> <code>len</code> - the length of the data       </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error has occurred        </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/io/FilterOutputStream.html#write-int-"><code>FilterOutputStream.write(int)</code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:write-byte:A-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:finish-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:finish--"/><a name="finish--"/><ul class="blockList"><li class="blockList"><h4>finish</h4><pre>public void finish()
            throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Finishes writing compressed data to the output stream without closing the underlying stream. Use this method when applying multiple filters in succession to the same output stream.                          </div><dl> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error has occurred        </dd> </dl></li></ul> <a end_ctx_id="method:finish--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:close-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:close--"/><a name="close--"/><ul class="blockList"><li class="blockList"><h4>close</h4><pre>public void close()
           throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Writes remaining compressed data to the output stream and closes the underlying stream.            </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/io/Closeable.html#close--">close</a></code> in interface <code><a href="../../../java/io/Closeable.html" title="interface in java.io">Closeable</a></code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/lang/AutoCloseable.html#close--">close</a></code> in interface <code><a href="../../../java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a></code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/io/FilterOutputStream.html#close--">close</a></code> in class <code><a href="../../../java/io/FilterOutputStream.html" title="class in java.io">FilterOutputStream</a></code>  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error has occurred        </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/io/FilterOutputStream.html#flush--"><code>FilterOutputStream.flush()</code></a>, <a href="../../../java/io/FilterOutputStream.html#out"><code>FilterOutputStream.out</code></a>  </dd>     </dl></li></ul> <a end_ctx_id="method:close--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:deflate-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:deflate--"/><a name="deflate--"/><ul class="blockList"><li class="blockList"><h4>deflate</h4><pre>protected void deflate()
                throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Writes next block of compressed data to the output stream.         </div><dl> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error has occurred        </dd> </dl></li></ul> <a end_ctx_id="method:deflate--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:flush-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:flush--"/><a name="flush--"/><ul class="blockListLast"><li class="blockList"><h4>flush</h4><pre>public void flush()
           throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Flushes the compressed output stream. If <a href="../../../java/util/zip/DeflaterOutputStream.html#DeflaterOutputStream-java.io.OutputStream-java.util.zip.Deflater-int-boolean-"><code>syncFlush</code></a> is <code>true</code> when this compressed output stream is constructed, this method first flushes the underlying <code>compressor</code> with the flush mode <a href="../../../java/util/zip/Deflater.html#SYNC_FLUSH"><code>Deflater.SYNC_FLUSH</code></a> to force all pending data to be flushed out to the output stream and then flushes the output stream. Otherwise this method only flushes the output stream without flushing the <code>compressor</code>.                                                          </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/io/Flushable.html#flush--">flush</a></code> in interface <code><a href="../../../java/io/Flushable.html" title="interface in java.io">Flushable</a></code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/io/FilterOutputStream.html#flush--">flush</a></code> in class <code><a href="../../../java/io/FilterOutputStream.html" title="class in java.io">FilterOutputStream</a></code>  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error has occurred        </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.7</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/io/FilterOutputStream.html#out"><code>FilterOutputStream.out</code></a> </dd>     </dl></li></ul> <a end_ctx_id="method:flush--"/>  </td></tr></table></td></tr></table></diff></diffreport>