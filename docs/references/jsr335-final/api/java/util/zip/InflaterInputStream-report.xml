<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:InflaterInputStream [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:InflaterInputStream"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../../java/io/Closeable.html" title="interface in java.io">Closeable</a>, <a href="../../../java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a>  </dd> </dl><dl> <dt>Direct Known Subclasses:  </dt><dd> <a href="../../../java/util/zip/GZIPInputStream.html" title="class in java.util.zip">GZIPInputStream</a>, <a href="../../../java/util/zip/ZipInputStream.html" title="class in java.util.zip">ZipInputStream</a>  </dd> </dl> <hr/> <br/><pre>public class <span class="typeNameLabel">InflaterInputStream</span>
extends <a href="../../../java/io/FilterInputStream.html" title="class in java.io">FilterInputStream</a></pre><div class="block">This class implements a stream filter for uncompressing data in the "deflate" compression format. It is also used as the basis for other decompression filters, such as GZIPInputStream.                           </div><dl> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/util/zip/Inflater.html" title="class in java.util.zip"><code>Inflater</code></a> </dd> </dl>  </li></ul> </div> <a end_ctx_id="class:InflaterInputStream"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:inf [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:inf"/><a name="inf"/><ul class="blockList"><li class="blockList"><h4>inf</h4><pre>protected <a href="../../../java/util/zip/Inflater.html" title="class in java.util.zip">Inflater</a> inf</pre><div class="block">Decompressor for this stream.   </div></li></ul> <a end_ctx_id="field:inf"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:buf [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:buf"/><a name="buf"/><ul class="blockList"><li class="blockList"><h4>buf</h4><pre>protected byte[] buf</pre><div class="block">Input buffer for decompression.   </div></li></ul> <a end_ctx_id="field:buf"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:len [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:len"/><a name="len"/><ul class="blockListLast"><li class="blockList"><h4>len</h4><pre>protected int len</pre><div class="block">Length of input buffer.   </div></li></ul> <a end_ctx_id="field:len"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:InflaterInputStream-java.io.InputStream-java.util.zip.Inflater-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:InflaterInputStream-java.io.InputStream-java.util.zip.Inflater-int-"/><a name="InflaterInputStream-java.io.InputStream-java.util.zip.Inflater-int-"/><ul class="blockList"><li class="blockList"><h4>InflaterInputStream</h4><pre>public InflaterInputStream(<a href="../../../java/io/InputStream.html" title="class in java.io">InputStream</a> in,
                           <a href="../../../java/util/zip/Inflater.html" title="class in java.util.zip">Inflater</a> inf,
                           int size)</pre><div class="block">Creates a new input stream with the specified decompressor and buffer size.           </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>in</code> - the input stream     </dd><dd> <code>inf</code> - the decompressor ("inflater")     </dd><dd> <code>size</code> - the input buffer size      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if <code>size &lt;= 0  </code>    </dd>  </dl></li></ul> <a end_ctx_id="constructor:InflaterInputStream-java.io.InputStream-java.util.zip.Inflater-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:InflaterInputStream-java.io.InputStream-java.util.zip.Inflater- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:InflaterInputStream-java.io.InputStream-java.util.zip.Inflater-"/><a name="InflaterInputStream-java.io.InputStream-java.util.zip.Inflater-"/><ul class="blockList"><li class="blockList"><h4>InflaterInputStream</h4><pre>public InflaterInputStream(<a href="../../../java/io/InputStream.html" title="class in java.io">InputStream</a> in,
                           <a href="../../../java/util/zip/Inflater.html" title="class in java.util.zip">Inflater</a> inf)</pre><div class="block">Creates a new input stream with the specified decompressor and a default buffer size.             </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>in</code> - the input stream     </dd><dd> <code>inf</code> - the decompressor ("inflater")     </dd> </dl></li></ul> <a end_ctx_id="constructor:InflaterInputStream-java.io.InputStream-java.util.zip.Inflater-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:InflaterInputStream-java.io.InputStream- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:InflaterInputStream-java.io.InputStream-"/><a name="InflaterInputStream-java.io.InputStream-"/><ul class="blockListLast"><li class="blockList"><h4>InflaterInputStream</h4><pre>public InflaterInputStream(<a href="../../../java/io/InputStream.html" title="class in java.io">InputStream</a> in)</pre><div class="block">Creates a new input stream with a default decompressor and buffer size.           </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>in</code> - the input stream     </dd> </dl></li></ul> <a end_ctx_id="constructor:InflaterInputStream-java.io.InputStream-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:read-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:read--"/><a name="read--"/><ul class="blockList"><li class="blockList"><h4>read</h4><pre>public int read()
         throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Reads a byte of uncompressed data. This method will block until enough input is available for decompression.                </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/io/FilterInputStream.html#read--">read</a></code> in class <code><a href="../../../java/io/FilterInputStream.html" title="class in java.io">FilterInputStream</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the byte read, or -1 if end of compressed input is reached           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error has occurred        </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/io/FilterInputStream.html#in"><code>FilterInputStream.in</code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:read--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:read-byte:A-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:read-byte:A-int-int-"/><a name="read-byte:A-int-int-"/><ul class="blockList"><li class="blockList"><h4>read</h4><pre>public int read(byte[] b,
                int off,
                int len)
         throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Reads uncompressed data into an array of bytes. If <code>len</code> is not zero, the method will block until some input can be decompressed; otherwise, no bytes are read and <code>0</code> is returned.                               </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/io/FilterInputStream.html#read-byte:A-int-int-">read</a></code> in class <code><a href="../../../java/io/FilterInputStream.html" title="class in java.io">FilterInputStream</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>b</code> - the buffer into which the data is read          </dd><dd> <code>off</code> - the start offset in the destination array <code>b</code>          </dd><dd> <code>len</code> - the maximum number of bytes read        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the actual number of bytes read, or -1 if the end of the compressed input is reached or a preset dictionary is needed                      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - If <code>b</code> is <code>null</code>.      </dd><dd> <code><a href="../../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - If <code>off</code> is negative, <code>len</code> is negative, or <code>len</code> is greater than <code>b.length - off  </code>               </dd><dd> <code><a href="../../../java/util/zip/ZipException.html" title="class in java.util.zip">ZipException</a></code> - if a ZIP format error has occurred         </dd><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error has occurred        </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/io/FilterInputStream.html#in"><code>FilterInputStream.in</code></a> </dd>     </dl></li></ul> <a end_ctx_id="method:read-byte:A-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:available-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:available--"/><a name="available--"/><ul class="blockList"><li class="blockList"><h4>available</h4><pre>public int available()
              throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Returns 0 after EOF has been reached, otherwise always return 1.<p> Programs should not count on this method to return the actual number of bytes that could be read without blocking.                    </p>          </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/io/FilterInputStream.html#available--">available</a></code> in class <code><a href="../../../java/io/FilterInputStream.html" title="class in java.io">FilterInputStream</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>1 before EOF and 0 after EOF.      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs.       </dd>   </dl></li></ul> <a end_ctx_id="method:available--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:skip-long- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:skip-long-"/><a name="skip-long-"/><ul class="blockList"><li class="blockList"><h4>skip</h4><pre>public long skip(long n)
          throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Skips specified number of bytes of uncompressed data.       </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/io/FilterInputStream.html#skip-long-">skip</a></code> in class <code><a href="../../../java/io/FilterInputStream.html" title="class in java.io">FilterInputStream</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>n</code> - the number of bytes to skip        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the actual number of bytes skipped.     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error has occurred        </dd><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if <code>n &lt; 0  </code>    </dd>    </dl></li></ul> <a end_ctx_id="method:skip-long-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:close-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:close--"/><a name="close--"/><ul class="blockList"><li class="blockList"><h4>close</h4><pre>public void close()
           throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Closes this input stream and releases any system resources associated with the stream.            </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/io/Closeable.html#close--">close</a></code> in interface <code><a href="../../../java/io/Closeable.html" title="interface in java.io">Closeable</a></code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/lang/AutoCloseable.html#close--">close</a></code> in interface <code><a href="../../../java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a></code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/io/FilterInputStream.html#close--">close</a></code> in class <code><a href="../../../java/io/FilterInputStream.html" title="class in java.io">FilterInputStream</a></code>  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error has occurred        </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/io/FilterInputStream.html#in"><code>FilterInputStream.in</code></a> </dd>     </dl></li></ul> <a end_ctx_id="method:close--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:fill-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:fill--"/><a name="fill--"/><ul class="blockList"><li class="blockList"><h4>fill</h4><pre>protected void fill()
             throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Fills input buffer with more data to decompress.       </div><dl> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error has occurred        </dd> </dl></li></ul> <a end_ctx_id="method:fill--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:markSupported-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:markSupported--"/><a name="markSupported--"/><ul class="blockList"><li class="blockList"><h4>markSupported</h4><pre>public boolean markSupported()</pre><div class="block">Tests if this input stream supports the <code>mark</code> and <code>reset</code> methods. The <code>markSupported</code> method of <code>InflaterInputStream</code> returns <code>false</code>.                 </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/io/FilterInputStream.html#markSupported--">markSupported</a></code> in class <code><a href="../../../java/io/FilterInputStream.html" title="class in java.io">FilterInputStream</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a <code>boolean</code> indicating if this stream type supports the <code>mark</code> and <code>reset</code> methods.            </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/io/InputStream.html#mark-int-"><code>InputStream.mark(int)</code></a>, <a href="../../../java/io/InputStream.html#reset--"><code>InputStream.reset()</code></a>  </dd>   </dl></li></ul> <a end_ctx_id="method:markSupported--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:mark-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:mark-int-"/><a name="mark-int-"/><ul class="blockList"><li class="blockList"><h4>mark</h4><pre>public void mark(int readlimit)</pre><div class="block">Marks the current position in this input stream.<p> The <code>mark</code> method of <code>InflaterInputStream</code> does nothing.       </p>       </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/io/FilterInputStream.html#mark-int-">mark</a></code> in class <code><a href="../../../java/io/FilterInputStream.html" title="class in java.io">FilterInputStream</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>readlimit</code> - the maximum limit of bytes that can be read before the mark position becomes invalid.                 </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/io/InputStream.html#reset--"><code>InputStream.reset()</code></a> </dd>   </dl></li></ul> <a end_ctx_id="method:mark-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:reset-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:reset--"/><a name="reset--"/><ul class="blockListLast"><li class="blockList"><h4>reset</h4><pre>public void reset()
           throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Repositions this stream to the position at the time the <code>mark</code> method was last called on this input stream.<p> The method <code>reset</code> for class <code>InflaterInputStream</code> does nothing except throw an <code>IOException</code>.            </p>                  </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/io/FilterInputStream.html#reset--">reset</a></code> in class <code><a href="../../../java/io/FilterInputStream.html" title="class in java.io">FilterInputStream</a></code>  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if this method is invoked.       </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/io/InputStream.html#mark-int-"><code>InputStream.mark(int)</code></a>, <a href="../../../java/io/IOException.html" title="class in java.io"><code>IOException</code></a>  </dd>   </dl></li></ul> <a end_ctx_id="method:reset--"/>  </td></tr></table></td></tr></table></diff></diffreport>