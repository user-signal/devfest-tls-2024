<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:DeflaterInputStream [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:DeflaterInputStream"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../../java/io/Closeable.html" title="interface in java.io">Closeable</a>, <a href="../../../java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a>  </dd> </dl> <hr/> <br/><pre>public class <span class="typeNameLabel">DeflaterInputStream</span>
extends <a href="../../../java/io/FilterInputStream.html" title="class in java.io">FilterInputStream</a></pre><div class="block">Implements an input stream filter for compressing data in the "deflate" compression format.            </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.6</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/util/zip/DeflaterOutputStream.html" title="class in java.util.zip"><code>DeflaterOutputStream</code></a>, <a href="../../../java/util/zip/InflaterOutputStream.html" title="class in java.util.zip"><code>InflaterOutputStream</code></a>, <a href="../../../java/util/zip/InflaterInputStream.html" title="class in java.util.zip"><code>InflaterInputStream</code></a>   </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:DeflaterInputStream"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:def [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:def"/><a name="def"/><ul class="blockList"><li class="blockList"><h4>def</h4><pre>protected final <a href="../../../java/util/zip/Deflater.html" title="class in java.util.zip">Deflater</a> def</pre><div class="block">Compressor for this stream.   </div></li></ul> <a end_ctx_id="field:def"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:buf [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:buf"/><a name="buf"/><ul class="blockListLast"><li class="blockList"><h4>buf</h4><pre>protected final byte[] buf</pre><div class="block">Input buffer for reading compressed data.     </div></li></ul> <a end_ctx_id="field:buf"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:DeflaterInputStream-java.io.InputStream- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:DeflaterInputStream-java.io.InputStream-"/><a name="DeflaterInputStream-java.io.InputStream-"/><ul class="blockList"><li class="blockList"><h4>DeflaterInputStream</h4><pre>public DeflaterInputStream(<a href="../../../java/io/InputStream.html" title="class in java.io">InputStream</a> in)</pre><div class="block">Creates a new input stream with a default compressor and buffer size.           </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>in</code> - input stream to read the uncompressed data to          </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if <code>in</code> is null      </dd>  </dl></li></ul> <a end_ctx_id="constructor:DeflaterInputStream-java.io.InputStream-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:DeflaterInputStream-java.io.InputStream-java.util.zip.Deflater- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:DeflaterInputStream-java.io.InputStream-java.util.zip.Deflater-"/><a name="DeflaterInputStream-java.io.InputStream-java.util.zip.Deflater-"/><ul class="blockList"><li class="blockList"><h4>DeflaterInputStream</h4><pre>public DeflaterInputStream(<a href="../../../java/io/InputStream.html" title="class in java.io">InputStream</a> in,
                           <a href="../../../java/util/zip/Deflater.html" title="class in java.util.zip">Deflater</a> defl)</pre><div class="block">Creates a new input stream with the specified compressor and a default buffer size.             </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>in</code> - input stream to read the uncompressed data to          </dd><dd> <code>defl</code> - compressor ("deflater") for this stream       </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if <code>in</code> or <code>defl</code> is null        </dd>  </dl></li></ul> <a end_ctx_id="constructor:DeflaterInputStream-java.io.InputStream-java.util.zip.Deflater-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:DeflaterInputStream-java.io.InputStream-java.util.zip.Deflater-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:DeflaterInputStream-java.io.InputStream-java.util.zip.Deflater-int-"/><a name="DeflaterInputStream-java.io.InputStream-java.util.zip.Deflater-int-"/><ul class="blockListLast"><li class="blockList"><h4>DeflaterInputStream</h4><pre>public DeflaterInputStream(<a href="../../../java/io/InputStream.html" title="class in java.io">InputStream</a> in,
                           <a href="../../../java/util/zip/Deflater.html" title="class in java.util.zip">Deflater</a> defl,
                           int bufLen)</pre><div class="block">Creates a new input stream with the specified compressor and buffer size.           </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>in</code> - input stream to read the uncompressed data to          </dd><dd> <code>defl</code> - compressor ("deflater") for this stream       </dd><dd> <code>bufLen</code> - compression buffer size     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if <code>bufLen &lt;= 0  </code>    </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if <code>in</code> or <code>defl</code> is null        </dd>  </dl></li></ul> <a end_ctx_id="constructor:DeflaterInputStream-java.io.InputStream-java.util.zip.Deflater-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:close-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:close--"/><a name="close--"/><ul class="blockList"><li class="blockList"><h4>close</h4><pre>public void close()
           throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Closes this input stream and its underlying input stream, discarding any pending uncompressed data.             </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/io/Closeable.html#close--">close</a></code> in interface <code><a href="../../../java/io/Closeable.html" title="interface in java.io">Closeable</a></code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/lang/AutoCloseable.html#close--">close</a></code> in interface <code><a href="../../../java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a></code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/io/FilterInputStream.html#close--">close</a></code> in class <code><a href="../../../java/io/FilterInputStream.html" title="class in java.io">FilterInputStream</a></code>  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs       </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/io/FilterInputStream.html#in"><code>FilterInputStream.in</code></a> </dd>     </dl></li></ul> <a end_ctx_id="method:close--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:read-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:read--"/><a name="read--"/><ul class="blockList"><li class="blockList"><h4>read</h4><pre>public int read()
         throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Reads a single byte of compressed data from the input stream. This method will block until some input can be read and compressed.                      </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/io/FilterInputStream.html#read--">read</a></code> in class <code><a href="../../../java/io/FilterInputStream.html" title="class in java.io">FilterInputStream</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a single byte of compressed data, or -1 if the end of the uncompressed input stream is reached                 </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs or if this stream is already closed              </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/io/FilterInputStream.html#in"><code>FilterInputStream.in</code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:read--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:read-byte:A-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:read-byte:A-int-int-"/><a name="read-byte:A-int-int-"/><ul class="blockList"><li class="blockList"><h4>read</h4><pre>public int read(byte[] b,
                int off,
                int len)
         throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Reads compressed data into a byte array. This method will block until some input can be read and compressed.                  </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/io/FilterInputStream.html#read-byte:A-int-int-">read</a></code> in class <code><a href="../../../java/io/FilterInputStream.html" title="class in java.io">FilterInputStream</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>b</code> - buffer into which the data is read         </dd><dd> <code>off</code> - starting offset of the data within <code>b</code>         </dd><dd> <code>len</code> - maximum number of compressed bytes to read into <code>b</code>           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the actual number of bytes read, or -1 if the end of the uncompressed input stream is reached                 </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if <code>len &gt; b.length - off    </code>    </dd><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs or if this input stream is already closed               </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/io/FilterInputStream.html#in"><code>FilterInputStream.in</code></a> </dd>     </dl></li></ul> <a end_ctx_id="method:read-byte:A-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:skip-long- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:skip-long-"/><a name="skip-long-"/><ul class="blockList"><li class="blockList"><h4>skip</h4><pre>public long skip(long n)
          throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Skips over and discards data from the input stream. This method may block until the specified number of bytes are read and skipped. <em>Note:</em> While <code>n</code> is given as a <code>long</code>, the maximum number of bytes which can be skipped is <code>Integer.MAX_VALUE</code>.                                         </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/io/FilterInputStream.html#skip-long-">skip</a></code> in class <code><a href="../../../java/io/FilterInputStream.html" title="class in java.io">FilterInputStream</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>n</code> - number of bytes to be skipped        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the actual number of bytes skipped     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs or if this stream is already closed              </dd>    </dl></li></ul> <a end_ctx_id="method:skip-long-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:available-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:available--"/><a name="available--"/><ul class="blockList"><li class="blockList"><h4>available</h4><pre>public int available()
              throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Returns 0 after EOF has been reached, otherwise always return 1.<p> Programs should not count on this method to return the actual number of bytes that could be read without blocking                    </p>          </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/io/FilterInputStream.html#available--">available</a></code> in class <code><a href="../../../java/io/FilterInputStream.html" title="class in java.io">FilterInputStream</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>zero after the end of the underlying input stream has been reached, otherwise always returns 1               </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs or if this stream is already closed              </dd>   </dl></li></ul> <a end_ctx_id="method:available--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:markSupported-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:markSupported--"/><a name="markSupported--"/><ul class="blockList"><li class="blockList"><h4>markSupported</h4><pre>public boolean markSupported()</pre><div class="block">Always returns <code>false</code> because this input stream does not support the <a href="../../../java/util/zip/DeflaterInputStream.html#mark-int-"><code>mark()</code></a> and <a href="../../../java/util/zip/DeflaterInputStream.html#reset--"><code>reset()</code></a> methods.              </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/io/FilterInputStream.html#markSupported--">markSupported</a></code> in class <code><a href="../../../java/io/FilterInputStream.html" title="class in java.io">FilterInputStream</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>false, always </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/io/FilterInputStream.html#in"><code>FilterInputStream.in</code></a>, <a href="../../../java/io/InputStream.html#mark-int-"><code>InputStream.mark(int)</code></a>, <a href="../../../java/io/InputStream.html#reset--"><code>InputStream.reset()</code></a>   </dd>   </dl></li></ul> <a end_ctx_id="method:markSupported--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:mark-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:mark-int-"/><a name="mark-int-"/><ul class="blockList"><li class="blockList"><h4>mark</h4><pre>public void mark(int limit)</pre><div class="block"> <i>This operation is not supported    </i>. </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/io/FilterInputStream.html#mark-int-">mark</a></code> in class <code><a href="../../../java/io/FilterInputStream.html" title="class in java.io">FilterInputStream</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>limit</code> - maximum bytes that can be read before invalidating the position marker             </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/io/FilterInputStream.html#in"><code>FilterInputStream.in</code></a>, <a href="../../../java/io/FilterInputStream.html#reset--"><code>FilterInputStream.reset()</code></a>  </dd>   </dl></li></ul> <a end_ctx_id="method:mark-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:reset-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:reset--"/><a name="reset--"/><ul class="blockListLast"><li class="blockList"><h4>reset</h4><pre>public void reset()
           throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block"> <i>This operation is not supported    </i>. </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/io/FilterInputStream.html#reset--">reset</a></code> in class <code><a href="../../../java/io/FilterInputStream.html" title="class in java.io">FilterInputStream</a></code>  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - always thrown    </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/io/FilterInputStream.html#in"><code>FilterInputStream.in</code></a>, <a href="../../../java/io/FilterInputStream.html#mark-int-"><code>FilterInputStream.mark(int)</code></a>  </dd>   </dl></li></ul> <a end_ctx_id="method:reset--"/>  </td></tr></table></td></tr></table></diff></diffreport>