<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:ErrorManager [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:ErrorManager"/><ul class="blockList"><li class="blockList"> <hr/> <br/><pre>public class <span class="typeNameLabel">ErrorManager</span>
extends <a href="../../../java/lang/Object.html" title="class in java.lang">Object</a></pre><div class="block">ErrorManager objects can be attached to Handlers to process any error that occurs on a Handler during Logging.<p> When processing logging output, if a Handler encounters problems then rather than throwing an Exception back to the issuer of the logging call (who is unlikely to be interested) the Handler should call its associated ErrorManager.                                    </p>                 </div>  </li></ul> </div> <a end_ctx_id="class:ErrorManager"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:GENERIC_FAILURE [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:GENERIC_FAILURE"/><a name="GENERIC_FAILURE"/><ul class="blockList"><li class="blockList"><h4>GENERIC_FAILURE</h4><pre>public static final int GENERIC_FAILURE</pre><div class="block">GENERIC_FAILURE is used for failure that don't fit into one of the other categories.             </div><dl> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../constant-values.html#java.util.logging.ErrorManager.GENERIC_FAILURE">Constant Field Values  </a> </dd> </dl></li></ul> <a end_ctx_id="field:GENERIC_FAILURE"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:WRITE_FAILURE [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:WRITE_FAILURE"/><a name="WRITE_FAILURE"/><ul class="blockList"><li class="blockList"><h4>WRITE_FAILURE</h4><pre>public static final int WRITE_FAILURE</pre><div class="block">WRITE_FAILURE is used when a write to an output stream fails.          </div><dl> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../constant-values.html#java.util.logging.ErrorManager.WRITE_FAILURE">Constant Field Values  </a> </dd> </dl></li></ul> <a end_ctx_id="field:WRITE_FAILURE"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:FLUSH_FAILURE [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:FLUSH_FAILURE"/><a name="FLUSH_FAILURE"/><ul class="blockList"><li class="blockList"><h4>FLUSH_FAILURE</h4><pre>public static final int FLUSH_FAILURE</pre><div class="block">FLUSH_FAILURE is used when a flush to an output stream fails.          </div><dl> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../constant-values.html#java.util.logging.ErrorManager.FLUSH_FAILURE">Constant Field Values  </a> </dd> </dl></li></ul> <a end_ctx_id="field:FLUSH_FAILURE"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:CLOSE_FAILURE [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:CLOSE_FAILURE"/><a name="CLOSE_FAILURE"/><ul class="blockList"><li class="blockList"><h4>CLOSE_FAILURE</h4><pre>public static final int CLOSE_FAILURE</pre><div class="block">CLOSE_FAILURE is used when a close of an output stream fails.          </div><dl> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../constant-values.html#java.util.logging.ErrorManager.CLOSE_FAILURE">Constant Field Values  </a> </dd> </dl></li></ul> <a end_ctx_id="field:CLOSE_FAILURE"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:OPEN_FAILURE [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:OPEN_FAILURE"/><a name="OPEN_FAILURE"/><ul class="blockList"><li class="blockList"><h4>OPEN_FAILURE</h4><pre>public static final int OPEN_FAILURE</pre><div class="block">OPEN_FAILURE is used when an open of an output stream fails.          </div><dl> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../constant-values.html#java.util.logging.ErrorManager.OPEN_FAILURE">Constant Field Values  </a> </dd> </dl></li></ul> <a end_ctx_id="field:OPEN_FAILURE"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:FORMAT_FAILURE [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:FORMAT_FAILURE"/><a name="FORMAT_FAILURE"/><ul class="blockListLast"><li class="blockList"><h4>FORMAT_FAILURE</h4><pre>public static final int FORMAT_FAILURE</pre><div class="block">FORMAT_FAILURE is used when formatting fails for any reason.        </div><dl> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../constant-values.html#java.util.logging.ErrorManager.FORMAT_FAILURE">Constant Field Values  </a> </dd> </dl></li></ul> <a end_ctx_id="field:FORMAT_FAILURE"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:ErrorManager-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:ErrorManager--"/><a name="ErrorManager--"/><ul class="blockListLast"><li class="blockList"><h4>ErrorManager</h4><pre>public ErrorManager()</pre></li></ul> <a end_ctx_id="constructor:ErrorManager--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:error-java.lang.String-java.lang.Exception-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:error-java.lang.String-java.lang.Exception-int-"/><a name="error-java.lang.String-java.lang.Exception-int-"/><ul class="blockListLast"><li class="blockList"><h4>error</h4><pre>public void error(<a href="../../../java/lang/String.html" title="class in java.lang">String</a> msg,
                  <a href="../../../java/lang/Exception.html" title="class in java.lang">Exception</a> ex,
                  int code)</pre><div class="block">The error method is called when a Handler failure occurs.<p> This method may be overridden in subclasses. The default behavior in this base class is that the first call is reported to System.err, and subsequent calls are ignored.                            </p>         </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>msg</code> - a descriptive string (may be null)        </dd><dd> <code>ex</code> - an exception (may be null)       </dd><dd> <code>code</code> - an error code defined in ErrorManager        </dd> </dl></li></ul> <a end_ctx_id="method:error-java.lang.String-java.lang.Exception-int-"/>  </td></tr></table></td></tr></table></diff></diffreport>