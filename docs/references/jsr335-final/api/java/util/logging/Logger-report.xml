<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:Logger [CHANGED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#EEEEEE" colspan="2"><div class="description"> <a start_ctx_id="class:Logger"/><ul class="blockList"><li class="blockList"> <hr/> <br/><pre>public class <span class="typeNameLabel">Logger</span>
extends <a href="../../../java/lang/Object.html" title="class in java.lang">Object</a></pre><div class="block">A Logger object is used to log messages for a specific system or application component. Loggers are normally named, using a hierarchical dot-separated namespace. Logger names can be arbitrary strings, but they should normally be based on the package name or class name of the logged component, such as java.net or javax.swing. In addition it is possible to create "anonymous" Loggers that are not stored in the Logger namespace.<p> Logger objects may be obtained by calls on one of the getLogger factory methods. These will either create a new Logger or return a suitable existing Logger. It is important to note that the Logger returned by one of the <code>getLogger</code> factory methods may be garbage collected at any time if a strong reference to the Logger is not kept.                                                            </p><p> Logging messages will be forwarded to registered Handler objects, which can forward the messages to a variety of destinations, including consoles, files, OS logs, etc.                         </p><p> Each Logger keeps track of a "parent" Logger, which is its nearest existing ancestor in the Logger namespace.                  </p><p> Each Logger has a "Level" associated with it. This reflects a minimum Level that this logger cares about. If a Logger's level is set to <tt>null</tt>, then its effective level is inherited from its parent, which may in turn obtain it recursively from its parent, and so on up the tree.                                                   </p><p> The log level can be configured based on the properties from the logging configuration file, as described in the description of the LogManager class. However it may also be dynamically changed by calls on the Logger.setLevel method. If a logger's level is changed the change may also affect child loggers, since any child logger that has <tt>null</tt> as its level will inherit its effective level from its parent.                                                                    </p><p> On each logging call the Logger initially performs a cheap check of the request level (e.g., SEVERE or FINE) against the effective log level of the logger. If the request level is lower than the log level, the logging call returns immediately.                                          </p><p> After passing this initial (cheap) test, the Logger will allocate a LogRecord to describe the logging message. It will then call a Filter (if present) to do a more detailed check on whether the record should be published. If that passes it will then publish the LogRecord to its output Handlers. By default, loggers also publish to their parent's Handlers, recursively up the tree.                                                                </p><p> Each Logger may have a <code>ResourceBundle</code> associated with it. The <code>ResourceBundle</code> may be specified by name, using the <a href="../../../java/util/logging/Logger.html#getLogger-java.lang.String-java.lang.String-"><code>getLogger(java.lang.String, java.lang.String) </code></a> factory method, or by value - using the <a href="../../../java/util/logging/Logger.html#setResourceBundle-java.util.ResourceBundle-"><code>setResourceBundle</code></a> method. This bundle will be used for localizing logging messages. If a Logger does not have its own <code>ResourceBundle</code> or resource bundle name, then it will inherit the <code>ResourceBundle</code> or resource bundle name from its parent, recursively up the tree.                                                                    </p><p> Most of the logger output methods take a "msg" argument. This msg argument may be either a raw value or a localization key. During formatting, if the logger has (or inherits) a localization <code>ResourceBundle</code> and if the <code>ResourceBundle</code> has a mapping for the msg string, then the msg string is replaced by the localized value. Otherwise the original msg string is used. Typically, formatters use java.text.MessageFormat style formatting to format parameters, so for example a format string "{0} {1}" would format two parameters as strings.                                                                                     </p><p> <span class="diff-html-added">A</span> <span class="diff-html-added">set</span> <span class="diff-html-added">of</span> <span class="diff-html-added">methods</span> <span class="diff-html-added">alternatively</span> <span class="diff-html-added">take</span> <span class="diff-html-added">a</span> <span class="diff-html-added">"msgSupplier"</span> <span class="diff-html-added">instead</span> <span class="diff-html-added">of</span> <span class="diff-html-added">a</span> <span class="diff-html-added">"msg"</span> <span class="diff-html-added">argument.</span> <span class="diff-html-added">These</span> <span class="diff-html-added">methods</span> <span class="diff-html-added">take</span> <span class="diff-html-added">a</span> <a href="../../../java/util/function/Supplier.html" title="interface in java.util.function"><code><span class="diff-html-added">Supplier</span></code></a><code><span class="diff-html-added">&lt;String&gt;</span></code> <span class="diff-html-added">function</span> <span class="diff-html-added">which</span> <span class="diff-html-added">is</span> <span class="diff-html-added">invoked</span> <span class="diff-html-added">to</span> <span class="diff-html-added">construct</span> <span class="diff-html-added">the</span> <span class="diff-html-added">desired</span> <span class="diff-html-added">log</span> <span class="diff-html-added">message</span> <span class="diff-html-added">only</span> <span class="diff-html-added">when</span> <span class="diff-html-added">the</span> <span class="diff-html-added">message</span> <span class="diff-html-added">actually</span> <span class="diff-html-added">is</span> <span class="diff-html-added">to</span> <span class="diff-html-added">be</span> <span class="diff-html-added">logged</span> <span class="diff-html-added">based</span> <span class="diff-html-added">on</span> <span class="diff-html-added">the</span> <span class="diff-html-added">effective</span> <span class="diff-html-added">log</span> <span class="diff-html-added">level</span> <span class="diff-html-added">thus</span> <span class="diff-html-added">eliminating</span> <span class="diff-html-added">unnecessary</span> <span class="diff-html-added">message</span> <span class="diff-html-added">construction.</span> <span class="diff-html-added">For</span> <span class="diff-html-added">example,</span> <span class="diff-html-added">if</span> <span class="diff-html-added">the</span> <span class="diff-html-added">developer</span> <span class="diff-html-added">wants</span> <span class="diff-html-added">to</span> <span class="diff-html-added">log</span> <span class="diff-html-added">system</span> <span class="diff-html-added">health</span> <span class="diff-html-added">status</span> <span class="diff-html-added">for</span> <span class="diff-html-added">diagnosis,</span> <span class="diff-html-added">with</span> <span class="diff-html-added">the</span> <span class="diff-html-added">String-accepting</span> <span class="diff-html-added">version,</span> <span class="diff-html-added">the</span> <span class="diff-html-added">code</span> <span class="diff-html-added">would</span> <span class="diff-html-added">look</span> <span class="diff-html-added">like:</span><pre><code>

   <span class="diff-html-added">class</span> <span class="diff-html-added">DiagnosisMessages</span> <span class="diff-html-added">{</span>
     <span class="diff-html-added">static</span> <span class="diff-html-added">String</span> <span class="diff-html-added">systemHealthStatus()</span> <span class="diff-html-added">{</span>
       <span class="diff-html-added">//</span> <span class="diff-html-added">collect</span> <span class="diff-html-added">system</span> <span class="diff-html-added">health</span> <span class="diff-html-added">information</span>
       <span class="diff-html-added">...</span>
     <span class="diff-html-added">}</span>
   <span class="diff-html-added">}</span>
   <span class="diff-html-added">...</span>
   <span class="diff-html-added">logger.log(Level.FINER,</span> <span class="diff-html-added">DiagnosisMessages.systemHealthStatus());</span>
</code></pre> <span class="diff-html-added">With</span> <span class="diff-html-added">the</span> <span class="diff-html-added">above</span> <span class="diff-html-added">code,</span> <span class="diff-html-added">the</span> <span class="diff-html-added">health</span> <span class="diff-html-added">status</span> <span class="diff-html-added">is</span> <span class="diff-html-added">collected</span> <span class="diff-html-added">unnecessarily</span> <span class="diff-html-added">even</span> <span class="diff-html-added">when</span> <span class="diff-html-added">the</span> <span class="diff-html-added">log</span> <span class="diff-html-added">level</span> <span class="diff-html-added">FINER</span> <span class="diff-html-added">is</span> <span class="diff-html-added">disabled.</span> <span class="diff-html-added">With</span> <span class="diff-html-added">the</span> <span class="diff-html-added">Supplier-accepting</span> <span class="diff-html-added">version</span> <span class="diff-html-added">as</span> <span class="diff-html-added">below,</span> <span class="diff-html-added">the</span> <span class="diff-html-added">status</span> <span class="diff-html-added">will</span> <span class="diff-html-added">only</span> <span class="diff-html-added">be</span> <span class="diff-html-added">collected</span> <span class="diff-html-added">when</span> <span class="diff-html-added">the</span> <span class="diff-html-added">log</span> <span class="diff-html-added">level</span> <span class="diff-html-added">FINER</span> <span class="diff-html-added">is</span> <span class="diff-html-added">enabled.</span><pre><code>

   <span class="diff-html-added">logger.log(Level.FINER,</span> <span class="diff-html-added">DiagnosisMessages::systemHealthStatus);</span>
</code></pre>                                                                                                           </p><p> When looking for a <code>ResourceBundle</code>, the logger will first look at whether a bundle was specified using <a href="../../../java/util/logging/Logger.html#setResourceBundle-java.util.ResourceBundle-"><code>setResourceBundle</code></a>, and then only whether a resource bundle name was specified through the <a href="../../../java/util/logging/Logger.html#getLogger-java.lang.String-java.lang.String-"><code>getLogger</code></a> factory method. If no <code>ResourceBundle</code> or no resource bundle name is found, then it will use the nearest <code>ResourceBundle</code> or resource bundle name inherited from its parent tree.<br/> When a <code>ResourceBundle</code> was inherited or specified through the <a href="../../../java/util/logging/Logger.html#setResourceBundle-java.util.ResourceBundle-"><code>setResourceBundle</code></a> method, then that <code>ResourceBundle</code> will be used. Otherwise if the logger only has or inherited a resource bundle name, then that resource bundle name will be mapped to a <code>ResourceBundle</code> object, using the default Locale at the time of logging. <br id="ResourceBundleMapping"/>When mapping resource bundle names to <code>ResourceBundle</code> objects, the logger will first try to use the Thread's <a href="../../../java/lang/Thread.html#getContextClassLoader--">context class loader  </a> to map the given resource bundle name to a <code>ResourceBundle</code>. If the thread context class loader is <code>null</code>, it will try the <a href="../../../java/lang/ClassLoader.html#getSystemClassLoader--">system class loader  </a> instead. If the <code>ResourceBundle</code> is still not found, it will use the class loader of the first caller of the <a href="../../../java/util/logging/Logger.html#getLogger-java.lang.String-java.lang.String-"><code>getLogger</code></a> factory method.                                                                                                                                                                             </p><p> Formatting (including localization) is the responsibility of the output Handler, which will typically call a Formatter.                </p><p> Note that formatting need not occur synchronously. It may be delayed until a LogRecord is actually written to an external sink.                     </p><p> The logging methods are grouped in five main categories:<ul><li><p> There are a set of "log" methods that take a log level, a message string, and optionally some parameters to the message string.                       </p></li><li><p> There are a set of "logp" methods (for "log precise") that are like the "log" methods, but also take an explicit source class name and method name.                           </p></li><li><p> There are a set of "logrb" method (for "log with resource bundle") that are like the "logp" method, but also take an explicit resource bundle object for use in localizing the log message.                                 </p></li><li><p> There are convenience methods for tracing method entries (the "entering" methods), method returns (the "exiting" methods) and throwing exceptions (the "throwing" methods).                      </p></li><li><p> Finally, there are a set of convenience methods for use in the very simplest cases, when a developer simply wants to log a simple string at a given log level. These methods are named after the standard Level names ("severe", "warning", "info", etc.) and take a single argument, a message string.                                                   </p></li></ul>         </p><p> For the methods that do not take an explicit source name and method name, the Logging framework will make a "best effort" to determine which class and method called into the logging method. However, it is important to realize that this automatically inferred information may only be approximate (or may even be quite wrong!). Virtual machines are allowed to do extensive optimizations when JITing and may entirely remove stack frames, making it impossible to reliably locate the calling class and method.                                                                                 </p><p> All methods on Logger are multi-thread safe.       </p><p> <b>Subclassing Information: </b> Note that a LogManager class may provide its own implementation of named Loggers for any point in the namespace. Therefore, any subclasses of Logger (unless they are implemented in conjunction with a new LogManager class) should take care to obtain a Logger instance from the LogManager class and should delegate operations such as "isLoggable" and "log(LogRecord)" to that instance. Note that in order to intercept all logging output, subclasses need only override the log(LogRecord) method. All the other logging methods are implemented as calls on this log(LogRecord) method.                                                                                         </p>                                                                    </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.4</dd> </dl>  </li></ul> </div> <a end_ctx_id="class:Logger"/> </td></tr><tr valign="top"><td bgcolor="#CCCCCC" colspan="1"><div class="description"> <a start_ctx_id="class:Logger"/><ul class="blockList"><li class="blockList"> <hr/> <br/><pre>public class <span class="typeNameLabel">Logger</span>
extends <a href="../../../java/lang/Object.html" title="class in java.lang">Object</a></pre><div class="block">A Logger object is used to log messages for a specific system or application component. Loggers are normally named, using a hierarchical dot-separated namespace. Logger names can be arbitrary strings, but they should normally be based on the package name or class name of the logged component, such as java.net or javax.swing. In addition it is possible to create "anonymous" Loggers that are not stored in the Logger namespace.<p> Logger objects may be obtained by calls on one of the getLogger factory methods. These will either create a new Logger or return a suitable existing Logger. It is important to note that the Logger returned by one of the <code>getLogger</code> factory methods may be garbage collected at any time if a strong reference to the Logger is not kept.                                                            </p><p> Logging messages will be forwarded to registered Handler objects, which can forward the messages to a variety of destinations, including consoles, files, OS logs, etc.                         </p><p> Each Logger keeps track of a "parent" Logger, which is its nearest existing ancestor in the Logger namespace.                  </p><p> Each Logger has a "Level" associated with it. This reflects a minimum Level that this logger cares about. If a Logger's level is set to <tt>null</tt>, then its effective level is inherited from its parent, which may in turn obtain it recursively from its parent, and so on up the tree.                                                   </p><p> The log level can be configured based on the properties from the logging configuration file, as described in the description of the LogManager class. However it may also be dynamically changed by calls on the Logger.setLevel method. If a logger's level is changed the change may also affect child loggers, since any child logger that has <tt>null</tt> as its level will inherit its effective level from its parent.                                                                    </p><p> On each logging call the Logger initially performs a cheap check of the request level (e.g., SEVERE or FINE) against the effective log level of the logger. If the request level is lower than the log level, the logging call returns immediately.                                          </p><p> After passing this initial (cheap) test, the Logger will allocate a LogRecord to describe the logging message. It will then call a Filter (if present) to do a more detailed check on whether the record should be published. If that passes it will then publish the LogRecord to its output Handlers. By default, loggers also publish to their parent's Handlers, recursively up the tree.                                                                </p><p> Each Logger may have a <code>ResourceBundle</code> associated with it. The <code>ResourceBundle</code> may be specified by name, using the <a href="../../../java/util/logging/Logger.html#getLogger-java.lang.String-java.lang.String-"><code>getLogger(java.lang.String, java.lang.String) </code></a> factory method, or by value - using the <a href="../../../java/util/logging/Logger.html#setResourceBundle-java.util.ResourceBundle-"><code>setResourceBundle</code></a> method. This bundle will be used for localizing logging messages. If a Logger does not have its own <code>ResourceBundle</code> or resource bundle name, then it will inherit the <code>ResourceBundle</code> or resource bundle name from its parent, recursively up the tree.                                                                    </p><p> Most of the logger output methods take a "msg" argument. This msg argument may be either a raw value or a localization key. During formatting, if the logger has (or inherits) a localization <code>ResourceBundle</code> and if the <code>ResourceBundle</code> has a mapping for the msg string, then the msg string is replaced by the localized value. Otherwise the original msg string is used. Typically, formatters use java.text.MessageFormat style formatting to format parameters, so for example a format string "{0} {1}" would format two parameters as strings.                                                                                     </p><p> When looking for a <code>ResourceBundle</code>, the logger will first look at whether a bundle was specified using <a href="../../../java/util/logging/Logger.html#setResourceBundle-java.util.ResourceBundle-"><code>setResourceBundle</code></a>, and then only whether a resource bundle name was specified through the <a href="../../../java/util/logging/Logger.html#getLogger-java.lang.String-java.lang.String-"><code>getLogger</code></a> factory method. If no <code>ResourceBundle</code> or no resource bundle name is found, then it will use the nearest <code>ResourceBundle</code> or resource bundle name inherited from its parent tree.<br/> When a <code>ResourceBundle</code> was inherited or specified through the <a href="../../../java/util/logging/Logger.html#setResourceBundle-java.util.ResourceBundle-"><code>setResourceBundle</code></a> method, then that <code>ResourceBundle</code> will be used. Otherwise if the logger only has or inherited a resource bundle name, then that resource bundle name will be mapped to a <code>ResourceBundle</code> object, using the default Locale at the time of logging. <br id="ResourceBundleMapping"/>When mapping resource bundle names to <code>ResourceBundle</code> objects, the logger will first try to use the Thread's <a href="../../../java/lang/Thread.html#getContextClassLoader--">context class loader  </a> to map the given resource bundle name to a <code>ResourceBundle</code>. If the thread context class loader is <code>null</code>, it will try the <a href="../../../java/lang/ClassLoader.html#getSystemClassLoader--">system class loader  </a> instead. If the <code>ResourceBundle</code> is still not found, it will use the class loader of the first caller of the <a href="../../../java/util/logging/Logger.html#getLogger-java.lang.String-java.lang.String-"><code>getLogger</code></a> factory method.                                                                                                                                                                             </p><p> Formatting (including localization) is the responsibility of the output Handler, which will typically call a Formatter.                </p><p> Note that formatting need not occur synchronously. It may be delayed until a LogRecord is actually written to an external sink.                     </p><p> The logging methods are grouped in five main categories:<ul><li><p> There are a set of "log" methods that take a log level, a message string, and optionally some parameters to the message string.                       </p></li><li><p> There are a set of "logp" methods (for "log precise") that are like the "log" methods, but also take an explicit source class name and method name.                           </p></li><li><p> There are a set of "logrb" method (for "log with resource bundle") that are like the "logp" method, but also take an explicit resource bundle object for use in localizing the log message.                                 </p></li><li><p> There are convenience methods for tracing method entries (the "entering" methods), method returns (the "exiting" methods) and throwing exceptions (the "throwing" methods).                      </p></li><li><p> Finally, there are a set of convenience methods for use in the very simplest cases, when a developer simply wants to log a simple string at a given log level. These methods are named after the standard Level names ("severe", "warning", "info", etc.) and take a single argument, a message string.                                                   </p></li></ul>         </p><p> For the methods that do not take an explicit source name and method name, the Logging framework will make a "best effort" to determine which class and method called into the logging method. However, it is important to realize that this automatically inferred information may only be approximate (or may even be quite wrong!). Virtual machines are allowed to do extensive optimizations when JITing and may entirely remove stack frames, making it impossible to reliably locate the calling class and method.                                                                                 </p><p> All methods on Logger are multi-thread safe.       </p><p> <b>Subclassing Information: </b> Note that a LogManager class may provide its own implementation of named Loggers for any point in the namespace. Therefore, any subclasses of Logger (unless they are implemented in conjunction with a new LogManager class) should take care to obtain a Logger instance from the LogManager class and should delegate operations such as "isLoggable" and "log(LogRecord)" to that instance. Note that in order to intercept all logging output, subclasses need only override the log(LogRecord) method. All the other logging methods are implemented as calls on this log(LogRecord) method.                                                                                         </p>                                                                    </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.4</dd> </dl>  </li></ul> </div> <a end_ctx_id="class:Logger"/> </td><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:Logger"/><ul class="blockList"><li class="blockList"> <hr/> <br/><pre>public class <span class="typeNameLabel">Logger</span>
extends <a href="../../../java/lang/Object.html" title="class in java.lang">Object</a></pre><div class="block">A Logger object is used to log messages for a specific system or application component. Loggers are normally named, using a hierarchical dot-separated namespace. Logger names can be arbitrary strings, but they should normally be based on the package name or class name of the logged component, such as java.net or javax.swing. In addition it is possible to create "anonymous" Loggers that are not stored in the Logger namespace.<p> Logger objects may be obtained by calls on one of the getLogger factory methods. These will either create a new Logger or return a suitable existing Logger. It is important to note that the Logger returned by one of the <code>getLogger</code> factory methods may be garbage collected at any time if a strong reference to the Logger is not kept.                                                            </p><p> Logging messages will be forwarded to registered Handler objects, which can forward the messages to a variety of destinations, including consoles, files, OS logs, etc.                         </p><p> Each Logger keeps track of a "parent" Logger, which is its nearest existing ancestor in the Logger namespace.                  </p><p> Each Logger has a "Level" associated with it. This reflects a minimum Level that this logger cares about. If a Logger's level is set to <tt>null</tt>, then its effective level is inherited from its parent, which may in turn obtain it recursively from its parent, and so on up the tree.                                                   </p><p> The log level can be configured based on the properties from the logging configuration file, as described in the description of the LogManager class. However it may also be dynamically changed by calls on the Logger.setLevel method. If a logger's level is changed the change may also affect child loggers, since any child logger that has <tt>null</tt> as its level will inherit its effective level from its parent.                                                                    </p><p> On each logging call the Logger initially performs a cheap check of the request level (e.g., SEVERE or FINE) against the effective log level of the logger. If the request level is lower than the log level, the logging call returns immediately.                                          </p><p> After passing this initial (cheap) test, the Logger will allocate a LogRecord to describe the logging message. It will then call a Filter (if present) to do a more detailed check on whether the record should be published. If that passes it will then publish the LogRecord to its output Handlers. By default, loggers also publish to their parent's Handlers, recursively up the tree.                                                                </p><p> Each Logger may have a <code>ResourceBundle</code> associated with it. The <code>ResourceBundle</code> may be specified by name, using the <a href="../../../java/util/logging/Logger.html#getLogger-java.lang.String-java.lang.String-"><code>getLogger(java.lang.String, java.lang.String) </code></a> factory method, or by value - using the <a href="../../../java/util/logging/Logger.html#setResourceBundle-java.util.ResourceBundle-"><code>setResourceBundle</code></a> method. This bundle will be used for localizing logging messages. If a Logger does not have its own <code>ResourceBundle</code> or resource bundle name, then it will inherit the <code>ResourceBundle</code> or resource bundle name from its parent, recursively up the tree.                                                                    </p><p> Most of the logger output methods take a "msg" argument. This msg argument may be either a raw value or a localization key. During formatting, if the logger has (or inherits) a localization <code>ResourceBundle</code> and if the <code>ResourceBundle</code> has a mapping for the msg string, then the msg string is replaced by the localized value. Otherwise the original msg string is used. Typically, formatters use java.text.MessageFormat style formatting to format parameters, so for example a format string "{0} {1}" would format two parameters as strings.                                                                                     </p><p> A set of methods alternatively take a "msgSupplier" instead of a "msg" argument. These methods take a <a href="../../../java/util/function/Supplier.html" title="interface in java.util.function"><code>Supplier</code></a><code>&lt;String&gt;</code> function which is invoked to construct the desired log message only when the message actually is to be logged based on the effective log level thus eliminating unnecessary message construction. For example, if the developer wants to log system health status for diagnosis, with the String-accepting version, the code would look like:<pre><code>

   class DiagnosisMessages {
     static String systemHealthStatus() {
       // collect system health information
       ...
     }
   }
   ...
   logger.log(Level.FINER, DiagnosisMessages.systemHealthStatus());
</code></pre> With the above code, the health status is collected unnecessarily even when the log level FINER is disabled. With the Supplier-accepting version as below, the status will only be collected when the log level FINER is enabled.<pre><code>

   logger.log(Level.FINER, DiagnosisMessages::systemHealthStatus);
</code></pre>                                                                                                           </p><p> When looking for a <code>ResourceBundle</code>, the logger will first look at whether a bundle was specified using <a href="../../../java/util/logging/Logger.html#setResourceBundle-java.util.ResourceBundle-"><code>setResourceBundle</code></a>, and then only whether a resource bundle name was specified through the <a href="../../../java/util/logging/Logger.html#getLogger-java.lang.String-java.lang.String-"><code>getLogger</code></a> factory method. If no <code>ResourceBundle</code> or no resource bundle name is found, then it will use the nearest <code>ResourceBundle</code> or resource bundle name inherited from its parent tree.<br/> When a <code>ResourceBundle</code> was inherited or specified through the <a href="../../../java/util/logging/Logger.html#setResourceBundle-java.util.ResourceBundle-"><code>setResourceBundle</code></a> method, then that <code>ResourceBundle</code> will be used. Otherwise if the logger only has or inherited a resource bundle name, then that resource bundle name will be mapped to a <code>ResourceBundle</code> object, using the default Locale at the time of logging. <br id="ResourceBundleMapping"/>When mapping resource bundle names to <code>ResourceBundle</code> objects, the logger will first try to use the Thread's <a href="../../../java/lang/Thread.html#getContextClassLoader--">context class loader  </a> to map the given resource bundle name to a <code>ResourceBundle</code>. If the thread context class loader is <code>null</code>, it will try the <a href="../../../java/lang/ClassLoader.html#getSystemClassLoader--">system class loader  </a> instead. If the <code>ResourceBundle</code> is still not found, it will use the class loader of the first caller of the <a href="../../../java/util/logging/Logger.html#getLogger-java.lang.String-java.lang.String-"><code>getLogger</code></a> factory method.                                                                                                                                                                             </p><p> Formatting (including localization) is the responsibility of the output Handler, which will typically call a Formatter.                </p><p> Note that formatting need not occur synchronously. It may be delayed until a LogRecord is actually written to an external sink.                     </p><p> The logging methods are grouped in five main categories:<ul><li><p> There are a set of "log" methods that take a log level, a message string, and optionally some parameters to the message string.                       </p></li><li><p> There are a set of "logp" methods (for "log precise") that are like the "log" methods, but also take an explicit source class name and method name.                           </p></li><li><p> There are a set of "logrb" method (for "log with resource bundle") that are like the "logp" method, but also take an explicit resource bundle object for use in localizing the log message.                                 </p></li><li><p> There are convenience methods for tracing method entries (the "entering" methods), method returns (the "exiting" methods) and throwing exceptions (the "throwing" methods).                      </p></li><li><p> Finally, there are a set of convenience methods for use in the very simplest cases, when a developer simply wants to log a simple string at a given log level. These methods are named after the standard Level names ("severe", "warning", "info", etc.) and take a single argument, a message string.                                                   </p></li></ul>         </p><p> For the methods that do not take an explicit source name and method name, the Logging framework will make a "best effort" to determine which class and method called into the logging method. However, it is important to realize that this automatically inferred information may only be approximate (or may even be quite wrong!). Virtual machines are allowed to do extensive optimizations when JITing and may entirely remove stack frames, making it impossible to reliably locate the calling class and method.                                                                                 </p><p> All methods on Logger are multi-thread safe.       </p><p> <b>Subclassing Information: </b> Note that a LogManager class may provide its own implementation of named Loggers for any point in the namespace. Therefore, any subclasses of Logger (unless they are implemented in conjunction with a new LogManager class) should take care to obtain a Logger instance from the LogManager class and should delegate operations such as "isLoggable" and "log(LogRecord)" to that instance. Note that in order to intercept all logging output, subclasses need only override the log(LogRecord) method. All the other logging methods are implemented as calls on this log(LogRecord) method.                                                                                         </p>                                                                    </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.4</dd> </dl>  </li></ul> </div> <a end_ctx_id="class:Logger"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:GLOBAL_LOGGER_NAME [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:GLOBAL_LOGGER_NAME"/><a name="GLOBAL_LOGGER_NAME"/><ul class="blockList"><li class="blockList"><h4>GLOBAL_LOGGER_NAME</h4><pre>public static final <a href="../../../java/lang/String.html" title="class in java.lang">String</a> GLOBAL_LOGGER_NAME</pre><div class="block">GLOBAL_LOGGER_NAME is a name for the global logger.       </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.6</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../constant-values.html#java.util.logging.Logger.GLOBAL_LOGGER_NAME">Constant Field Values  </a> </dd>  </dl></li></ul> <a end_ctx_id="field:GLOBAL_LOGGER_NAME"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:global [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:global"/><a name="global"/><ul class="blockListLast"><li class="blockList"><h4>global</h4><pre><a href="../../../java/lang/Deprecated.html" title="annotation in java.lang">@Deprecated</a>
public static final <a href="../../../java/util/logging/Logger.html" title="class in java.util.logging">Logger</a> global</pre><div class="block"> <span class="deprecatedLabel">Deprecated.</span> <span class="deprecationComment">Initialization of this field is prone to deadlocks. The field must be initialized by the Logger class initialization which may cause deadlocks with the LogManager class initialization. In such cases two class initialization wait for each other to complete. The preferred way to get the global logger object is via the call <code>Logger.getGlobal()</code>. For compatibility with old JDK versions where the <code>Logger.getGlobal()</code> is not available use the call <code>Logger.getLogger(Logger.GLOBAL_LOGGER_NAME)</code> or <code>Logger.getLogger("global")</code>.                                                                      </span> </div><div class="block">The "global" Logger object is provided as a convenience to developers who are making casual use of the Logging package. Developers who are making serious use of the logging package (for example in products) should create and use their own Logger objects, with appropriate names, so that logging can be controlled on a suitable per-Logger granularity. Developers also need to keep a strong reference to their Logger objects to prevent them from being garbage collected.<p/>                                                                          </div></li></ul> <a end_ctx_id="field:global"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:Logger-java.lang.String-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:Logger-java.lang.String-java.lang.String-"/><a name="Logger-java.lang.String-java.lang.String-"/><ul class="blockListLast"><li class="blockList"><h4>Logger</h4><pre>protected Logger(<a href="../../../java/lang/String.html" title="class in java.lang">String</a> name,
                 <a href="../../../java/lang/String.html" title="class in java.lang">String</a> resourceBundleName)</pre><div class="block">Protected method to construct a logger for a named subsystem.<p> The logger will be initially configured with a null Level and with useParentHandlers set to true.                </p>         </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>name</code> - A name for the logger. This should be a dot-separated name and should normally be based on the package name or class name of the subsystem, such as java.net or javax.swing. It may be null for anonymous Loggers.                                        </dd><dd> <code>resourceBundleName</code> - name of ResourceBundle to be used for localizing messages for this logger. May be null if none of the messages require localization.                        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/util/MissingResourceException.html" title="class in java.util">MissingResourceException</a></code> - if the resourceBundleName is non-null and no corresponding resource can be found.              </dd>  </dl></li></ul> <a end_ctx_id="constructor:Logger-java.lang.String-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getGlobal-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getGlobal--"/><a name="getGlobal--"/><ul class="blockList"><li class="blockList"><h4>getGlobal</h4><pre>public static final <a href="../../../java/util/logging/Logger.html" title="class in java.util.logging">Logger</a> getGlobal()</pre><div class="block">Return global logger object with the name Logger.GLOBAL_LOGGER_NAME.       </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>global logger object  </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.7</dd>  </dl></li></ul> <a end_ctx_id="method:getGlobal--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getLogger-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getLogger-java.lang.String-"/><a name="getLogger-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>getLogger</h4><pre>public static <a href="../../../java/util/logging/Logger.html" title="class in java.util.logging">Logger</a> getLogger(<a href="../../../java/lang/String.html" title="class in java.lang">String</a> name)</pre><div class="block">Find or create a logger for a named subsystem. If a logger has already been created with the given name it is returned. Otherwise a new logger is created.<p> If a new logger is created its log level will be configured based on the LogManager configuration and it will configured to also send logging output to its parent's Handlers. It will be registered in the LogManager global namespace.                                       </p><p> Note: The LogManager may only retain a weak reference to the newly created Logger. It is important to understand that a previously created Logger with the given name may be garbage collected at any time if there is no strong reference to the Logger. In particular, this means that two back-to-back calls like <code>getLogger("MyLogger").log(...)</code> may use different Logger objects named "MyLogger" if there is no strong reference to the Logger named "MyLogger" elsewhere in the program.                                                                            </p>                            </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>name</code> - A name for the logger. This should be a dot-separated name and should normally be based on the package name or class name of the subsystem, such as java.net or javax.swing                                 </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a suitable Logger  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the name is null.       </dd>   </dl></li></ul> <a end_ctx_id="method:getLogger-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getLogger-java.lang.String-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getLogger-java.lang.String-java.lang.String-"/><a name="getLogger-java.lang.String-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>getLogger</h4><pre>public static <a href="../../../java/util/logging/Logger.html" title="class in java.util.logging">Logger</a> getLogger(<a href="../../../java/lang/String.html" title="class in java.lang">String</a> name,
                               <a href="../../../java/lang/String.html" title="class in java.lang">String</a> resourceBundleName)</pre><div class="block">Find or create a logger for a named subsystem. If a logger has already been created with the given name it is returned. Otherwise a new logger is created.<p> If a new logger is created its log level will be configured based on the LogManager and it will configured to also send logging output to its parent's Handlers. It will be registered in the LogManager global namespace.                                      </p><p> Note: The LogManager may only retain a weak reference to the newly created Logger. It is important to understand that a previously created Logger with the given name may be garbage collected at any time if there is no strong reference to the Logger. In particular, this means that two back-to-back calls like <code>getLogger("MyLogger", ...).log(...) </code> may use different Logger objects named "MyLogger" if there is no strong reference to the Logger named "MyLogger" elsewhere in the program.                                                                            </p><p> If the named Logger already exists and does not yet have a localization resource bundle then the given resource bundle name is used. If the named Logger already exists and has a different resource bundle name then an IllegalArgumentException is thrown.                                         </p><p/>                            </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>name</code> - A name for the logger. This should be a dot-separated name and should normally be based on the package name or class name of the subsystem, such as java.net or javax.swing                                 </dd><dd> <code>resourceBundleName</code> - name of ResourceBundle to be used for localizing messages for this logger. May be <code>null</code> if none of the messages require localization.                        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a suitable Logger  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/util/MissingResourceException.html" title="class in java.util">MissingResourceException</a></code> - if the resourceBundleName is non-null and no corresponding resource can be found.              </dd><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if the Logger already exists and uses a different resource bundle name; or if <code>resourceBundleName</code> is <code>null</code> but the named logger has a resource bundle set.                            </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the name is null.       </dd>   </dl></li></ul> <a end_ctx_id="method:getLogger-java.lang.String-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getAnonymousLogger-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getAnonymousLogger--"/><a name="getAnonymousLogger--"/><ul class="blockList"><li class="blockList"><h4>getAnonymousLogger</h4><pre>public static <a href="../../../java/util/logging/Logger.html" title="class in java.util.logging">Logger</a> getAnonymousLogger()</pre><div class="block">Create an anonymous Logger. The newly created Logger is not registered in the LogManager namespace. There will be no access checks on updates to the logger.<p> This factory method is primarily intended for use from applets. Because the resulting Logger is anonymous it can be kept private by the creating class. This removes the need for normal security checks, which in turn allows untrusted applet code to update the control state of the Logger. For example an applet can do a setLevel or an addHandler on an anonymous Logger.                                                               </p><p> Even although the new logger is anonymous, it is configured to have the root logger ("") as its parent. This means that by default it inherits its effective level and handlers from the root logger. Changing its parent via the <a href="../../../java/util/logging/Logger.html#setParent-java.util.logging.Logger-"><code>setParent</code></a> method will still require the security permission specified by that method.                                                    </p><p/>                         </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a newly created private Logger    </dd> </dl></li></ul> <a end_ctx_id="method:getAnonymousLogger--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getAnonymousLogger-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getAnonymousLogger-java.lang.String-"/><a name="getAnonymousLogger-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>getAnonymousLogger</h4><pre>public static <a href="../../../java/util/logging/Logger.html" title="class in java.util.logging">Logger</a> getAnonymousLogger(<a href="../../../java/lang/String.html" title="class in java.lang">String</a> resourceBundleName)</pre><div class="block">Create an anonymous Logger. The newly created Logger is not registered in the LogManager namespace. There will be no access checks on updates to the logger.<p> This factory method is primarily intended for use from applets. Because the resulting Logger is anonymous it can be kept private by the creating class. This removes the need for normal security checks, which in turn allows untrusted applet code to update the control state of the Logger. For example an applet can do a setLevel or an addHandler on an anonymous Logger.                                                               </p><p> Even although the new logger is anonymous, it is configured to have the root logger ("") as its parent. This means that by default it inherits its effective level and handlers from the root logger. Changing its parent via the <a href="../../../java/util/logging/Logger.html#setParent-java.util.logging.Logger-"><code>setParent</code></a> method will still require the security permission specified by that method.                                                    </p><p/>                         </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>resourceBundleName</code> - name of ResourceBundle to be used for localizing messages for this logger. May be null if none of the messages require localization.                        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a newly created private Logger    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/util/MissingResourceException.html" title="class in java.util">MissingResourceException</a></code> - if the resourceBundleName is non-null and no corresponding resource can be found.              </dd>   </dl></li></ul> <a end_ctx_id="method:getAnonymousLogger-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getResourceBundle-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getResourceBundle--"/><a name="getResourceBundle--"/><ul class="blockList"><li class="blockList"><h4>getResourceBundle</h4><pre>public <a href="../../../java/util/ResourceBundle.html" title="class in java.util">ResourceBundle</a> getResourceBundle()</pre><div class="block">Retrieve the localization resource bundle for this logger. This method will return a <code>ResourceBundle</code> that was either set by the <a href="../../../java/util/logging/Logger.html#setResourceBundle-java.util.ResourceBundle-"><code>setResourceBundle</code></a> method or <a href="#ResourceBundleMapping">mapped from the the resource bundle name      </a> set via the <a href="../../../java/util/logging/Logger.html#getLogger-java.lang.String-java.lang.String-"><code>getLogger</code></a> factory method for the current default locale. <br/>Note that if the result is <code>null</code>, then the Logger will use a resource bundle or resource bundle name inherited from its parent.                                                         </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>localization bundle (may be <code>null</code>)    </dd> </dl></li></ul> <a end_ctx_id="method:getResourceBundle--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getResourceBundleName-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getResourceBundleName--"/><a name="getResourceBundleName--"/><ul class="blockList"><li class="blockList"><h4>getResourceBundleName</h4><pre>public <a href="../../../java/lang/String.html" title="class in java.lang">String</a> getResourceBundleName()</pre><div class="block">Retrieve the localization resource bundle name for this logger. This is either the name specified through the <a href="../../../java/util/logging/Logger.html#getLogger-java.lang.String-java.lang.String-"><code>getLogger</code></a> factory method, or the <a href="../../../java/util/ResourceBundle.html#getBaseBundleName--">base name </a> of the ResourceBundle set through <a href="../../../java/util/logging/Logger.html#setResourceBundle-java.util.ResourceBundle-"><code>setResourceBundle</code></a> method. <br/>Note that if the result is <code>null</code>, then the Logger will use a resource bundle or resource bundle name inherited from its parent.                                                    </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>localization bundle name (may be <code>null</code>)     </dd> </dl></li></ul> <a end_ctx_id="method:getResourceBundleName--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:setFilter-java.util.logging.Filter- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:setFilter-java.util.logging.Filter-"/><a name="setFilter-java.util.logging.Filter-"/><ul class="blockList"><li class="blockList"><h4>setFilter</h4><pre>public void setFilter(<a href="../../../java/util/logging/Filter.html" title="interface in java.util.logging">Filter</a> newFilter)
               throws <a href="../../../java/lang/SecurityException.html" title="class in java.lang">SecurityException</a></pre><div class="block">Set a filter to control output on this Logger.<p> After passing the initial "level" check, the Logger will call this Filter to check if a log record should really be published.                      </p>        </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>newFilter</code> - a filter object (may be null)        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/SecurityException.html" title="class in java.lang">SecurityException</a></code> - if a security manager exists, this logger is not anonymous, and the caller does not have LoggingPermission("control").                   </dd>  </dl></li></ul> <a end_ctx_id="method:setFilter-java.util.logging.Filter-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getFilter-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getFilter--"/><a name="getFilter--"/><ul class="blockList"><li class="blockList"><h4>getFilter</h4><pre>public <a href="../../../java/util/logging/Filter.html" title="interface in java.util.logging">Filter</a> getFilter()</pre><div class="block">Get the current filter for this Logger.      </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a filter object (may be null)     </dd> </dl></li></ul> <a end_ctx_id="method:getFilter--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:log-java.util.logging.LogRecord- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:log-java.util.logging.LogRecord-"/><a name="log-java.util.logging.LogRecord-"/><ul class="blockList"><li class="blockList"><h4>log</h4><pre>public void log(<a href="../../../java/util/logging/LogRecord.html" title="class in java.util.logging">LogRecord</a> record)</pre><div class="block">Log a LogRecord.<p> All the other logging methods in this class call through this method to actually perform any logging. Subclasses can override this single method to capture all log activity.                            </p>  </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>record</code> - the LogRecord to be published       </dd> </dl></li></ul> <a end_ctx_id="method:log-java.util.logging.LogRecord-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:log-java.util.logging.Level-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:log-java.util.logging.Level-java.lang.String-"/><a name="log-java.util.logging.Level-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>log</h4><pre>public void log(<a href="../../../java/util/logging/Level.html" title="class in java.util.logging">Level</a> level,
                <a href="../../../java/lang/String.html" title="class in java.lang">String</a> msg)</pre><div class="block">Log a message, with no arguments.<p> If the logger is currently enabled for the given message level then the given message is forwarded to all the registered output Handler objects.                        </p><p/>     </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>level</code> - One of the message level identifiers, e.g., SEVERE          </dd><dd> <code>msg</code> - The string message (or a key in the message catalog)            </dd> </dl></li></ul> <a end_ctx_id="method:log-java.util.logging.Level-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:log-java.util.logging.Level-java.util.function.Supplier- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:log-java.util.logging.Level-java.util.function.Supplier-"><span class="diff-html-added"/></a><a name="log-java.util.logging.Level-java.util.function.Supplier-"/><ul class="blockList"><li class="blockList"><h4><span class="diff-html-added">log</span></h4><pre><span class="diff-html-added">public void log(</span><a href="../../../java/util/logging/Level.html" title="class in java.util.logging"><span class="diff-html-added">Level</span></a><span class="diff-html-added"> level,</span>
                <a href="../../../java/util/function/Supplier.html" title="interface in java.util.function"><span class="diff-html-added">Supplier</span></a><span class="diff-html-added">&lt;</span><a href="../../../java/lang/String.html" title="class in java.lang"><span class="diff-html-added">String</span></a><span class="diff-html-added">&gt; msgSupplier)</span></pre><div class="block"><span class="diff-html-added">Log</span> <span class="diff-html-added">a</span> <span class="diff-html-added">message,</span> <span class="diff-html-added">which</span> <span class="diff-html-added">is</span> <span class="diff-html-added">only</span> <span class="diff-html-added">to</span> <span class="diff-html-added">be</span> <span class="diff-html-added">constructed</span> <span class="diff-html-added">if</span> <span class="diff-html-added">the</span> <span class="diff-html-added">logging</span> <span class="diff-html-added">level</span> <span class="diff-html-added">is</span> <span class="diff-html-added">such</span> <span class="diff-html-added">that</span> <span class="diff-html-added">the</span> <span class="diff-html-added">message</span> <span class="diff-html-added">will</span> <span class="diff-html-added">actually</span> <span class="diff-html-added">be</span> <span class="diff-html-added">logged.</span><p> <span class="diff-html-added">If</span> <span class="diff-html-added">the</span> <span class="diff-html-added">logger</span> <span class="diff-html-added">is</span> <span class="diff-html-added">currently</span> <span class="diff-html-added">enabled</span> <span class="diff-html-added">for</span> <span class="diff-html-added">the</span> <span class="diff-html-added">given</span> <span class="diff-html-added">message</span> <span class="diff-html-added">level</span> <span class="diff-html-added">then</span> <span class="diff-html-added">the</span> <span class="diff-html-added">message</span> <span class="diff-html-added">is</span> <span class="diff-html-added">constructed</span> <span class="diff-html-added">by</span> <span class="diff-html-added">invoking</span> <span class="diff-html-added">the</span> <span class="diff-html-added">provided</span> <span class="diff-html-added">supplier</span> <span class="diff-html-added">function</span> <span class="diff-html-added">and</span> <span class="diff-html-added">forwarded</span> <span class="diff-html-added">to</span> <span class="diff-html-added">all</span> <span class="diff-html-added">the</span> <span class="diff-html-added">registered</span> <span class="diff-html-added">output</span> <span class="diff-html-added">Handler</span> <span class="diff-html-added">objects.</span>                               </p><p/>                     </div><dl> <dt> <span class="paramLabel"><span class="diff-html-added">Parameters:</span></span>   </dt><dd> <code><span class="diff-html-added">level</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">One</span> <span class="diff-html-added">of</span> <span class="diff-html-added">the</span> <span class="diff-html-added">message</span> <span class="diff-html-added">level</span> <span class="diff-html-added">identifiers,</span> <span class="diff-html-added">e.g.,</span> <span class="diff-html-added">SEVERE</span>          </dd><dd> <code><span class="diff-html-added">msgSupplier</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">A</span> <span class="diff-html-added">function,</span> <span class="diff-html-added">which</span> <span class="diff-html-added">when</span> <span class="diff-html-added">called,</span> <span class="diff-html-added">produces</span> <span class="diff-html-added">the</span> <span class="diff-html-added">desired</span> <span class="diff-html-added">log</span> <span class="diff-html-added">message</span>            </dd> </dl></li></ul> <a end_ctx_id="method:log-java.util.logging.Level-java.util.function.Supplier-"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:log-java.util.logging.Level-java.lang.String-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:log-java.util.logging.Level-java.lang.String-java.lang.Object-"/><a name="log-java.util.logging.Level-java.lang.String-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>log</h4><pre>public void log(<a href="../../../java/util/logging/Level.html" title="class in java.util.logging">Level</a> level,
                <a href="../../../java/lang/String.html" title="class in java.lang">String</a> msg,
                <a href="../../../java/lang/Object.html" title="class in java.lang">Object</a> param1)</pre><div class="block">Log a message, with one object parameter.<p> If the logger is currently enabled for the given message level then a corresponding LogRecord is created and forwarded to all the registered output Handler objects.                          </p><p/>      </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>level</code> - One of the message level identifiers, e.g., SEVERE          </dd><dd> <code>msg</code> - The string message (or a key in the message catalog)            </dd><dd> <code>param1</code> - parameter to the message      </dd> </dl></li></ul> <a end_ctx_id="method:log-java.util.logging.Level-java.lang.String-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:log-java.util.logging.Level-java.lang.String-java.lang.Object:A- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:log-java.util.logging.Level-java.lang.String-java.lang.Object:A-"/><a name="log-java.util.logging.Level-java.lang.String-java.lang.Object:A-"/><ul class="blockList"><li class="blockList"><h4>log</h4><pre>public void log(<a href="../../../java/util/logging/Level.html" title="class in java.util.logging">Level</a> level,
                <a href="../../../java/lang/String.html" title="class in java.lang">String</a> msg,
                <a href="../../../java/lang/Object.html" title="class in java.lang">Object</a>[] params)</pre><div class="block">Log a message, with an array of object arguments.<p> If the logger is currently enabled for the given message level then a corresponding LogRecord is created and forwarded to all the registered output Handler objects.                          </p><p/>        </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>level</code> - One of the message level identifiers, e.g., SEVERE          </dd><dd> <code>msg</code> - The string message (or a key in the message catalog)            </dd><dd> <code>params</code> - array of parameters to the message        </dd> </dl></li></ul> <a end_ctx_id="method:log-java.util.logging.Level-java.lang.String-java.lang.Object:A-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:log-java.util.logging.Level-java.lang.String-java.lang.Throwable- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:log-java.util.logging.Level-java.lang.String-java.lang.Throwable-"/><a name="log-java.util.logging.Level-java.lang.String-java.lang.Throwable-"/><ul class="blockList"><li class="blockList"><h4>log</h4><pre>public void log(<a href="../../../java/util/logging/Level.html" title="class in java.util.logging">Level</a> level,
                <a href="../../../java/lang/String.html" title="class in java.lang">String</a> msg,
                <a href="../../../java/lang/Throwable.html" title="class in java.lang">Throwable</a> thrown)</pre><div class="block">Log a message, with associated Throwable information.<p> If the logger is currently enabled for the given message level then the given arguments are stored in a LogRecord which is forwarded to all registered output handlers.                            </p><p> Note that the thrown argument is stored in the LogRecord thrown property, rather than the LogRecord parameters property. Thus it is processed specially by output Formatters and is not treated as a formatting parameter to the LogRecord message property.                                       </p><p/>      </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>level</code> - One of the message level identifiers, e.g., SEVERE          </dd><dd> <code>msg</code> - The string message (or a key in the message catalog)            </dd><dd> <code>thrown</code> - Throwable associated with log message.       </dd> </dl></li></ul> <a end_ctx_id="method:log-java.util.logging.Level-java.lang.String-java.lang.Throwable-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:log-java.util.logging.Level-java.lang.Throwable-java.util.function.Supplier- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:log-java.util.logging.Level-java.lang.Throwable-java.util.function.Supplier-"><span class="diff-html-added"/></a><a name="log-java.util.logging.Level-java.lang.Throwable-java.util.function.Supplier-"/><ul class="blockList"><li class="blockList"><h4><span class="diff-html-added">log</span></h4><pre><span class="diff-html-added">public void log(</span><a href="../../../java/util/logging/Level.html" title="class in java.util.logging"><span class="diff-html-added">Level</span></a><span class="diff-html-added"> level,</span>
                <a href="../../../java/lang/Throwable.html" title="class in java.lang"><span class="diff-html-added">Throwable</span></a><span class="diff-html-added"> thrown,</span>
                <a href="../../../java/util/function/Supplier.html" title="interface in java.util.function"><span class="diff-html-added">Supplier</span></a><span class="diff-html-added">&lt;</span><a href="../../../java/lang/String.html" title="class in java.lang"><span class="diff-html-added">String</span></a><span class="diff-html-added">&gt; msgSupplier)</span></pre><div class="block"><span class="diff-html-added">Log</span> <span class="diff-html-added">a</span> <span class="diff-html-added">lazily</span> <span class="diff-html-added">constructed</span> <span class="diff-html-added">message,</span> <span class="diff-html-added">with</span> <span class="diff-html-added">associated</span> <span class="diff-html-added">Throwable</span> <span class="diff-html-added">information.</span><p> <span class="diff-html-added">If</span> <span class="diff-html-added">the</span> <span class="diff-html-added">logger</span> <span class="diff-html-added">is</span> <span class="diff-html-added">currently</span> <span class="diff-html-added">enabled</span> <span class="diff-html-added">for</span> <span class="diff-html-added">the</span> <span class="diff-html-added">given</span> <span class="diff-html-added">message</span> <span class="diff-html-added">level</span> <span class="diff-html-added">then</span> <span class="diff-html-added">the</span> <span class="diff-html-added">message</span> <span class="diff-html-added">is</span> <span class="diff-html-added">constructed</span> <span class="diff-html-added">by</span> <span class="diff-html-added">invoking</span> <span class="diff-html-added">the</span> <span class="diff-html-added">provided</span> <span class="diff-html-added">supplier</span> <span class="diff-html-added">function.</span> <span class="diff-html-added">The</span> <span class="diff-html-added">message</span> <span class="diff-html-added">and</span> <span class="diff-html-added">the</span> <span class="diff-html-added">given</span> <a href="../../../java/lang/Throwable.html" title="class in java.lang"><code><span class="diff-html-added">Throwable</span></code></a> <span class="diff-html-added">are</span> <span class="diff-html-added">then</span> <span class="diff-html-added">stored</span> <span class="diff-html-added">in</span> <span class="diff-html-added">a</span> <a href="../../../java/util/logging/LogRecord.html" title="class in java.util.logging"><code><span class="diff-html-added">LogRecord</span></code></a> <span class="diff-html-added">which</span> <span class="diff-html-added">is</span> <span class="diff-html-added">forwarded</span> <span class="diff-html-added">to</span> <span class="diff-html-added">all</span> <span class="diff-html-added">registered</span> <span class="diff-html-added">output</span> <span class="diff-html-added">handlers.</span>                                          </p><p> <span class="diff-html-added">Note</span> <span class="diff-html-added">that</span> <span class="diff-html-added">the</span> <span class="diff-html-added">thrown</span> <span class="diff-html-added">argument</span> <span class="diff-html-added">is</span> <span class="diff-html-added">stored</span> <span class="diff-html-added">in</span> <span class="diff-html-added">the</span> <span class="diff-html-added">LogRecord</span> <span class="diff-html-added">thrown</span> <span class="diff-html-added">property,</span> <span class="diff-html-added">rather</span> <span class="diff-html-added">than</span> <span class="diff-html-added">the</span> <span class="diff-html-added">LogRecord</span> <span class="diff-html-added">parameters</span> <span class="diff-html-added">property.</span> <span class="diff-html-added">Thus</span> <span class="diff-html-added">it</span> <span class="diff-html-added">is</span> <span class="diff-html-added">processed</span> <span class="diff-html-added">specially</span> <span class="diff-html-added">by</span> <span class="diff-html-added">output</span> <span class="diff-html-added">Formatters</span> <span class="diff-html-added">and</span> <span class="diff-html-added">is</span> <span class="diff-html-added">not</span> <span class="diff-html-added">treated</span> <span class="diff-html-added">as</span> <span class="diff-html-added">a</span> <span class="diff-html-added">formatting</span> <span class="diff-html-added">parameter</span> <span class="diff-html-added">to</span> <span class="diff-html-added">the</span> <span class="diff-html-added">LogRecord</span> <span class="diff-html-added">message</span> <span class="diff-html-added">property.</span>                                       </p><p/>        </div><dl> <dt> <span class="paramLabel"><span class="diff-html-added">Parameters:</span></span>   </dt><dd> <code><span class="diff-html-added">level</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">One</span> <span class="diff-html-added">of</span> <span class="diff-html-added">the</span> <span class="diff-html-added">message</span> <span class="diff-html-added">level</span> <span class="diff-html-added">identifiers,</span> <span class="diff-html-added">e.g.,</span> <span class="diff-html-added">SEVERE</span>          </dd><dd> <code><span class="diff-html-added">thrown</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">Throwable</span> <span class="diff-html-added">associated</span> <span class="diff-html-added">with</span> <span class="diff-html-added">log</span> <span class="diff-html-added">message.</span>       </dd><dd> <code><span class="diff-html-added">msgSupplier</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">A</span> <span class="diff-html-added">function,</span> <span class="diff-html-added">which</span> <span class="diff-html-added">when</span> <span class="diff-html-added">called,</span> <span class="diff-html-added">produces</span> <span class="diff-html-added">the</span> <span class="diff-html-added">desired</span> <span class="diff-html-added">log</span> <span class="diff-html-added">message</span>            </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Since:</span></span>   </dt><dd><span class="diff-html-added">1.8</span></dd>  </dl></li></ul> <a end_ctx_id="method:log-java.util.logging.Level-java.lang.Throwable-java.util.function.Supplier-"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:logp-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:logp-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-"/><a name="logp-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>logp</h4><pre>public void logp(<a href="../../../java/util/logging/Level.html" title="class in java.util.logging">Level</a> level,
                 <a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceClass,
                 <a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceMethod,
                 <a href="../../../java/lang/String.html" title="class in java.lang">String</a> msg)</pre><div class="block">Log a message, specifying source class and method, with no arguments.<p> If the logger is currently enabled for the given message level then the given message is forwarded to all the registered output Handler objects.                        </p><p/>          </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>level</code> - One of the message level identifiers, e.g., SEVERE          </dd><dd> <code>sourceClass</code> - name of class that issued the logging request          </dd><dd> <code>sourceMethod</code> - name of method that issued the logging request          </dd><dd> <code>msg</code> - The string message (or a key in the message catalog)            </dd> </dl></li></ul> <a end_ctx_id="method:logp-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:logp-java.util.logging.Level-java.lang.String-java.lang.String-java.util.function.Supplier- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:logp-java.util.logging.Level-java.lang.String-java.lang.String-java.util.function.Supplier-"><span class="diff-html-added"/></a><a name="logp-java.util.logging.Level-java.lang.String-java.lang.String-java.util.function.Supplier-"/><ul class="blockList"><li class="blockList"><h4><span class="diff-html-added">logp</span></h4><pre><span class="diff-html-added">public void logp(</span><a href="../../../java/util/logging/Level.html" title="class in java.util.logging"><span class="diff-html-added">Level</span></a><span class="diff-html-added"> level,</span>
                 <a href="../../../java/lang/String.html" title="class in java.lang"><span class="diff-html-added">String</span></a><span class="diff-html-added"> sourceClass,</span>
                 <a href="../../../java/lang/String.html" title="class in java.lang"><span class="diff-html-added">String</span></a><span class="diff-html-added"> sourceMethod,</span>
                 <a href="../../../java/util/function/Supplier.html" title="interface in java.util.function"><span class="diff-html-added">Supplier</span></a><span class="diff-html-added">&lt;</span><a href="../../../java/lang/String.html" title="class in java.lang"><span class="diff-html-added">String</span></a><span class="diff-html-added">&gt; msgSupplier)</span></pre><div class="block"><span class="diff-html-added">Log</span> <span class="diff-html-added">a</span> <span class="diff-html-added">lazily</span> <span class="diff-html-added">constructed</span> <span class="diff-html-added">message,</span> <span class="diff-html-added">specifying</span> <span class="diff-html-added">source</span> <span class="diff-html-added">class</span> <span class="diff-html-added">and</span> <span class="diff-html-added">method,</span> <span class="diff-html-added">with</span> <span class="diff-html-added">no</span> <span class="diff-html-added">arguments.</span><p> <span class="diff-html-added">If</span> <span class="diff-html-added">the</span> <span class="diff-html-added">logger</span> <span class="diff-html-added">is</span> <span class="diff-html-added">currently</span> <span class="diff-html-added">enabled</span> <span class="diff-html-added">for</span> <span class="diff-html-added">the</span> <span class="diff-html-added">given</span> <span class="diff-html-added">message</span> <span class="diff-html-added">level</span> <span class="diff-html-added">then</span> <span class="diff-html-added">the</span> <span class="diff-html-added">message</span> <span class="diff-html-added">is</span> <span class="diff-html-added">constructed</span> <span class="diff-html-added">by</span> <span class="diff-html-added">invoking</span> <span class="diff-html-added">the</span> <span class="diff-html-added">provided</span> <span class="diff-html-added">supplier</span> <span class="diff-html-added">function</span> <span class="diff-html-added">and</span> <span class="diff-html-added">forwarded</span> <span class="diff-html-added">to</span> <span class="diff-html-added">all</span> <span class="diff-html-added">the</span> <span class="diff-html-added">registered</span> <span class="diff-html-added">output</span> <span class="diff-html-added">Handler</span> <span class="diff-html-added">objects.</span>                               </p><p/>            </div><dl> <dt> <span class="paramLabel"><span class="diff-html-added">Parameters:</span></span>   </dt><dd> <code><span class="diff-html-added">level</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">One</span> <span class="diff-html-added">of</span> <span class="diff-html-added">the</span> <span class="diff-html-added">message</span> <span class="diff-html-added">level</span> <span class="diff-html-added">identifiers,</span> <span class="diff-html-added">e.g.,</span> <span class="diff-html-added">SEVERE</span>          </dd><dd> <code><span class="diff-html-added">sourceClass</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">name</span> <span class="diff-html-added">of</span> <span class="diff-html-added">class</span> <span class="diff-html-added">that</span> <span class="diff-html-added">issued</span> <span class="diff-html-added">the</span> <span class="diff-html-added">logging</span> <span class="diff-html-added">request</span>          </dd><dd> <code><span class="diff-html-added">sourceMethod</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">name</span> <span class="diff-html-added">of</span> <span class="diff-html-added">method</span> <span class="diff-html-added">that</span> <span class="diff-html-added">issued</span> <span class="diff-html-added">the</span> <span class="diff-html-added">logging</span> <span class="diff-html-added">request</span>          </dd><dd> <code><span class="diff-html-added">msgSupplier</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">A</span> <span class="diff-html-added">function,</span> <span class="diff-html-added">which</span> <span class="diff-html-added">when</span> <span class="diff-html-added">called,</span> <span class="diff-html-added">produces</span> <span class="diff-html-added">the</span> <span class="diff-html-added">desired</span> <span class="diff-html-added">log</span> <span class="diff-html-added">message</span>            </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Since:</span></span>   </dt><dd><span class="diff-html-added">1.8</span></dd>  </dl></li></ul> <a end_ctx_id="method:logp-java.util.logging.Level-java.lang.String-java.lang.String-java.util.function.Supplier-"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:logp-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:logp-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.Object-"/><a name="logp-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>logp</h4><pre>public void logp(<a href="../../../java/util/logging/Level.html" title="class in java.util.logging">Level</a> level,
                 <a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceClass,
                 <a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceMethod,
                 <a href="../../../java/lang/String.html" title="class in java.lang">String</a> msg,
                 <a href="../../../java/lang/Object.html" title="class in java.lang">Object</a> param1)</pre><div class="block">Log a message, specifying source class and method, with a single object parameter to the log message.<p> If the logger is currently enabled for the given message level then a corresponding LogRecord is created and forwarded to all the registered output Handler objects.                          </p><p/>                </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>level</code> - One of the message level identifiers, e.g., SEVERE          </dd><dd> <code>sourceClass</code> - name of class that issued the logging request          </dd><dd> <code>sourceMethod</code> - name of method that issued the logging request          </dd><dd> <code>msg</code> - The string message (or a key in the message catalog)            </dd><dd> <code>param1</code> - Parameter to the log message.       </dd> </dl></li></ul> <a end_ctx_id="method:logp-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:logp-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.Object:A- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:logp-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.Object:A-"/><a name="logp-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.Object:A-"/><ul class="blockList"><li class="blockList"><h4>logp</h4><pre>public void logp(<a href="../../../java/util/logging/Level.html" title="class in java.util.logging">Level</a> level,
                 <a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceClass,
                 <a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceMethod,
                 <a href="../../../java/lang/String.html" title="class in java.lang">String</a> msg,
                 <a href="../../../java/lang/Object.html" title="class in java.lang">Object</a>[] params)</pre><div class="block">Log a message, specifying source class and method, with an array of object arguments.<p> If the logger is currently enabled for the given message level then a corresponding LogRecord is created and forwarded to all the registered output Handler objects.                          </p><p/>             </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>level</code> - One of the message level identifiers, e.g., SEVERE          </dd><dd> <code>sourceClass</code> - name of class that issued the logging request          </dd><dd> <code>sourceMethod</code> - name of method that issued the logging request          </dd><dd> <code>msg</code> - The string message (or a key in the message catalog)            </dd><dd> <code>params</code> - Array of parameters to the message        </dd> </dl></li></ul> <a end_ctx_id="method:logp-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.Object:A-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:logp-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.Throwable- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:logp-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.Throwable-"/><a name="logp-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.Throwable-"/><ul class="blockList"><li class="blockList"><h4>logp</h4><pre>public void logp(<a href="../../../java/util/logging/Level.html" title="class in java.util.logging">Level</a> level,
                 <a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceClass,
                 <a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceMethod,
                 <a href="../../../java/lang/String.html" title="class in java.lang">String</a> msg,
                 <a href="../../../java/lang/Throwable.html" title="class in java.lang">Throwable</a> thrown)</pre><div class="block">Log a message, specifying source class and method, with associated Throwable information.<p> If the logger is currently enabled for the given message level then the given arguments are stored in a LogRecord which is forwarded to all registered output handlers.                            </p><p> Note that the thrown argument is stored in the LogRecord thrown property, rather than the LogRecord parameters property. Thus it is processed specially by output Formatters and is not treated as a formatting parameter to the LogRecord message property.                                       </p><p/>           </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>level</code> - One of the message level identifiers, e.g., SEVERE          </dd><dd> <code>sourceClass</code> - name of class that issued the logging request          </dd><dd> <code>sourceMethod</code> - name of method that issued the logging request          </dd><dd> <code>msg</code> - The string message (or a key in the message catalog)            </dd><dd> <code>thrown</code> - Throwable associated with log message.       </dd> </dl></li></ul> <a end_ctx_id="method:logp-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.Throwable-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:logp-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.Throwable-java.util.function.Supplier- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:logp-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.Throwable-java.util.function.Supplier-"><span class="diff-html-added"/></a><a name="logp-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.Throwable-java.util.function.Supplier-"/><ul class="blockList"><li class="blockList"><h4><span class="diff-html-added">logp</span></h4><pre><span class="diff-html-added">public void logp(</span><a href="../../../java/util/logging/Level.html" title="class in java.util.logging"><span class="diff-html-added">Level</span></a><span class="diff-html-added"> level,</span>
                 <a href="../../../java/lang/String.html" title="class in java.lang"><span class="diff-html-added">String</span></a><span class="diff-html-added"> sourceClass,</span>
                 <a href="../../../java/lang/String.html" title="class in java.lang"><span class="diff-html-added">String</span></a><span class="diff-html-added"> sourceMethod,</span>
                 <a href="../../../java/lang/Throwable.html" title="class in java.lang"><span class="diff-html-added">Throwable</span></a><span class="diff-html-added"> thrown,</span>
                 <a href="../../../java/util/function/Supplier.html" title="interface in java.util.function"><span class="diff-html-added">Supplier</span></a><span class="diff-html-added">&lt;</span><a href="../../../java/lang/String.html" title="class in java.lang"><span class="diff-html-added">String</span></a><span class="diff-html-added">&gt; msgSupplier)</span></pre><div class="block"><span class="diff-html-added">Log</span> <span class="diff-html-added">a</span> <span class="diff-html-added">lazily</span> <span class="diff-html-added">constructed</span> <span class="diff-html-added">message,</span> <span class="diff-html-added">specifying</span> <span class="diff-html-added">source</span> <span class="diff-html-added">class</span> <span class="diff-html-added">and</span> <span class="diff-html-added">method,</span> <span class="diff-html-added">with</span> <span class="diff-html-added">associated</span> <span class="diff-html-added">Throwable</span> <span class="diff-html-added">information.</span><p> <span class="diff-html-added">If</span> <span class="diff-html-added">the</span> <span class="diff-html-added">logger</span> <span class="diff-html-added">is</span> <span class="diff-html-added">currently</span> <span class="diff-html-added">enabled</span> <span class="diff-html-added">for</span> <span class="diff-html-added">the</span> <span class="diff-html-added">given</span> <span class="diff-html-added">message</span> <span class="diff-html-added">level</span> <span class="diff-html-added">then</span> <span class="diff-html-added">the</span> <span class="diff-html-added">message</span> <span class="diff-html-added">is</span> <span class="diff-html-added">constructed</span> <span class="diff-html-added">by</span> <span class="diff-html-added">invoking</span> <span class="diff-html-added">the</span> <span class="diff-html-added">provided</span> <span class="diff-html-added">supplier</span> <span class="diff-html-added">function.</span> <span class="diff-html-added">The</span> <span class="diff-html-added">message</span> <span class="diff-html-added">and</span> <span class="diff-html-added">the</span> <span class="diff-html-added">given</span> <a href="../../../java/lang/Throwable.html" title="class in java.lang"><code><span class="diff-html-added">Throwable</span></code></a> <span class="diff-html-added">are</span> <span class="diff-html-added">then</span> <span class="diff-html-added">stored</span> <span class="diff-html-added">in</span> <span class="diff-html-added">a</span> <a href="../../../java/util/logging/LogRecord.html" title="class in java.util.logging"><code><span class="diff-html-added">LogRecord</span></code></a> <span class="diff-html-added">which</span> <span class="diff-html-added">is</span> <span class="diff-html-added">forwarded</span> <span class="diff-html-added">to</span> <span class="diff-html-added">all</span> <span class="diff-html-added">registered</span> <span class="diff-html-added">output</span> <span class="diff-html-added">handlers.</span>                                          </p><p> <span class="diff-html-added">Note</span> <span class="diff-html-added">that</span> <span class="diff-html-added">the</span> <span class="diff-html-added">thrown</span> <span class="diff-html-added">argument</span> <span class="diff-html-added">is</span> <span class="diff-html-added">stored</span> <span class="diff-html-added">in</span> <span class="diff-html-added">the</span> <span class="diff-html-added">LogRecord</span> <span class="diff-html-added">thrown</span> <span class="diff-html-added">property,</span> <span class="diff-html-added">rather</span> <span class="diff-html-added">than</span> <span class="diff-html-added">the</span> <span class="diff-html-added">LogRecord</span> <span class="diff-html-added">parameters</span> <span class="diff-html-added">property.</span> <span class="diff-html-added">Thus</span> <span class="diff-html-added">it</span> <span class="diff-html-added">is</span> <span class="diff-html-added">processed</span> <span class="diff-html-added">specially</span> <span class="diff-html-added">by</span> <span class="diff-html-added">output</span> <span class="diff-html-added">Formatters</span> <span class="diff-html-added">and</span> <span class="diff-html-added">is</span> <span class="diff-html-added">not</span> <span class="diff-html-added">treated</span> <span class="diff-html-added">as</span> <span class="diff-html-added">a</span> <span class="diff-html-added">formatting</span> <span class="diff-html-added">parameter</span> <span class="diff-html-added">to</span> <span class="diff-html-added">the</span> <span class="diff-html-added">LogRecord</span> <span class="diff-html-added">message</span> <span class="diff-html-added">property.</span>                                       </p><p/>             </div><dl> <dt> <span class="paramLabel"><span class="diff-html-added">Parameters:</span></span>   </dt><dd> <code><span class="diff-html-added">level</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">One</span> <span class="diff-html-added">of</span> <span class="diff-html-added">the</span> <span class="diff-html-added">message</span> <span class="diff-html-added">level</span> <span class="diff-html-added">identifiers,</span> <span class="diff-html-added">e.g.,</span> <span class="diff-html-added">SEVERE</span>          </dd><dd> <code><span class="diff-html-added">sourceClass</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">name</span> <span class="diff-html-added">of</span> <span class="diff-html-added">class</span> <span class="diff-html-added">that</span> <span class="diff-html-added">issued</span> <span class="diff-html-added">the</span> <span class="diff-html-added">logging</span> <span class="diff-html-added">request</span>          </dd><dd> <code><span class="diff-html-added">sourceMethod</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">name</span> <span class="diff-html-added">of</span> <span class="diff-html-added">method</span> <span class="diff-html-added">that</span> <span class="diff-html-added">issued</span> <span class="diff-html-added">the</span> <span class="diff-html-added">logging</span> <span class="diff-html-added">request</span>          </dd><dd> <code><span class="diff-html-added">thrown</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">Throwable</span> <span class="diff-html-added">associated</span> <span class="diff-html-added">with</span> <span class="diff-html-added">log</span> <span class="diff-html-added">message.</span>       </dd><dd> <code><span class="diff-html-added">msgSupplier</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">A</span> <span class="diff-html-added">function,</span> <span class="diff-html-added">which</span> <span class="diff-html-added">when</span> <span class="diff-html-added">called,</span> <span class="diff-html-added">produces</span> <span class="diff-html-added">the</span> <span class="diff-html-added">desired</span> <span class="diff-html-added">log</span> <span class="diff-html-added">message</span>            </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Since:</span></span>   </dt><dd><span class="diff-html-added">1.8</span></dd>  </dl></li></ul> <a end_ctx_id="method:logp-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.Throwable-java.util.function.Supplier-"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.String-"/><a name="logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>logrb</h4><pre><a href="../../../java/lang/Deprecated.html" title="annotation in java.lang">@Deprecated</a>
public void logrb(<a href="../../../java/util/logging/Level.html" title="class in java.util.logging">Level</a> level,
                              <a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceClass,
                              <a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceMethod,
                              <a href="../../../java/lang/String.html" title="class in java.lang">String</a> bundleName,
                              <a href="../../../java/lang/String.html" title="class in java.lang">String</a> msg)</pre><div class="block"> <span class="deprecatedLabel">Deprecated.</span> <span class="deprecationComment">Use <a href="../../../java/util/logging/Logger.html#logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.util.ResourceBundle-java.lang.String-java.lang.Object...-"><code>logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.util.ResourceBundle, java.lang.String, java.lang.Object...)     </code></a> instead.  </span> </div><div class="block">Log a message, specifying source class, method, and resource bundle name with no arguments.<p> If the logger is currently enabled for the given message level then the given message is forwarded to all the registered output Handler objects.                        </p><p> The msg string is localized using the named resource bundle. If the resource bundle name is null, or an empty String or invalid then the msg string is not localized.                              </p><p/>             </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>level</code> - One of the message level identifiers, e.g., SEVERE          </dd><dd> <code>sourceClass</code> - name of class that issued the logging request          </dd><dd> <code>sourceMethod</code> - name of method that issued the logging request          </dd><dd> <code>bundleName</code> - name of resource bundle to localize msg, can be null            </dd><dd> <code>msg</code> - The string message (or a key in the message catalog)            </dd> </dl></li></ul> <a end_ctx_id="method:logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.String-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.String-java.lang.Object-"/><a name="logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.String-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>logrb</h4><pre><a href="../../../java/lang/Deprecated.html" title="annotation in java.lang">@Deprecated</a>
public void logrb(<a href="../../../java/util/logging/Level.html" title="class in java.util.logging">Level</a> level,
                              <a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceClass,
                              <a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceMethod,
                              <a href="../../../java/lang/String.html" title="class in java.lang">String</a> bundleName,
                              <a href="../../../java/lang/String.html" title="class in java.lang">String</a> msg,
                              <a href="../../../java/lang/Object.html" title="class in java.lang">Object</a> param1)</pre><div class="block"> <span class="deprecatedLabel">Deprecated.</span> <span class="deprecationComment">Use <a href="../../../java/util/logging/Logger.html#logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.util.ResourceBundle-java.lang.String-java.lang.Object...-"><code>logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.util.ResourceBundle, java.lang.String, java.lang.Object...)     </code></a> instead  </span> </div><div class="block">Log a message, specifying source class, method, and resource bundle name, with a single object parameter to the log message.<p> If the logger is currently enabled for the given message level then a corresponding LogRecord is created and forwarded to all the registered output Handler objects.                          </p><p> The msg string is localized using the named resource bundle. If the resource bundle name is null, or an empty String or invalid then the msg string is not localized.                              </p><p/>                   </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>level</code> - One of the message level identifiers, e.g., SEVERE          </dd><dd> <code>sourceClass</code> - name of class that issued the logging request          </dd><dd> <code>sourceMethod</code> - name of method that issued the logging request          </dd><dd> <code>bundleName</code> - name of resource bundle to localize msg, can be null            </dd><dd> <code>msg</code> - The string message (or a key in the message catalog)            </dd><dd> <code>param1</code> - Parameter to the log message.       </dd> </dl></li></ul> <a end_ctx_id="method:logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.String-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.String-java.lang.Object:A- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.String-java.lang.Object:A-"/><a name="logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.String-java.lang.Object:A-"/><ul class="blockList"><li class="blockList"><h4>logrb</h4><pre><a href="../../../java/lang/Deprecated.html" title="annotation in java.lang">@Deprecated</a>
public void logrb(<a href="../../../java/util/logging/Level.html" title="class in java.util.logging">Level</a> level,
                              <a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceClass,
                              <a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceMethod,
                              <a href="../../../java/lang/String.html" title="class in java.lang">String</a> bundleName,
                              <a href="../../../java/lang/String.html" title="class in java.lang">String</a> msg,
                              <a href="../../../java/lang/Object.html" title="class in java.lang">Object</a>[] params)</pre><div class="block"> <span class="deprecatedLabel">Deprecated.</span> <span class="deprecationComment">Use <a href="../../../java/util/logging/Logger.html#logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.util.ResourceBundle-java.lang.String-java.lang.Object...-"><code>logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.util.ResourceBundle, java.lang.String, java.lang.Object...)     </code></a> instead.  </span> </div><div class="block">Log a message, specifying source class, method, and resource bundle name, with an array of object arguments.<p> If the logger is currently enabled for the given message level then a corresponding LogRecord is created and forwarded to all the registered output Handler objects.                          </p><p> The msg string is localized using the named resource bundle. If the resource bundle name is null, or an empty String or invalid then the msg string is not localized.                              </p><p/>                </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>level</code> - One of the message level identifiers, e.g., SEVERE          </dd><dd> <code>sourceClass</code> - name of class that issued the logging request          </dd><dd> <code>sourceMethod</code> - name of method that issued the logging request          </dd><dd> <code>bundleName</code> - name of resource bundle to localize msg, can be null.            </dd><dd> <code>msg</code> - The string message (or a key in the message catalog)            </dd><dd> <code>params</code> - Array of parameters to the message        </dd> </dl></li></ul> <a end_ctx_id="method:logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.String-java.lang.Object:A-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.util.ResourceBundle-java.lang.String-java.lang.Object...- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.util.ResourceBundle-java.lang.String-java.lang.Object...-"/><a name="logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.util.ResourceBundle-java.lang.String-java.lang.Object...-"/><ul class="blockList"><li class="blockList"><h4>logrb</h4><pre>public void logrb(<a href="../../../java/util/logging/Level.html" title="class in java.util.logging">Level</a> level,
                  <a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceClass,
                  <a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceMethod,
                  <a href="../../../java/util/ResourceBundle.html" title="class in java.util">ResourceBundle</a> bundle,
                  <a href="../../../java/lang/String.html" title="class in java.lang">String</a> msg,
                  <a href="../../../java/lang/Object.html" title="class in java.lang">Object</a>... params)</pre><div class="block">Log a message, specifying source class, method, and resource bundle, with an optional list of message parameters.<p> If the logger is currently enabled for the given message level then a corresponding LogRecord is created and forwarded to all the registered output Handler objects.                          </p><p> The <code>msg</code> string is localized using the given resource bundle. If the resource bundle is <code>null</code>, then the <code>msg</code> string is not localized.                       </p><p/>                </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>level</code> - One of the message level identifiers, e.g., SEVERE          </dd><dd> <code>sourceClass</code> - Name of the class that issued the logging request           </dd><dd> <code>sourceMethod</code> - Name of the method that issued the logging request           </dd><dd> <code>bundle</code> - Resource bundle to localize <code>msg</code>, can be <code>null</code>.          </dd><dd> <code>msg</code> - The string message (or a key in the message catalog)            </dd><dd> <code>params</code> - Parameters to the message (optional, may be none).          </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.8</dd>  </dl></li></ul> <a end_ctx_id="method:logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.util.ResourceBundle-java.lang.String-java.lang.Object...-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.String-java.lang.Throwable- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.String-java.lang.Throwable-"/><a name="logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.String-java.lang.Throwable-"/><ul class="blockList"><li class="blockList"><h4>logrb</h4><pre><a href="../../../java/lang/Deprecated.html" title="annotation in java.lang">@Deprecated</a>
public void logrb(<a href="../../../java/util/logging/Level.html" title="class in java.util.logging">Level</a> level,
                              <a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceClass,
                              <a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceMethod,
                              <a href="../../../java/lang/String.html" title="class in java.lang">String</a> bundleName,
                              <a href="../../../java/lang/String.html" title="class in java.lang">String</a> msg,
                              <a href="../../../java/lang/Throwable.html" title="class in java.lang">Throwable</a> thrown)</pre><div class="block"> <span class="deprecatedLabel">Deprecated.</span> <span class="deprecationComment">Use <a href="../../../java/util/logging/Logger.html#logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.util.ResourceBundle-java.lang.String-java.lang.Throwable-"><code>logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.util.ResourceBundle, java.lang.String, java.lang.Throwable)     </code></a> instead.  </span> </div><div class="block">Log a message, specifying source class, method, and resource bundle name, with associated Throwable information.<p> If the logger is currently enabled for the given message level then the given arguments are stored in a LogRecord which is forwarded to all registered output handlers.                            </p><p> The msg string is localized using the named resource bundle. If the resource bundle name is null, or an empty String or invalid then the msg string is not localized.                              </p><p> Note that the thrown argument is stored in the LogRecord thrown property, rather than the LogRecord parameters property. Thus it is processed specially by output Formatters and is not treated as a formatting parameter to the LogRecord message property.                                       </p><p/>              </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>level</code> - One of the message level identifiers, e.g., SEVERE          </dd><dd> <code>sourceClass</code> - name of class that issued the logging request          </dd><dd> <code>sourceMethod</code> - name of method that issued the logging request          </dd><dd> <code>bundleName</code> - name of resource bundle to localize msg, can be null            </dd><dd> <code>msg</code> - The string message (or a key in the message catalog)            </dd><dd> <code>thrown</code> - Throwable associated with log message.       </dd> </dl></li></ul> <a end_ctx_id="method:logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.lang.String-java.lang.String-java.lang.Throwable-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.util.ResourceBundle-java.lang.String-java.lang.Throwable- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.util.ResourceBundle-java.lang.String-java.lang.Throwable-"/><a name="logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.util.ResourceBundle-java.lang.String-java.lang.Throwable-"/><ul class="blockList"><li class="blockList"><h4>logrb</h4><pre>public void logrb(<a href="../../../java/util/logging/Level.html" title="class in java.util.logging">Level</a> level,
                  <a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceClass,
                  <a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceMethod,
                  <a href="../../../java/util/ResourceBundle.html" title="class in java.util">ResourceBundle</a> bundle,
                  <a href="../../../java/lang/String.html" title="class in java.lang">String</a> msg,
                  <a href="../../../java/lang/Throwable.html" title="class in java.lang">Throwable</a> thrown)</pre><div class="block">Log a message, specifying source class, method, and resource bundle, with associated Throwable information.<p> If the logger is currently enabled for the given message level then the given arguments are stored in a LogRecord which is forwarded to all registered output handlers.                            </p><p> The <code>msg</code> string is localized using the given resource bundle. If the resource bundle is <code>null</code>, then the <code>msg</code> string is not localized.                       </p><p> Note that the thrown argument is stored in the LogRecord thrown property, rather than the LogRecord parameters property. Thus it is processed specially by output Formatters and is not treated as a formatting parameter to the LogRecord message property.                                       </p><p/>             </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>level</code> - One of the message level identifiers, e.g., SEVERE          </dd><dd> <code>sourceClass</code> - Name of the class that issued the logging request           </dd><dd> <code>sourceMethod</code> - Name of the method that issued the logging request           </dd><dd> <code>bundle</code> - Resource bundle to localize <code>msg</code>, can be <code>null</code>          </dd><dd> <code>msg</code> - The string message (or a key in the message catalog)            </dd><dd> <code>thrown</code> - Throwable associated with the log message.        </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.8</dd>  </dl></li></ul> <a end_ctx_id="method:logrb-java.util.logging.Level-java.lang.String-java.lang.String-java.util.ResourceBundle-java.lang.String-java.lang.Throwable-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:entering-java.lang.String-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:entering-java.lang.String-java.lang.String-"/><a name="entering-java.lang.String-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>entering</h4><pre>public void entering(<a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceClass,
                     <a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceMethod)</pre><div class="block">Log a method entry.<p> This is a convenience method that can be used to log entry to a method. A LogRecord with message "ENTRY", log level FINER, and the given sourceMethod and sourceClass is logged.                               </p><p/>   </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>sourceClass</code> - name of class that issued the logging request          </dd><dd> <code>sourceMethod</code> - name of method that is being entered         </dd> </dl></li></ul> <a end_ctx_id="method:entering-java.lang.String-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:entering-java.lang.String-java.lang.String-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:entering-java.lang.String-java.lang.String-java.lang.Object-"/><a name="entering-java.lang.String-java.lang.String-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>entering</h4><pre>public void entering(<a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceClass,
                     <a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceMethod,
                     <a href="../../../java/lang/Object.html" title="class in java.lang">Object</a> param1)</pre><div class="block">Log a method entry, with one parameter.<p> This is a convenience method that can be used to log entry to a method. A LogRecord with message "ENTRY {0}", log level FINER, and the given sourceMethod, sourceClass, and parameter is logged.                                 </p><p/>      </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>sourceClass</code> - name of class that issued the logging request          </dd><dd> <code>sourceMethod</code> - name of method that is being entered         </dd><dd> <code>param1</code> - parameter to the method being entered        </dd> </dl></li></ul> <a end_ctx_id="method:entering-java.lang.String-java.lang.String-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:entering-java.lang.String-java.lang.String-java.lang.Object:A- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:entering-java.lang.String-java.lang.String-java.lang.Object:A-"/><a name="entering-java.lang.String-java.lang.String-java.lang.Object:A-"/><ul class="blockList"><li class="blockList"><h4>entering</h4><pre>public void entering(<a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceClass,
                     <a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceMethod,
                     <a href="../../../java/lang/Object.html" title="class in java.lang">Object</a>[] params)</pre><div class="block">Log a method entry, with an array of parameters.<p> This is a convenience method that can be used to log entry to a method. A LogRecord with message "ENTRY" (followed by a format {N} indicator for each entry in the parameter array), log level FINER, and the given sourceMethod, sourceClass, and parameters is logged.                                             </p><p/>        </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>sourceClass</code> - name of class that issued the logging request          </dd><dd> <code>sourceMethod</code> - name of method that is being entered         </dd><dd> <code>params</code> - array of parameters to the method being entered          </dd> </dl></li></ul> <a end_ctx_id="method:entering-java.lang.String-java.lang.String-java.lang.Object:A-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:exiting-java.lang.String-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:exiting-java.lang.String-java.lang.String-"/><a name="exiting-java.lang.String-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>exiting</h4><pre>public void exiting(<a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceClass,
                    <a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceMethod)</pre><div class="block">Log a method return.<p> This is a convenience method that can be used to log returning from a method. A LogRecord with message "RETURN", log level FINER, and the given sourceMethod and sourceClass is logged.                               </p><p/>   </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>sourceClass</code> - name of class that issued the logging request          </dd><dd> <code>sourceMethod</code> - name of the method      </dd> </dl></li></ul> <a end_ctx_id="method:exiting-java.lang.String-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:exiting-java.lang.String-java.lang.String-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:exiting-java.lang.String-java.lang.String-java.lang.Object-"/><a name="exiting-java.lang.String-java.lang.String-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>exiting</h4><pre>public void exiting(<a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceClass,
                    <a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceMethod,
                    <a href="../../../java/lang/Object.html" title="class in java.lang">Object</a> result)</pre><div class="block">Log a method return, with result object.<p> This is a convenience method that can be used to log returning from a method. A LogRecord with message "RETURN {0}", log level FINER, and the gives sourceMethod, sourceClass, and result object is logged.                                  </p><p/>      </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>sourceClass</code> - name of class that issued the logging request          </dd><dd> <code>sourceMethod</code> - name of the method      </dd><dd> <code>result</code> - Object that is being returned       </dd> </dl></li></ul> <a end_ctx_id="method:exiting-java.lang.String-java.lang.String-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:throwing-java.lang.String-java.lang.String-java.lang.Throwable- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:throwing-java.lang.String-java.lang.String-java.lang.Throwable-"/><a name="throwing-java.lang.String-java.lang.String-java.lang.Throwable-"/><ul class="blockList"><li class="blockList"><h4>throwing</h4><pre>public void throwing(<a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceClass,
                     <a href="../../../java/lang/String.html" title="class in java.lang">String</a> sourceMethod,
                     <a href="../../../java/lang/Throwable.html" title="class in java.lang">Throwable</a> thrown)</pre><div class="block">Log throwing an exception.<p> This is a convenience method to log that a method is terminating by throwing an exception. The logging is done using the FINER level.                        </p><p> If the logger is currently enabled for the given message level then the given arguments are stored in a LogRecord which is forwarded to all registered output handlers. The LogRecord's message is set to "THROW".                                   </p><p> Note that the thrown argument is stored in the LogRecord thrown property, rather than the LogRecord parameters property. Thus it is processed specially by output Formatters and is not treated as a formatting parameter to the LogRecord message property.                                       </p><p/>   </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>sourceClass</code> - name of class that issued the logging request          </dd><dd> <code>sourceMethod</code> - name of the method.      </dd><dd> <code>thrown</code> - The Throwable that is being thrown.        </dd> </dl></li></ul> <a end_ctx_id="method:throwing-java.lang.String-java.lang.String-java.lang.Throwable-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:severe-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:severe-java.lang.String-"/><a name="severe-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>severe</h4><pre>public void severe(<a href="../../../java/lang/String.html" title="class in java.lang">String</a> msg)</pre><div class="block">Log a SEVERE message.<p> If the logger is currently enabled for the SEVERE message level then the given message is forwarded to all the registered output Handler objects.                        </p><p/>   </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>msg</code> - The string message (or a key in the message catalog)            </dd> </dl></li></ul> <a end_ctx_id="method:severe-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:warning-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:warning-java.lang.String-"/><a name="warning-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>warning</h4><pre>public void warning(<a href="../../../java/lang/String.html" title="class in java.lang">String</a> msg)</pre><div class="block">Log a WARNING message.<p> If the logger is currently enabled for the WARNING message level then the given message is forwarded to all the registered output Handler objects.                        </p><p/>   </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>msg</code> - The string message (or a key in the message catalog)            </dd> </dl></li></ul> <a end_ctx_id="method:warning-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:info-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:info-java.lang.String-"/><a name="info-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>info</h4><pre>public void info(<a href="../../../java/lang/String.html" title="class in java.lang">String</a> msg)</pre><div class="block">Log an INFO message.<p> If the logger is currently enabled for the INFO message level then the given message is forwarded to all the registered output Handler objects.                        </p><p/>   </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>msg</code> - The string message (or a key in the message catalog)            </dd> </dl></li></ul> <a end_ctx_id="method:info-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:config-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:config-java.lang.String-"/><a name="config-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>config</h4><pre>public void config(<a href="../../../java/lang/String.html" title="class in java.lang">String</a> msg)</pre><div class="block">Log a CONFIG message.<p> If the logger is currently enabled for the CONFIG message level then the given message is forwarded to all the registered output Handler objects.                        </p><p/>   </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>msg</code> - The string message (or a key in the message catalog)            </dd> </dl></li></ul> <a end_ctx_id="method:config-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:fine-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:fine-java.lang.String-"/><a name="fine-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>fine</h4><pre>public void fine(<a href="../../../java/lang/String.html" title="class in java.lang">String</a> msg)</pre><div class="block">Log a FINE message.<p> If the logger is currently enabled for the FINE message level then the given message is forwarded to all the registered output Handler objects.                        </p><p/>   </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>msg</code> - The string message (or a key in the message catalog)            </dd> </dl></li></ul> <a end_ctx_id="method:fine-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:finer-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:finer-java.lang.String-"/><a name="finer-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>finer</h4><pre>public void finer(<a href="../../../java/lang/String.html" title="class in java.lang">String</a> msg)</pre><div class="block">Log a FINER message.<p> If the logger is currently enabled for the FINER message level then the given message is forwarded to all the registered output Handler objects.                        </p><p/>   </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>msg</code> - The string message (or a key in the message catalog)            </dd> </dl></li></ul> <a end_ctx_id="method:finer-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:finest-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:finest-java.lang.String-"/><a name="finest-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>finest</h4><pre>public void finest(<a href="../../../java/lang/String.html" title="class in java.lang">String</a> msg)</pre><div class="block">Log a FINEST message.<p> If the logger is currently enabled for the FINEST message level then the given message is forwarded to all the registered output Handler objects.                        </p><p/>   </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>msg</code> - The string message (or a key in the message catalog)            </dd> </dl></li></ul> <a end_ctx_id="method:finest-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:severe-java.util.function.Supplier- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:severe-java.util.function.Supplier-"><span class="diff-html-added"/></a><a name="severe-java.util.function.Supplier-"/><ul class="blockList"><li class="blockList"><h4><span class="diff-html-added">severe</span></h4><pre><span class="diff-html-added">public void severe(</span><a href="../../../java/util/function/Supplier.html" title="interface in java.util.function"><span class="diff-html-added">Supplier</span></a><span class="diff-html-added">&lt;</span><a href="../../../java/lang/String.html" title="class in java.lang"><span class="diff-html-added">String</span></a><span class="diff-html-added">&gt; msgSupplier)</span></pre><div class="block"><span class="diff-html-added">Log</span> <span class="diff-html-added">a</span> <span class="diff-html-added">SEVERE</span> <span class="diff-html-added">message,</span> <span class="diff-html-added">which</span> <span class="diff-html-added">is</span> <span class="diff-html-added">only</span> <span class="diff-html-added">to</span> <span class="diff-html-added">be</span> <span class="diff-html-added">constructed</span> <span class="diff-html-added">if</span> <span class="diff-html-added">the</span> <span class="diff-html-added">logging</span> <span class="diff-html-added">level</span> <span class="diff-html-added">is</span> <span class="diff-html-added">such</span> <span class="diff-html-added">that</span> <span class="diff-html-added">the</span> <span class="diff-html-added">message</span> <span class="diff-html-added">will</span> <span class="diff-html-added">actually</span> <span class="diff-html-added">be</span> <span class="diff-html-added">logged.</span><p> <span class="diff-html-added">If</span> <span class="diff-html-added">the</span> <span class="diff-html-added">logger</span> <span class="diff-html-added">is</span> <span class="diff-html-added">currently</span> <span class="diff-html-added">enabled</span> <span class="diff-html-added">for</span> <span class="diff-html-added">the</span> <span class="diff-html-added">SEVERE</span> <span class="diff-html-added">message</span> <span class="diff-html-added">level</span> <span class="diff-html-added">then</span> <span class="diff-html-added">the</span> <span class="diff-html-added">message</span> <span class="diff-html-added">is</span> <span class="diff-html-added">constructed</span> <span class="diff-html-added">by</span> <span class="diff-html-added">invoking</span> <span class="diff-html-added">the</span> <span class="diff-html-added">provided</span> <span class="diff-html-added">supplier</span> <span class="diff-html-added">function</span> <span class="diff-html-added">and</span> <span class="diff-html-added">forwarded</span> <span class="diff-html-added">to</span> <span class="diff-html-added">all</span> <span class="diff-html-added">the</span> <span class="diff-html-added">registered</span> <span class="diff-html-added">output</span> <span class="diff-html-added">Handler</span> <span class="diff-html-added">objects.</span>                               </p><p/>                      </div><dl> <dt> <span class="paramLabel"><span class="diff-html-added">Parameters:</span></span>   </dt><dd> <code><span class="diff-html-added">msgSupplier</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">A</span> <span class="diff-html-added">function,</span> <span class="diff-html-added">which</span> <span class="diff-html-added">when</span> <span class="diff-html-added">called,</span> <span class="diff-html-added">produces</span> <span class="diff-html-added">the</span> <span class="diff-html-added">desired</span> <span class="diff-html-added">log</span> <span class="diff-html-added">message</span>            </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Since:</span></span>   </dt><dd><span class="diff-html-added">1.8</span></dd>  </dl></li></ul> <a end_ctx_id="method:severe-java.util.function.Supplier-"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:warning-java.util.function.Supplier- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:warning-java.util.function.Supplier-"><span class="diff-html-added"/></a><a name="warning-java.util.function.Supplier-"/><ul class="blockList"><li class="blockList"><h4><span class="diff-html-added">warning</span></h4><pre><span class="diff-html-added">public void warning(</span><a href="../../../java/util/function/Supplier.html" title="interface in java.util.function"><span class="diff-html-added">Supplier</span></a><span class="diff-html-added">&lt;</span><a href="../../../java/lang/String.html" title="class in java.lang"><span class="diff-html-added">String</span></a><span class="diff-html-added">&gt; msgSupplier)</span></pre><div class="block"><span class="diff-html-added">Log</span> <span class="diff-html-added">a</span> <span class="diff-html-added">WARNING</span> <span class="diff-html-added">message,</span> <span class="diff-html-added">which</span> <span class="diff-html-added">is</span> <span class="diff-html-added">only</span> <span class="diff-html-added">to</span> <span class="diff-html-added">be</span> <span class="diff-html-added">constructed</span> <span class="diff-html-added">if</span> <span class="diff-html-added">the</span> <span class="diff-html-added">logging</span> <span class="diff-html-added">level</span> <span class="diff-html-added">is</span> <span class="diff-html-added">such</span> <span class="diff-html-added">that</span> <span class="diff-html-added">the</span> <span class="diff-html-added">message</span> <span class="diff-html-added">will</span> <span class="diff-html-added">actually</span> <span class="diff-html-added">be</span> <span class="diff-html-added">logged.</span><p> <span class="diff-html-added">If</span> <span class="diff-html-added">the</span> <span class="diff-html-added">logger</span> <span class="diff-html-added">is</span> <span class="diff-html-added">currently</span> <span class="diff-html-added">enabled</span> <span class="diff-html-added">for</span> <span class="diff-html-added">the</span> <span class="diff-html-added">WARNING</span> <span class="diff-html-added">message</span> <span class="diff-html-added">level</span> <span class="diff-html-added">then</span> <span class="diff-html-added">the</span> <span class="diff-html-added">message</span> <span class="diff-html-added">is</span> <span class="diff-html-added">constructed</span> <span class="diff-html-added">by</span> <span class="diff-html-added">invoking</span> <span class="diff-html-added">the</span> <span class="diff-html-added">provided</span> <span class="diff-html-added">supplier</span> <span class="diff-html-added">function</span> <span class="diff-html-added">and</span> <span class="diff-html-added">forwarded</span> <span class="diff-html-added">to</span> <span class="diff-html-added">all</span> <span class="diff-html-added">the</span> <span class="diff-html-added">registered</span> <span class="diff-html-added">output</span> <span class="diff-html-added">Handler</span> <span class="diff-html-added">objects.</span>                               </p><p/>                      </div><dl> <dt> <span class="paramLabel"><span class="diff-html-added">Parameters:</span></span>   </dt><dd> <code><span class="diff-html-added">msgSupplier</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">A</span> <span class="diff-html-added">function,</span> <span class="diff-html-added">which</span> <span class="diff-html-added">when</span> <span class="diff-html-added">called,</span> <span class="diff-html-added">produces</span> <span class="diff-html-added">the</span> <span class="diff-html-added">desired</span> <span class="diff-html-added">log</span> <span class="diff-html-added">message</span>            </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Since:</span></span>   </dt><dd><span class="diff-html-added">1.8</span></dd>  </dl></li></ul> <a end_ctx_id="method:warning-java.util.function.Supplier-"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:info-java.util.function.Supplier- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:info-java.util.function.Supplier-"><span class="diff-html-added"/></a><a name="info-java.util.function.Supplier-"/><ul class="blockList"><li class="blockList"><h4><span class="diff-html-added">info</span></h4><pre><span class="diff-html-added">public void info(</span><a href="../../../java/util/function/Supplier.html" title="interface in java.util.function"><span class="diff-html-added">Supplier</span></a><span class="diff-html-added">&lt;</span><a href="../../../java/lang/String.html" title="class in java.lang"><span class="diff-html-added">String</span></a><span class="diff-html-added">&gt; msgSupplier)</span></pre><div class="block"><span class="diff-html-added">Log</span> <span class="diff-html-added">a</span> <span class="diff-html-added">INFO</span> <span class="diff-html-added">message,</span> <span class="diff-html-added">which</span> <span class="diff-html-added">is</span> <span class="diff-html-added">only</span> <span class="diff-html-added">to</span> <span class="diff-html-added">be</span> <span class="diff-html-added">constructed</span> <span class="diff-html-added">if</span> <span class="diff-html-added">the</span> <span class="diff-html-added">logging</span> <span class="diff-html-added">level</span> <span class="diff-html-added">is</span> <span class="diff-html-added">such</span> <span class="diff-html-added">that</span> <span class="diff-html-added">the</span> <span class="diff-html-added">message</span> <span class="diff-html-added">will</span> <span class="diff-html-added">actually</span> <span class="diff-html-added">be</span> <span class="diff-html-added">logged.</span><p> <span class="diff-html-added">If</span> <span class="diff-html-added">the</span> <span class="diff-html-added">logger</span> <span class="diff-html-added">is</span> <span class="diff-html-added">currently</span> <span class="diff-html-added">enabled</span> <span class="diff-html-added">for</span> <span class="diff-html-added">the</span> <span class="diff-html-added">INFO</span> <span class="diff-html-added">message</span> <span class="diff-html-added">level</span> <span class="diff-html-added">then</span> <span class="diff-html-added">the</span> <span class="diff-html-added">message</span> <span class="diff-html-added">is</span> <span class="diff-html-added">constructed</span> <span class="diff-html-added">by</span> <span class="diff-html-added">invoking</span> <span class="diff-html-added">the</span> <span class="diff-html-added">provided</span> <span class="diff-html-added">supplier</span> <span class="diff-html-added">function</span> <span class="diff-html-added">and</span> <span class="diff-html-added">forwarded</span> <span class="diff-html-added">to</span> <span class="diff-html-added">all</span> <span class="diff-html-added">the</span> <span class="diff-html-added">registered</span> <span class="diff-html-added">output</span> <span class="diff-html-added">Handler</span> <span class="diff-html-added">objects.</span>                               </p><p/>                      </div><dl> <dt> <span class="paramLabel"><span class="diff-html-added">Parameters:</span></span>   </dt><dd> <code><span class="diff-html-added">msgSupplier</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">A</span> <span class="diff-html-added">function,</span> <span class="diff-html-added">which</span> <span class="diff-html-added">when</span> <span class="diff-html-added">called,</span> <span class="diff-html-added">produces</span> <span class="diff-html-added">the</span> <span class="diff-html-added">desired</span> <span class="diff-html-added">log</span> <span class="diff-html-added">message</span>            </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Since:</span></span>   </dt><dd><span class="diff-html-added">1.8</span></dd>  </dl></li></ul> <a end_ctx_id="method:info-java.util.function.Supplier-"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:config-java.util.function.Supplier- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:config-java.util.function.Supplier-"><span class="diff-html-added"/></a><a name="config-java.util.function.Supplier-"/><ul class="blockList"><li class="blockList"><h4><span class="diff-html-added">config</span></h4><pre><span class="diff-html-added">public void config(</span><a href="../../../java/util/function/Supplier.html" title="interface in java.util.function"><span class="diff-html-added">Supplier</span></a><span class="diff-html-added">&lt;</span><a href="../../../java/lang/String.html" title="class in java.lang"><span class="diff-html-added">String</span></a><span class="diff-html-added">&gt; msgSupplier)</span></pre><div class="block"><span class="diff-html-added">Log</span> <span class="diff-html-added">a</span> <span class="diff-html-added">CONFIG</span> <span class="diff-html-added">message,</span> <span class="diff-html-added">which</span> <span class="diff-html-added">is</span> <span class="diff-html-added">only</span> <span class="diff-html-added">to</span> <span class="diff-html-added">be</span> <span class="diff-html-added">constructed</span> <span class="diff-html-added">if</span> <span class="diff-html-added">the</span> <span class="diff-html-added">logging</span> <span class="diff-html-added">level</span> <span class="diff-html-added">is</span> <span class="diff-html-added">such</span> <span class="diff-html-added">that</span> <span class="diff-html-added">the</span> <span class="diff-html-added">message</span> <span class="diff-html-added">will</span> <span class="diff-html-added">actually</span> <span class="diff-html-added">be</span> <span class="diff-html-added">logged.</span><p> <span class="diff-html-added">If</span> <span class="diff-html-added">the</span> <span class="diff-html-added">logger</span> <span class="diff-html-added">is</span> <span class="diff-html-added">currently</span> <span class="diff-html-added">enabled</span> <span class="diff-html-added">for</span> <span class="diff-html-added">the</span> <span class="diff-html-added">CONFIG</span> <span class="diff-html-added">message</span> <span class="diff-html-added">level</span> <span class="diff-html-added">then</span> <span class="diff-html-added">the</span> <span class="diff-html-added">message</span> <span class="diff-html-added">is</span> <span class="diff-html-added">constructed</span> <span class="diff-html-added">by</span> <span class="diff-html-added">invoking</span> <span class="diff-html-added">the</span> <span class="diff-html-added">provided</span> <span class="diff-html-added">supplier</span> <span class="diff-html-added">function</span> <span class="diff-html-added">and</span> <span class="diff-html-added">forwarded</span> <span class="diff-html-added">to</span> <span class="diff-html-added">all</span> <span class="diff-html-added">the</span> <span class="diff-html-added">registered</span> <span class="diff-html-added">output</span> <span class="diff-html-added">Handler</span> <span class="diff-html-added">objects.</span>                               </p><p/>                      </div><dl> <dt> <span class="paramLabel"><span class="diff-html-added">Parameters:</span></span>   </dt><dd> <code><span class="diff-html-added">msgSupplier</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">A</span> <span class="diff-html-added">function,</span> <span class="diff-html-added">which</span> <span class="diff-html-added">when</span> <span class="diff-html-added">called,</span> <span class="diff-html-added">produces</span> <span class="diff-html-added">the</span> <span class="diff-html-added">desired</span> <span class="diff-html-added">log</span> <span class="diff-html-added">message</span>            </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Since:</span></span>   </dt><dd><span class="diff-html-added">1.8</span></dd>  </dl></li></ul> <a end_ctx_id="method:config-java.util.function.Supplier-"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:fine-java.util.function.Supplier- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:fine-java.util.function.Supplier-"><span class="diff-html-added"/></a><a name="fine-java.util.function.Supplier-"/><ul class="blockList"><li class="blockList"><h4><span class="diff-html-added">fine</span></h4><pre><span class="diff-html-added">public void fine(</span><a href="../../../java/util/function/Supplier.html" title="interface in java.util.function"><span class="diff-html-added">Supplier</span></a><span class="diff-html-added">&lt;</span><a href="../../../java/lang/String.html" title="class in java.lang"><span class="diff-html-added">String</span></a><span class="diff-html-added">&gt; msgSupplier)</span></pre><div class="block"><span class="diff-html-added">Log</span> <span class="diff-html-added">a</span> <span class="diff-html-added">FINE</span> <span class="diff-html-added">message,</span> <span class="diff-html-added">which</span> <span class="diff-html-added">is</span> <span class="diff-html-added">only</span> <span class="diff-html-added">to</span> <span class="diff-html-added">be</span> <span class="diff-html-added">constructed</span> <span class="diff-html-added">if</span> <span class="diff-html-added">the</span> <span class="diff-html-added">logging</span> <span class="diff-html-added">level</span> <span class="diff-html-added">is</span> <span class="diff-html-added">such</span> <span class="diff-html-added">that</span> <span class="diff-html-added">the</span> <span class="diff-html-added">message</span> <span class="diff-html-added">will</span> <span class="diff-html-added">actually</span> <span class="diff-html-added">be</span> <span class="diff-html-added">logged.</span><p> <span class="diff-html-added">If</span> <span class="diff-html-added">the</span> <span class="diff-html-added">logger</span> <span class="diff-html-added">is</span> <span class="diff-html-added">currently</span> <span class="diff-html-added">enabled</span> <span class="diff-html-added">for</span> <span class="diff-html-added">the</span> <span class="diff-html-added">FINE</span> <span class="diff-html-added">message</span> <span class="diff-html-added">level</span> <span class="diff-html-added">then</span> <span class="diff-html-added">the</span> <span class="diff-html-added">message</span> <span class="diff-html-added">is</span> <span class="diff-html-added">constructed</span> <span class="diff-html-added">by</span> <span class="diff-html-added">invoking</span> <span class="diff-html-added">the</span> <span class="diff-html-added">provided</span> <span class="diff-html-added">supplier</span> <span class="diff-html-added">function</span> <span class="diff-html-added">and</span> <span class="diff-html-added">forwarded</span> <span class="diff-html-added">to</span> <span class="diff-html-added">all</span> <span class="diff-html-added">the</span> <span class="diff-html-added">registered</span> <span class="diff-html-added">output</span> <span class="diff-html-added">Handler</span> <span class="diff-html-added">objects.</span>                               </p><p/>                      </div><dl> <dt> <span class="paramLabel"><span class="diff-html-added">Parameters:</span></span>   </dt><dd> <code><span class="diff-html-added">msgSupplier</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">A</span> <span class="diff-html-added">function,</span> <span class="diff-html-added">which</span> <span class="diff-html-added">when</span> <span class="diff-html-added">called,</span> <span class="diff-html-added">produces</span> <span class="diff-html-added">the</span> <span class="diff-html-added">desired</span> <span class="diff-html-added">log</span> <span class="diff-html-added">message</span>            </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Since:</span></span>   </dt><dd><span class="diff-html-added">1.8</span></dd>  </dl></li></ul> <a end_ctx_id="method:fine-java.util.function.Supplier-"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:finer-java.util.function.Supplier- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:finer-java.util.function.Supplier-"><span class="diff-html-added"/></a><a name="finer-java.util.function.Supplier-"/><ul class="blockList"><li class="blockList"><h4><span class="diff-html-added">finer</span></h4><pre><span class="diff-html-added">public void finer(</span><a href="../../../java/util/function/Supplier.html" title="interface in java.util.function"><span class="diff-html-added">Supplier</span></a><span class="diff-html-added">&lt;</span><a href="../../../java/lang/String.html" title="class in java.lang"><span class="diff-html-added">String</span></a><span class="diff-html-added">&gt; msgSupplier)</span></pre><div class="block"><span class="diff-html-added">Log</span> <span class="diff-html-added">a</span> <span class="diff-html-added">FINER</span> <span class="diff-html-added">message,</span> <span class="diff-html-added">which</span> <span class="diff-html-added">is</span> <span class="diff-html-added">only</span> <span class="diff-html-added">to</span> <span class="diff-html-added">be</span> <span class="diff-html-added">constructed</span> <span class="diff-html-added">if</span> <span class="diff-html-added">the</span> <span class="diff-html-added">logging</span> <span class="diff-html-added">level</span> <span class="diff-html-added">is</span> <span class="diff-html-added">such</span> <span class="diff-html-added">that</span> <span class="diff-html-added">the</span> <span class="diff-html-added">message</span> <span class="diff-html-added">will</span> <span class="diff-html-added">actually</span> <span class="diff-html-added">be</span> <span class="diff-html-added">logged.</span><p> <span class="diff-html-added">If</span> <span class="diff-html-added">the</span> <span class="diff-html-added">logger</span> <span class="diff-html-added">is</span> <span class="diff-html-added">currently</span> <span class="diff-html-added">enabled</span> <span class="diff-html-added">for</span> <span class="diff-html-added">the</span> <span class="diff-html-added">FINER</span> <span class="diff-html-added">message</span> <span class="diff-html-added">level</span> <span class="diff-html-added">then</span> <span class="diff-html-added">the</span> <span class="diff-html-added">message</span> <span class="diff-html-added">is</span> <span class="diff-html-added">constructed</span> <span class="diff-html-added">by</span> <span class="diff-html-added">invoking</span> <span class="diff-html-added">the</span> <span class="diff-html-added">provided</span> <span class="diff-html-added">supplier</span> <span class="diff-html-added">function</span> <span class="diff-html-added">and</span> <span class="diff-html-added">forwarded</span> <span class="diff-html-added">to</span> <span class="diff-html-added">all</span> <span class="diff-html-added">the</span> <span class="diff-html-added">registered</span> <span class="diff-html-added">output</span> <span class="diff-html-added">Handler</span> <span class="diff-html-added">objects.</span>                               </p><p/>                      </div><dl> <dt> <span class="paramLabel"><span class="diff-html-added">Parameters:</span></span>   </dt><dd> <code><span class="diff-html-added">msgSupplier</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">A</span> <span class="diff-html-added">function,</span> <span class="diff-html-added">which</span> <span class="diff-html-added">when</span> <span class="diff-html-added">called,</span> <span class="diff-html-added">produces</span> <span class="diff-html-added">the</span> <span class="diff-html-added">desired</span> <span class="diff-html-added">log</span> <span class="diff-html-added">message</span>            </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Since:</span></span>   </dt><dd><span class="diff-html-added">1.8</span></dd>  </dl></li></ul> <a end_ctx_id="method:finer-java.util.function.Supplier-"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:finest-java.util.function.Supplier- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:finest-java.util.function.Supplier-"><span class="diff-html-added"/></a><a name="finest-java.util.function.Supplier-"/><ul class="blockList"><li class="blockList"><h4><span class="diff-html-added">finest</span></h4><pre><span class="diff-html-added">public void finest(</span><a href="../../../java/util/function/Supplier.html" title="interface in java.util.function"><span class="diff-html-added">Supplier</span></a><span class="diff-html-added">&lt;</span><a href="../../../java/lang/String.html" title="class in java.lang"><span class="diff-html-added">String</span></a><span class="diff-html-added">&gt; msgSupplier)</span></pre><div class="block"><span class="diff-html-added">Log</span> <span class="diff-html-added">a</span> <span class="diff-html-added">FINEST</span> <span class="diff-html-added">message,</span> <span class="diff-html-added">which</span> <span class="diff-html-added">is</span> <span class="diff-html-added">only</span> <span class="diff-html-added">to</span> <span class="diff-html-added">be</span> <span class="diff-html-added">constructed</span> <span class="diff-html-added">if</span> <span class="diff-html-added">the</span> <span class="diff-html-added">logging</span> <span class="diff-html-added">level</span> <span class="diff-html-added">is</span> <span class="diff-html-added">such</span> <span class="diff-html-added">that</span> <span class="diff-html-added">the</span> <span class="diff-html-added">message</span> <span class="diff-html-added">will</span> <span class="diff-html-added">actually</span> <span class="diff-html-added">be</span> <span class="diff-html-added">logged.</span><p> <span class="diff-html-added">If</span> <span class="diff-html-added">the</span> <span class="diff-html-added">logger</span> <span class="diff-html-added">is</span> <span class="diff-html-added">currently</span> <span class="diff-html-added">enabled</span> <span class="diff-html-added">for</span> <span class="diff-html-added">the</span> <span class="diff-html-added">FINEST</span> <span class="diff-html-added">message</span> <span class="diff-html-added">level</span> <span class="diff-html-added">then</span> <span class="diff-html-added">the</span> <span class="diff-html-added">message</span> <span class="diff-html-added">is</span> <span class="diff-html-added">constructed</span> <span class="diff-html-added">by</span> <span class="diff-html-added">invoking</span> <span class="diff-html-added">the</span> <span class="diff-html-added">provided</span> <span class="diff-html-added">supplier</span> <span class="diff-html-added">function</span> <span class="diff-html-added">and</span> <span class="diff-html-added">forwarded</span> <span class="diff-html-added">to</span> <span class="diff-html-added">all</span> <span class="diff-html-added">the</span> <span class="diff-html-added">registered</span> <span class="diff-html-added">output</span> <span class="diff-html-added">Handler</span> <span class="diff-html-added">objects.</span>                               </p><p/>                      </div><dl> <dt> <span class="paramLabel"><span class="diff-html-added">Parameters:</span></span>   </dt><dd> <code><span class="diff-html-added">msgSupplier</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">A</span> <span class="diff-html-added">function,</span> <span class="diff-html-added">which</span> <span class="diff-html-added">when</span> <span class="diff-html-added">called,</span> <span class="diff-html-added">produces</span> <span class="diff-html-added">the</span> <span class="diff-html-added">desired</span> <span class="diff-html-added">log</span> <span class="diff-html-added">message</span>            </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Since:</span></span>   </dt><dd><span class="diff-html-added">1.8</span></dd>  </dl></li></ul> <a end_ctx_id="method:finest-java.util.function.Supplier-"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:setLevel-java.util.logging.Level- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:setLevel-java.util.logging.Level-"/><a name="setLevel-java.util.logging.Level-"/><ul class="blockList"><li class="blockList"><h4>setLevel</h4><pre>public void setLevel(<a href="../../../java/util/logging/Level.html" title="class in java.util.logging">Level</a> newLevel)
              throws <a href="../../../java/lang/SecurityException.html" title="class in java.lang">SecurityException</a></pre><div class="block">Set the log level specifying which message levels will be logged by this logger. Message levels lower than this value will be discarded. The level value Level.OFF can be used to turn off logging.<p> If the new level is null, it means that this node should inherit its level from its nearest ancestor with a specific (non-null) level value.                         </p>                                 </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>newLevel</code> - the new value for the log level (may be null)            </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/SecurityException.html" title="class in java.lang">SecurityException</a></code> - if a security manager exists, this logger is not anonymous, and the caller does not have LoggingPermission("control").                   </dd>  </dl></li></ul> <a end_ctx_id="method:setLevel-java.util.logging.Level-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getLevel-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getLevel--"/><a name="getLevel--"/><ul class="blockList"><li class="blockList"><h4>getLevel</h4><pre>public <a href="../../../java/util/logging/Level.html" title="class in java.util.logging">Level</a> getLevel()</pre><div class="block">Get the log Level that has been specified for this Logger. The result may be null, which means that this logger's effective level will be inherited from its parent.                            </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>this Logger's level  </dd> </dl></li></ul> <a end_ctx_id="method:getLevel--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:isLoggable-java.util.logging.Level- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:isLoggable-java.util.logging.Level-"/><a name="isLoggable-java.util.logging.Level-"/><ul class="blockList"><li class="blockList"><h4>isLoggable</h4><pre>public boolean isLoggable(<a href="../../../java/util/logging/Level.html" title="class in java.util.logging">Level</a> level)</pre><div class="block">Check if a message of the given level would actually be logged by this logger. This check is based on the Loggers effective level, which may be inherited from its parent.                              </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>level</code> - a message logging level      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>true if the given message level is currently being logged.         </dd>  </dl></li></ul> <a end_ctx_id="method:isLoggable-java.util.logging.Level-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getName-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getName--"/><a name="getName--"/><ul class="blockList"><li class="blockList"><h4>getName</h4><pre>public <a href="../../../java/lang/String.html" title="class in java.lang">String</a> getName()</pre><div class="block">Get the name for this logger.     </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>logger name. Will be null for anonymous Loggers.       </dd> </dl></li></ul> <a end_ctx_id="method:getName--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:addHandler-java.util.logging.Handler- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:addHandler-java.util.logging.Handler-"/><a name="addHandler-java.util.logging.Handler-"/><ul class="blockList"><li class="blockList"><h4>addHandler</h4><pre>public void addHandler(<a href="../../../java/util/logging/Handler.html" title="class in java.util.logging">Handler</a> handler)
                throws <a href="../../../java/lang/SecurityException.html" title="class in java.lang">SecurityException</a></pre><div class="block">Add a log Handler to receive logging messages.<p> By default, Loggers also send their output to their parent logger. Typically the root Logger is configured with a set of Handlers that essentially act as default handlers for all loggers.                               </p>       </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>handler</code> - a logging Handler     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/SecurityException.html" title="class in java.lang">SecurityException</a></code> - if a security manager exists, this logger is not anonymous, and the caller does not have LoggingPermission("control").                   </dd>  </dl></li></ul> <a end_ctx_id="method:addHandler-java.util.logging.Handler-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:removeHandler-java.util.logging.Handler- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:removeHandler-java.util.logging.Handler-"/><a name="removeHandler-java.util.logging.Handler-"/><ul class="blockList"><li class="blockList"><h4>removeHandler</h4><pre>public void removeHandler(<a href="../../../java/util/logging/Handler.html" title="class in java.util.logging">Handler</a> handler)
                   throws <a href="../../../java/lang/SecurityException.html" title="class in java.lang">SecurityException</a></pre><div class="block">Remove a log Handler.<p> Returns silently if the given Handler is not found or is null            </p>   </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>handler</code> - a logging Handler     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/SecurityException.html" title="class in java.lang">SecurityException</a></code> - if a security manager exists, this logger is not anonymous, and the caller does not have LoggingPermission("control").                   </dd>  </dl></li></ul> <a end_ctx_id="method:removeHandler-java.util.logging.Handler-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getHandlers-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getHandlers--"/><a name="getHandlers--"/><ul class="blockList"><li class="blockList"><h4>getHandlers</h4><pre>public <a href="../../../java/util/logging/Handler.html" title="class in java.util.logging">Handler</a>[] getHandlers()</pre><div class="block">Get the Handlers associated with this logger.<p/>      </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an array of all registered Handlers     </dd> </dl></li></ul> <a end_ctx_id="method:getHandlers--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:setUseParentHandlers-boolean- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:setUseParentHandlers-boolean-"/><a name="setUseParentHandlers-boolean-"/><ul class="blockList"><li class="blockList"><h4>setUseParentHandlers</h4><pre>public void setUseParentHandlers(boolean useParentHandlers)</pre><div class="block">Specify whether or not this logger should send its output to its parent Logger. This means that any LogRecords will also be written to the parent's Handlers, and potentially to its parent, recursively up the namespace.                                   </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>useParentHandlers</code> - true if output is to be sent to the logger's parent.             </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/SecurityException.html" title="class in java.lang">SecurityException</a></code> - if a security manager exists, this logger is not anonymous, and the caller does not have LoggingPermission("control").                   </dd>  </dl></li></ul> <a end_ctx_id="method:setUseParentHandlers-boolean-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getUseParentHandlers-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getUseParentHandlers--"/><a name="getUseParentHandlers--"/><ul class="blockList"><li class="blockList"><h4>getUseParentHandlers</h4><pre>public boolean getUseParentHandlers()</pre><div class="block">Discover whether or not this logger is sending its output to its parent logger.             </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>true if output is to be sent to the logger's parent          </dd> </dl></li></ul> <a end_ctx_id="method:getUseParentHandlers--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:setResourceBundle-java.util.ResourceBundle- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:setResourceBundle-java.util.ResourceBundle-"/><a name="setResourceBundle-java.util.ResourceBundle-"/><ul class="blockList"><li class="blockList"><h4>setResourceBundle</h4><pre>public void setResourceBundle(<a href="../../../java/util/ResourceBundle.html" title="class in java.util">ResourceBundle</a> bundle)</pre><div class="block">Sets a resource bundle on this logger. All messages will be logged using the given resource bundle for its specific <a href="../../../java/util/ResourceBundle.html#getLocale--">locale</a>.                    </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>bundle</code> - The resource bundle that this logger shall use.          </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the given bundle is <code>null</code>.        </dd><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if the given bundle doesn't have a <a href="../../../java/util/ResourceBundle.html#getBaseBundleName--">base name </a>, or if this logger already has a resource bundle set but the given bundle has a different base name.                             </dd><dd> <code><a href="../../../java/lang/SecurityException.html" title="class in java.lang">SecurityException</a></code> - if a security manager exists, this logger is not anonymous, and the caller does not have LoggingPermission("control").                   </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.8</dd>   </dl></li></ul> <a end_ctx_id="method:setResourceBundle-java.util.ResourceBundle-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getParent-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getParent--"/><a name="getParent--"/><ul class="blockList"><li class="blockList"><h4>getParent</h4><pre>public <a href="../../../java/util/logging/Logger.html" title="class in java.util.logging">Logger</a> getParent()</pre><div class="block">Return the parent for this Logger.<p> This method returns the nearest extant parent in the namespace. Thus if a Logger is called "a.b.c.d", and a Logger called "a.b" has been created but no logger "a.b.c" exists, then a call of getParent on the Logger "a.b.c.d" will return the Logger "a.b".                                            </p><p> The result will be null if it is called on the root Logger in the namespace.                </p>     </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>nearest existing parent Logger   </dd> </dl></li></ul> <a end_ctx_id="method:getParent--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:setParent-java.util.logging.Logger- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:setParent-java.util.logging.Logger-"/><a name="setParent-java.util.logging.Logger-"/><ul class="blockListLast"><li class="blockList"><h4>setParent</h4><pre>public void setParent(<a href="../../../java/util/logging/Logger.html" title="class in java.util.logging">Logger</a> parent)</pre><div class="block">Set the parent for this Logger. This method is used by the LogManager to update a Logger when the namespace changes.<p> It should not be called from application code.        </p><p/>                    </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>parent</code> - the new parent logger      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/SecurityException.html" title="class in java.lang">SecurityException</a></code> - if a security manager exists and if the caller does not have LoggingPermission("control").               </dd>  </dl></li></ul> <a end_ctx_id="method:setParent-java.util.logging.Logger-"/>  </td></tr></table></td></tr></table></diff></diffreport>