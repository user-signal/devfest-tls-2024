<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:Calendar.Builder [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:Calendar.Builder"/><ul class="blockList"><li class="blockList"><dl> <dt>Enclosing class: </dt><dd> <a href="../../java/util/Calendar.html" title="class in java.util">Calendar</a> </dd> </dl> <hr/> <br/><pre>public static class <span class="typeNameLabel">Calendar.Builder</span>
extends <a href="../../java/lang/Object.html" title="class in java.lang">Object</a></pre><div class="block"> <code>Calendar.Builder</code> is used for creating a <code>Calendar</code> from various date-time parameters.<p>There are two ways to set a <code>Calendar</code> to a date-time value. One is to set the instant parameter to a millisecond offset from the <a href="Calendar.html#Epoch">Epoch</a>. The other is to set individual field parameters, such as <a href="../../java/util/Calendar.html#YEAR"><code>YEAR</code></a>, to their desired values. These two ways can't be mixed. Trying to set both the instant and individual fields will cause an <a href="../../java/lang/IllegalStateException.html" title="class in java.lang"><code>IllegalStateException</code></a> to be thrown. However, it is permitted to override previous values of the instant or field parameters.                                                                            </p><p>If no enough field parameters are given for determining date and/or time, calendar specific default values are used when building a <code>Calendar</code>. For example, if the <a href="../../java/util/Calendar.html#YEAR"><code>YEAR</code></a> value isn't given for the Gregorian calendar, 1970 will be used. If there are any conflicts among field parameters, the <a href="Calendar.html#resolution"> resolution rules  </a> are applied. Therefore, the order of field setting matters.                                                        </p><p>In addition to the date-time parameters, the <a href="../../java/util/Calendar.Builder.html#setLocale-java.util.Locale-">locale</a>, <a href="../../java/util/Calendar.Builder.html#setTimeZone-java.util.TimeZone-">time zone </a>, <a href="../../java/util/Calendar.Builder.html#setWeekDefinition-int-int-">week definition </a>, and <a href="../../java/util/Calendar.Builder.html#setLenient-boolean-">leniency mode </a> parameters can be set.               </p><p> <b>Examples</b> </p><p>The following are sample usages. Sample code assumes that the <code>Calendar</code> constants are statically imported.              </p><p>The following code produces a <code>Calendar</code> with date 2012-12-31 (Gregorian) because Monday is the first day of a week with the <a href="GregorianCalendar.html#iso8601_compatible_setting"> ISO 8601 compatible week parameters     </a>.<pre>
   Calendar cal = new Calendar.Builder().setCalendarType("iso8601")
                        .setWeekDate(2013, 1, MONDAY).build();</pre>                     </p><p>The following code produces a Japanese <code>Calendar</code> with date 1989-01-08 (Gregorian), assuming that the default <a href="../../java/util/Calendar.html#ERA"><code>ERA</code></a> is <em>Heisei</em> that started on that day.<pre>
   Calendar cal = new Calendar.Builder().setCalendarType("japanese")
                        .setFields(YEAR, 1, DAY_OF_YEAR, 1).build();</pre>                      </p>           </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.8</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Calendar.html#getInstance-java.util.TimeZone-java.util.Locale-"><code>Calendar.getInstance(TimeZone, Locale) </code></a>, <a href="../../java/util/Calendar.html#fields"><code>Calendar.fields</code></a>  </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:Calendar.Builder"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:Builder-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:Builder--"/><a name="Builder--"/><ul class="blockListLast"><li class="blockList"><h4>Builder</h4><pre>public Builder()</pre><div class="block">Constructs a <code>Calendar.Builder</code>.  </div></li></ul> <a end_ctx_id="constructor:Builder--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:setInstant-long- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:setInstant-long-"/><a name="setInstant-long-"/><ul class="blockList"><li class="blockList"><h4>setInstant</h4><pre>public <a href="../../java/util/Calendar.Builder.html" title="class in java.util">Calendar.Builder</a> setInstant(long instant)</pre><div class="block">Sets the instant parameter to the given <code>instant</code> value that is a millisecond offset from <a href="Calendar.html#Epoch">the Epoch </a>.               </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>instant</code> - a millisecond offset from the Epoch        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>this <code>Calendar.Builder</code> </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IllegalStateException.html" title="class in java.lang">IllegalStateException</a></code> - if any of the field parameters have already been set            </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Calendar.html#setTime-java.util.Date-"><code>Calendar.setTime(Date)</code></a>, <a href="../../java/util/Calendar.html#setTimeInMillis-long-"><code>Calendar.setTimeInMillis(long)</code></a>, <a href="../../java/util/Calendar.html#time"><code>Calendar.time</code></a>   </dd>    </dl></li></ul> <a end_ctx_id="method:setInstant-long-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:setInstant-java.util.Date- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:setInstant-java.util.Date-"/><a name="setInstant-java.util.Date-"/><ul class="blockList"><li class="blockList"><h4>setInstant</h4><pre>public <a href="../../java/util/Calendar.Builder.html" title="class in java.util">Calendar.Builder</a> setInstant(<a href="../../java/util/Date.html" title="class in java.util">Date</a> instant)</pre><div class="block">Sets the instant parameter to the <code>instant</code> value given by a <a href="../../java/util/Date.html" title="class in java.util"><code>Date</code></a>. This method is equivalent to a call to <a href="../../java/util/Calendar.Builder.html#setInstant-long-"><code>setInstant(instant.getTime())</code></a>.                    </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>instant</code> - a <code>Date</code> representing a millisecond offset from the Epoch           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>this <code>Calendar.Builder</code> </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if <code>instant</code> is <code>null</code>      </dd><dd> <code><a href="../../java/lang/IllegalStateException.html" title="class in java.lang">IllegalStateException</a></code> - if any of the field parameters have already been set            </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Calendar.html#setTime-java.util.Date-"><code>Calendar.setTime(Date)</code></a>, <a href="../../java/util/Calendar.html#setTimeInMillis-long-"><code>Calendar.setTimeInMillis(long)</code></a>, <a href="../../java/util/Calendar.html#time"><code>Calendar.time</code></a>   </dd>    </dl></li></ul> <a end_ctx_id="method:setInstant-java.util.Date-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:set-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:set-int-int-"/><a name="set-int-int-"/><ul class="blockList"><li class="blockList"><h4>set</h4><pre>public <a href="../../java/util/Calendar.Builder.html" title="class in java.util">Calendar.Builder</a> set(int field,
                            int value)</pre><div class="block">Sets the <code>field</code> parameter to the given <code>value</code>. <code>field</code> is an index to the <a href="../../java/util/Calendar.html#fields"><code>Calendar.fields</code></a>, such as <a href="../../java/util/Calendar.html#DAY_OF_MONTH"><code>DAY_OF_MONTH</code></a>. Field value validation is not performed in this method. Any out of range values are either normalized in lenient mode or detected as an invalid value in non-lenient mode when building a <code>Calendar</code>.                                                  </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>field</code> - an index to the <code>Calendar</code> fields        </dd><dd> <code>value</code> - the field value     </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>this <code>Calendar.Builder</code> </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if <code>field</code> is invalid      </dd><dd> <code><a href="../../java/lang/IllegalStateException.html" title="class in java.lang">IllegalStateException</a></code> - if the instant value has already been set, or if fields have been set too many (approximately <a href="../../java/lang/Integer.html#MAX_VALUE"><code>Integer.MAX_VALUE</code></a>) times.                     </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Calendar.html#set-int-int-"><code>Calendar.set(int, int) </code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:set-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:setFields-int...- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:setFields-int...-"/><a name="setFields-int...-"/><ul class="blockList"><li class="blockList"><h4>setFields</h4><pre>public <a href="../../java/util/Calendar.Builder.html" title="class in java.util">Calendar.Builder</a> setFields(int... fieldValuePairs)</pre><div class="block">Sets field parameters to their values given by <code>fieldValuePairs</code> that are pairs of a field and its value. For example,<pre>
   setFeilds(Calendar.YEAR, 2013,
             Calendar.MONTH, Calendar.DECEMBER,
             Calendar.DAY_OF_MONTH, 23);</pre> is equivalent to the sequence of the following <a href="../../java/util/Calendar.Builder.html#set-int-int-"><code>set</code></a> calls:<pre>
   set(Calendar.YEAR, 2013)
   .set(Calendar.MONTH, Calendar.DECEMBER)
   .set(Calendar.DAY_OF_MONTH, 23);</pre>                             </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>fieldValuePairs</code> - field-value pairs    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>this <code>Calendar.Builder</code> </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if <code>fieldValuePairs</code> is <code>null</code>      </dd><dd> <code><a href="../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if any of fields are invalid, or if <code>fieldValuePairs.length</code> is an odd number.               </dd><dd> <code><a href="../../java/lang/IllegalStateException.html" title="class in java.lang">IllegalStateException</a></code> - if the instant value has been set, or if fields have been set too many (approximately <a href="../../java/lang/Integer.html#MAX_VALUE"><code>Integer.MAX_VALUE</code></a>) times.                    </dd>   </dl></li></ul> <a end_ctx_id="method:setFields-int...-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:setDate-int-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:setDate-int-int-int-"/><a name="setDate-int-int-int-"/><ul class="blockList"><li class="blockList"><h4>setDate</h4><pre>public <a href="../../java/util/Calendar.Builder.html" title="class in java.util">Calendar.Builder</a> setDate(int year,
                                int month,
                                int dayOfMonth)</pre><div class="block">Sets the date field parameters to the values given by <code>year</code>, <code>month</code>, and <code>dayOfMonth</code>. This method is equivalent to a call to:<pre>
   setFields(Calendar.YEAR, year,
             Calendar.MONTH, month,
             Calendar.DAY_OF_MONTH, dayOfMonth);</pre>                     </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>year</code> - the <a href="../../java/util/Calendar.html#YEAR"><code>YEAR</code></a> value     </dd><dd> <code>month</code> - the <a href="../../java/util/Calendar.html#MONTH"><code>MONTH</code></a> value (the month numbering is <em>0-based</em>).          </dd><dd> <code>dayOfMonth</code> - the <a href="../../java/util/Calendar.html#DAY_OF_MONTH"><code>DAY_OF_MONTH</code></a> value     </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>this <code>Calendar.Builder</code> </dd>  </dl></li></ul> <a end_ctx_id="method:setDate-int-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:setTimeOfDay-int-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:setTimeOfDay-int-int-int-"/><a name="setTimeOfDay-int-int-int-"/><ul class="blockList"><li class="blockList"><h4>setTimeOfDay</h4><pre>public <a href="../../java/util/Calendar.Builder.html" title="class in java.util">Calendar.Builder</a> setTimeOfDay(int hourOfDay,
                                     int minute,
                                     int second)</pre><div class="block">Sets the time of day field parameters to the values given by <code>hourOfDay</code>, <code>minute</code>, and <code>second</code>. This method is equivalent to a call to:<pre>
   setTimeOfDay(hourOfDay, minute, second, 0);</pre>                       </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>hourOfDay</code> - the <a href="../../java/util/Calendar.html#HOUR_OF_DAY"><code>HOUR_OF_DAY</code></a> value (24-hour clock)       </dd><dd> <code>minute</code> - the <a href="../../java/util/Calendar.html#MINUTE"><code>MINUTE</code></a> value     </dd><dd> <code>second</code> - the <a href="../../java/util/Calendar.html#SECOND"><code>SECOND</code></a> value     </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>this <code>Calendar.Builder</code> </dd>  </dl></li></ul> <a end_ctx_id="method:setTimeOfDay-int-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:setTimeOfDay-int-int-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:setTimeOfDay-int-int-int-int-"/><a name="setTimeOfDay-int-int-int-int-"/><ul class="blockList"><li class="blockList"><h4>setTimeOfDay</h4><pre>public <a href="../../java/util/Calendar.Builder.html" title="class in java.util">Calendar.Builder</a> setTimeOfDay(int hourOfDay,
                                     int minute,
                                     int second,
                                     int millis)</pre><div class="block">Sets the time of day field parameters to the values given by <code>hourOfDay</code>, <code>minute</code>, <code>second</code>, and <code>millis</code>. This method is equivalent to a call to:<pre>
   setFields(Calendar.HOUR_OF_DAY, hourOfDay,
             Calendar.MINUTE, minute,
             Calendar.SECOND, second,
             Calendar.MILLISECOND, millis);</pre>                        </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>hourOfDay</code> - the <a href="../../java/util/Calendar.html#HOUR_OF_DAY"><code>HOUR_OF_DAY</code></a> value (24-hour clock)       </dd><dd> <code>minute</code> - the <a href="../../java/util/Calendar.html#MINUTE"><code>MINUTE</code></a> value     </dd><dd> <code>second</code> - the <a href="../../java/util/Calendar.html#SECOND"><code>SECOND</code></a> value     </dd><dd> <code>millis</code> - the <a href="../../java/util/Calendar.html#MILLISECOND"><code>MILLISECOND</code></a> value     </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>this <code>Calendar.Builder</code> </dd>  </dl></li></ul> <a end_ctx_id="method:setTimeOfDay-int-int-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:setWeekDate-int-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:setWeekDate-int-int-int-"/><a name="setWeekDate-int-int-int-"/><ul class="blockList"><li class="blockList"><h4>setWeekDate</h4><pre>public <a href="../../java/util/Calendar.Builder.html" title="class in java.util">Calendar.Builder</a> setWeekDate(int weekYear,
                                    int weekOfYear,
                                    int dayOfWeek)</pre><div class="block">Sets the week-based date parameters to the values with the given date specifiers - week year, week of year, and day of week.<p>If the specified calendar doesn't support week dates, the <a href="../../java/util/Calendar.Builder.html#build--"><code>build</code></a> method will throw an <a href="../../java/lang/IllegalArgumentException.html" title="class in java.lang"><code>IllegalArgumentException</code></a>.              </p>                      </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>weekYear</code> - the week year     </dd><dd> <code>weekOfYear</code> - the week number based on <code>weekYear</code>        </dd><dd> <code>dayOfWeek</code> - the day of week value: one of the constants for the <a href="../../java/util/Calendar.html#DAY_OF_WEEK"><code>DAY_OF_WEEK</code></a> field: <a href="../../java/util/Calendar.html#SUNDAY"><code>SUNDAY</code></a>, ..., <a href="../../java/util/Calendar.html#SATURDAY"><code>SATURDAY</code></a>.                  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>this <code>Calendar.Builder</code> </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Calendar.html#setWeekDate-int-int-int-"><code>Calendar.setWeekDate(int, int, int)  </code></a>, <a href="../../java/util/Calendar.html#isWeekDateSupported--"><code>Calendar.isWeekDateSupported()</code></a>  </dd>   </dl></li></ul> <a end_ctx_id="method:setWeekDate-int-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:setTimeZone-java.util.TimeZone- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:setTimeZone-java.util.TimeZone-"/><a name="setTimeZone-java.util.TimeZone-"/><ul class="blockList"><li class="blockList"><h4>setTimeZone</h4><pre>public <a href="../../java/util/Calendar.Builder.html" title="class in java.util">Calendar.Builder</a> setTimeZone(<a href="../../java/util/TimeZone.html" title="class in java.util">TimeZone</a> zone)</pre><div class="block">Sets the time zone parameter to the given <code>zone</code>. If no time zone parameter is given to this <code>Caledar.Builder</code>, the <a href="../../java/util/TimeZone.html#getDefault--">default <code>TimeZone</code> </a> will be used in the <a href="../../java/util/Calendar.Builder.html#build--"><code>build</code></a> method.                           </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>zone</code> - the <a href="../../java/util/TimeZone.html" title="class in java.util"><code>TimeZone</code></a>    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>this <code>Calendar.Builder</code> </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if <code>zone</code> is <code>null</code>      </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Calendar.html#setTimeZone-java.util.TimeZone-"><code>Calendar.setTimeZone(TimeZone)</code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:setTimeZone-java.util.TimeZone-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:setLenient-boolean- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:setLenient-boolean-"/><a name="setLenient-boolean-"/><ul class="blockList"><li class="blockList"><h4>setLenient</h4><pre>public <a href="../../java/util/Calendar.Builder.html" title="class in java.util">Calendar.Builder</a> setLenient(boolean lenient)</pre><div class="block">Sets the lenient mode parameter to the value given by <code>lenient</code>. If no lenient parameter is given to this <code>Calendar.Builder</code>, lenient mode will be used in the <a href="../../java/util/Calendar.Builder.html#build--"><code>build</code></a> method.                            </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>lenient</code> - <code>true</code> for lenient mode; <code>false</code> for non-lenient mode          </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>this <code>Calendar.Builder</code> </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Calendar.html#setLenient-boolean-"><code>Calendar.setLenient(boolean)</code></a> </dd>   </dl></li></ul> <a end_ctx_id="method:setLenient-boolean-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:setCalendarType-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:setCalendarType-java.lang.String-"/><a name="setCalendarType-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>setCalendarType</h4><pre>public <a href="../../java/util/Calendar.Builder.html" title="class in java.util">Calendar.Builder</a> setCalendarType(<a href="../../java/lang/String.html" title="class in java.lang">String</a> type)</pre><div class="block">Sets the calendar type parameter to the given <code>type</code>. The calendar type given by this method has precedence over any explicit or implicit calendar type given by the <a href="../../java/util/Calendar.Builder.html#setLocale-java.util.Locale-">locale</a>.<p>In addition to the available calendar types returned by the <a href="../../java/util/Calendar.html#getAvailableCalendarTypes--"><code>Calendar.getAvailableCalendarTypes</code></a> method, <code>"gregorian"</code> and <code>"iso8601"</code> as aliases of <code>"gregory"</code> can be used with this method.                        </p>                            </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>type</code> - the calendar type     </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>this <code>Calendar.Builder</code> </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if <code>type</code> is <code>null</code>      </dd><dd> <code><a href="../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if <code>type</code> is unknown      </dd><dd> <code><a href="../../java/lang/IllegalStateException.html" title="class in java.lang">IllegalStateException</a></code> - if another calendar type has already been set          </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Calendar.html#getCalendarType--"><code>Calendar.getCalendarType()</code></a>, <a href="../../java/util/Calendar.html#getAvailableCalendarTypes--"><code>Calendar.getAvailableCalendarTypes()</code></a>  </dd>    </dl></li></ul> <a end_ctx_id="method:setCalendarType-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:setLocale-java.util.Locale- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:setLocale-java.util.Locale-"/><a name="setLocale-java.util.Locale-"/><ul class="blockList"><li class="blockList"><h4>setLocale</h4><pre>public <a href="../../java/util/Calendar.Builder.html" title="class in java.util">Calendar.Builder</a> setLocale(<a href="../../java/util/Locale.html" title="class in java.util">Locale</a> locale)</pre><div class="block">Sets the locale parameter to the given <code>locale</code>. If no locale is given to this <code>Calendar.Builder</code>, the <a href="../../java/util/Locale.html#getDefault-java.util.Locale.Category-">default <code>Locale</code> </a> for <a href="../../java/util/Locale.Category.html#FORMAT"><code>Locale.Category.FORMAT</code></a> will be used.<p>If no calendar type is explicitly given by a call to the <a href="../../java/util/Calendar.Builder.html#setCalendarType-java.lang.String-"><code>setCalendarType</code></a> method, the <code>Locale</code> value is used to determine what type of <code>Calendar</code> to be built.                           </p><p>If no week definition parameters are explicitly given by a call to the <a href="../../java/util/Calendar.Builder.html#setWeekDefinition-int-int-"><code>setWeekDefinition</code></a> method, the <code>Locale</code>'s default values are used.                    </p>                      </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>locale</code> - the <a href="../../java/util/Locale.html" title="class in java.util"><code>Locale</code></a>    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>this <code>Calendar.Builder</code> </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if <code>locale</code> is <code>null</code>      </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Calendar.html#getInstance-java.util.Locale-"><code>Calendar.getInstance(Locale)</code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:setLocale-java.util.Locale-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:setWeekDefinition-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:setWeekDefinition-int-int-"/><a name="setWeekDefinition-int-int-"/><ul class="blockList"><li class="blockList"><h4>setWeekDefinition</h4><pre>public <a href="../../java/util/Calendar.Builder.html" title="class in java.util">Calendar.Builder</a> setWeekDefinition(int firstDayOfWeek,
                                          int minimalDaysInFirstWeek)</pre><div class="block">Sets the week definition parameters to the values given by <code>firstDayOfWeek</code> and <code>minimalDaysInFirstWeek</code> that are used to determine the <a href="Calendar.html#First_Week">first week </a> of a year. The parameters given by this method have precedence over the default values given by the <a href="../../java/util/Calendar.Builder.html#setLocale-java.util.Locale-">locale</a>.                                      </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>firstDayOfWeek</code> - the first day of a week; one of <a href="../../java/util/Calendar.html#SUNDAY"><code>Calendar.SUNDAY</code></a> to <a href="../../java/util/Calendar.html#SATURDAY"><code>Calendar.SATURDAY</code></a>             </dd><dd> <code>minimalDaysInFirstWeek</code> - the minimal number of days in the first week (1..7)            </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>this <code>Calendar.Builder</code> </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if <code>firstDayOfWeek</code> or <code>minimalDaysInFirstWeek</code> is invalid        </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Calendar.html#getFirstDayOfWeek--"><code>Calendar.getFirstDayOfWeek()</code></a>, <a href="../../java/util/Calendar.html#getMinimalDaysInFirstWeek--"><code>Calendar.getMinimalDaysInFirstWeek()</code></a>  </dd>    </dl></li></ul> <a end_ctx_id="method:setWeekDefinition-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:build-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:build--"/><a name="build--"/><ul class="blockListLast"><li class="blockList"><h4>build</h4><pre>public <a href="../../java/util/Calendar.html" title="class in java.util">Calendar</a> build()</pre><div class="block">Returns a <code>Calendar</code> built from the parameters set by the setter methods. The calendar type given by the <a href="../../java/util/Calendar.Builder.html#setCalendarType-java.lang.String-"><code>setCalendarType</code></a> method or the <a href="../../java/util/Calendar.Builder.html#setLocale-java.util.Locale-">locale</a> is used to determine what <code>Calendar</code> to be created. If no explicit calendar type is given, the locale's default calendar is created.<p>If the calendar type is <code>"iso8601"</code>, the <a href="../../java/util/GregorianCalendar.html#setGregorianChange-java.util.Date-">Gregorian change date  </a> of a <a href="../../java/util/GregorianCalendar.html" title="class in java.util"><code>GregorianCalendar</code></a> is set to <code>Date(Long.MIN_VALUE)</code> to be the <em>proleptic</em> Gregorian calendar. Its week definition parameters are also set to be <a href="GregorianCalendar.html#iso8601_compatible_setting">compatible with the ISO 8601 standard     </a>. Note that the <a href="../../java/util/GregorianCalendar.html#getCalendarType--"><code>getCalendarType</code></a> method of a <code>GregorianCalendar</code> created with <code>"iso8601"</code> returns <code>"gregory"</code>.                                           </p><p>The default values are used for locale and time zone if these parameters haven't been given explicitly.                </p><p>Any out of range field values are either normalized in lenient mode or detected as an invalid value in non-lenient mode.                    </p>                                            </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a <code>Calendar</code> built with parameters of this <code>Calendar.Builder</code>       </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if the calendar type is unknown, or if any invalid field values are given in non-lenient mode, or if a week date is given for the calendar type that doesn't support week dates.                                   </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Calendar.html#getInstance-java.util.TimeZone-java.util.Locale-"><code>Calendar.getInstance(TimeZone, Locale) </code></a>, <a href="../../java/util/Locale.html#getDefault-java.util.Locale.Category-"><code>Locale.getDefault(Locale.Category)</code></a>, <a href="../../java/util/TimeZone.html#getDefault--"><code>TimeZone.getDefault()</code></a>   </dd>   </dl></li></ul> <a end_ctx_id="method:build--"/>  </td></tr></table></td></tr></table></diff></diffreport>