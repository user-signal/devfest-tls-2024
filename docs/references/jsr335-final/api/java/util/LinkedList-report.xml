<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:LinkedList [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:LinkedList"/><ul class="blockList"><li class="blockList"><dl> <dt> <span class="paramLabel">Type Parameters: </span>   </dt><dd> <code>E</code> - the type of elements held in this collection          </dd> </dl><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>, <a href="../../java/lang/Cloneable.html" title="interface in java.lang">Cloneable</a>, <a href="../../java/lang/Iterable.html" title="interface in java.lang">Iterable</a>&lt;E&gt;, <a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;E&gt;, <a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;E&gt;, <a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;E&gt;, <a href="../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;E&gt;       </dd> </dl> <hr/> <br/><pre>public class <span class="typeNameLabel">LinkedList&lt;E&gt;</span>
extends <a href="../../java/util/AbstractSequentialList.html" title="class in java.util">AbstractSequentialList</a>&lt;E&gt;
implements <a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;E&gt;, <a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;E&gt;, <a href="../../java/lang/Cloneable.html" title="interface in java.lang">Cloneable</a>, <a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a></pre><div class="block">Doubly-linked list implementation of the <code>List</code> and <code>Deque</code> interfaces. Implements all optional list operations, and permits all elements (including <code>null</code>).<p>All of the operations perform as could be expected for a doubly-linked list. Operations that index into the list will traverse the list from the beginning or the end, whichever is closer to the specified index.                                   </p><p> <strong>Note that this implementation is not synchronized.      </strong> If multiple threads access a linked list concurrently, and at least one of the threads modifies the list structurally, it <i>must</i> be synchronized externally. (A structural modification is any operation that adds or deletes one or more elements; merely setting the value of an element is not a structural modification.) This is typically accomplished by synchronizing on some object that naturally encapsulates the list. If no such object exists, the list should be "wrapped" using the <a href="../../java/util/Collections.html#synchronizedList-java.util.List-"><code>Collections.synchronizedList</code></a> method. This is best done at creation time, to prevent accidental unsynchronized access to the list:<pre>
   List list = Collections.synchronizedList(new LinkedList(...));</pre>                                                                                              </p><p>The iterators returned by this class's <code>iterator</code> and <code>listIterator</code> methods are <i>fail-fast</i>: if the list is structurally modified at any time after the iterator is created, in any way except through the Iterator's own <code>remove</code> or <code>add</code> methods, the iterator will throw a <a href="../../java/util/ConcurrentModificationException.html" title="class in java.util"><code>ConcurrentModificationException</code></a>. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.                                                                     </p><p>Note that the fail-fast behavior of an iterator cannot be guaranteed as it is, generally speaking, impossible to make any hard guarantees in the presence of unsynchronized concurrent modification. Fail-fast iterators throw <code>ConcurrentModificationException</code> on a best-effort basis. Therefore, it would be wrong to write a program that depended on this exception for its correctness: <i>the fail-fast behavior of iterators should be used only to detect bugs.           </i>                                                      </p><p>This class is a member of the <a href="http://download.oracle.com/javase/7/docs/technotes/guides/collections/index.html"> Java Collections Framework   </a>.       </p>                   </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/List.html" title="interface in java.util"><code>List</code></a>, <a href="../../java/util/ArrayList.html" title="class in java.util"><code>ArrayList</code></a>, <a href="../../serialized-form.html#java.util.LinkedList">Serialized Form </a>   </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:LinkedList"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:LinkedList-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:LinkedList--"/><a name="LinkedList--"/><ul class="blockList"><li class="blockList"><h4>LinkedList</h4><pre>public LinkedList()</pre><div class="block">Constructs an empty list.   </div></li></ul> <a end_ctx_id="constructor:LinkedList--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:LinkedList-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:LinkedList-java.util.Collection-"/><a name="LinkedList-java.util.Collection-"/><ul class="blockListLast"><li class="blockList"><h4>LinkedList</h4><pre>public LinkedList(<a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;? extends <a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt; c)</pre><div class="block">Constructs a list containing the elements of the specified collection, in the order they are returned by the collection's iterator.                   </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - the collection whose elements are to be placed into this list             </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified collection is null        </dd>  </dl></li></ul> <a end_ctx_id="constructor:LinkedList-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getFirst-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getFirst--"/><a name="getFirst--"/><ul class="blockList"><li class="blockList"><h4>getFirst</h4><pre>public <a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a> getFirst()</pre><div class="block">Returns the first element in this list.      </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#getFirst--">getFirst</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the first element in this list     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/util/NoSuchElementException.html" title="class in java.util">NoSuchElementException</a></code> - if this list is empty       </dd>   </dl></li></ul> <a end_ctx_id="method:getFirst--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getLast-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getLast--"/><a name="getLast--"/><ul class="blockList"><li class="blockList"><h4>getLast</h4><pre>public <a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a> getLast()</pre><div class="block">Returns the last element in this list.      </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#getLast--">getLast</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the last element in this list     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/util/NoSuchElementException.html" title="class in java.util">NoSuchElementException</a></code> - if this list is empty       </dd>   </dl></li></ul> <a end_ctx_id="method:getLast--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:removeFirst-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:removeFirst--"/><a name="removeFirst--"/><ul class="blockList"><li class="blockList"><h4>removeFirst</h4><pre>public <a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a> removeFirst()</pre><div class="block">Removes and returns the first element from this list.        </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#removeFirst--">removeFirst</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the first element from this list     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/util/NoSuchElementException.html" title="class in java.util">NoSuchElementException</a></code> - if this list is empty       </dd>   </dl></li></ul> <a end_ctx_id="method:removeFirst--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:removeLast-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:removeLast--"/><a name="removeLast--"/><ul class="blockList"><li class="blockList"><h4>removeLast</h4><pre>public <a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a> removeLast()</pre><div class="block">Removes and returns the last element from this list.        </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#removeLast--">removeLast</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the last element from this list     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/util/NoSuchElementException.html" title="class in java.util">NoSuchElementException</a></code> - if this list is empty       </dd>   </dl></li></ul> <a name="addFirst-java.lang.Object-"/><a end_ctx_id="method:removeLast--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:addFirst-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:addFirst-E-"/><a name="addFirst-E-"/><ul class="blockList"><li class="blockList"><h4>addFirst</h4><pre>public void addFirst(<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a> e)</pre><div class="block">Inserts the specified element at the beginning of this list.         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#addFirst-E-">addFirst</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd>  </dl></li></ul> <a name="addLast-java.lang.Object-"/><a end_ctx_id="method:addFirst-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:addLast-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:addLast-E-"/><a name="addLast-E-"/><ul class="blockList"><li class="blockList"><h4>addLast</h4><pre>public void addLast(<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a> e)</pre><div class="block">Appends the specified element to the end of this list.<p>This method is equivalent to <a href="../../java/util/LinkedList.html#add-E-"><code>add(E)</code></a>.     </p>         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#addLast-E-">addLast</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd>  </dl></li></ul> <a end_ctx_id="method:addLast-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:contains-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:contains-java.lang.Object-"/><a name="contains-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>contains</h4><pre>public boolean contains(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Returns <code>true</code> if this list contains the specified element. More formally, returns <code>true</code> if and only if this list contains at least one element <code>e</code> such that <tt>(o==null ? e==null : o.equals(e))</tt>.                           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#contains-java.lang.Object-">contains</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#contains-java.lang.Object-">contains</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#contains-java.lang.Object-">contains</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#contains-java.lang.Object-">contains</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element whose presence in this list is to be tested            </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this list contains the specified element        </dd>      </dl></li></ul> <a end_ctx_id="method:contains-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:size-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:size--"/><a name="size--"/><ul class="blockList"><li class="blockList"><h4>size</h4><pre>public int size()</pre><div class="block">Returns the number of elements in this list.       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#size--">size</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#size--">size</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#size--">size</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#size--">size</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the number of elements in this list      </dd>     </dl></li></ul> <a name="add-java.lang.Object-"/><a end_ctx_id="method:size--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:add-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:add-E-"/><a name="add-E-"/><ul class="blockList"><li class="blockList"><h4>add</h4><pre>public boolean add(<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a> e)</pre><div class="block">Appends the specified element to the end of this list.<p>This method is equivalent to <a href="../../java/util/LinkedList.html#addLast-E-"><code>addLast(E)</code></a>.     </p>         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#add-E-">add</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#add-E-">add</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#add-E-">add</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Queue.html#add-E-">add</a></code> in interface <code><a href="../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractList.html#add-E-">add</a></code> in class <code><a href="../../java/util/AbstractList.html" title="class in java.util">AbstractList</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - element to be appended to this list         </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> (as specified by <a href="../../java/util/Collection.html#add-E-"><code>Collection.add(E)</code></a>)     </dd>       </dl></li></ul> <a end_ctx_id="method:add-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:remove-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:remove-java.lang.Object-"/><a name="remove-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>remove</h4><pre>public boolean remove(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Removes the first occurrence of the specified element from this list, if it is present. If this list does not contain the element, it is unchanged. More formally, removes the element with the lowest index <code>i</code> such that <tt>(o==null ? get(i)==null : o.equals(get(i)))</tt> (if such an element exists). Returns <code>true</code> if this list contained the specified element (or equivalently, if this list changed as a result of the call).                                                                </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#remove-java.lang.Object-">remove</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#remove-java.lang.Object-">remove</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#remove-java.lang.Object-">remove</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#remove-java.lang.Object-">remove</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element to be removed from this list, if present           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this list contained the specified element        </dd>      </dl></li></ul> <a end_ctx_id="method:remove-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:addAll-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:addAll-java.util.Collection-"/><a name="addAll-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>addAll</h4><pre>public boolean addAll(<a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;? extends <a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt; c)</pre><div class="block">Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator. The behavior of this operation is undefined if the specified collection is modified while the operation is in progress. (Note that this will occur if the specified collection is this list, and it's nonempty.)                                                            </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#addAll-java.util.Collection-">addAll</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#addAll-java.util.Collection-">addAll</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#addAll-java.util.Collection-">addAll</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - collection containing elements to be added to this list           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this list changed as a result of the call           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified collection is null        </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/AbstractCollection.html#add-E-"><code>AbstractCollection.add(Object)</code></a> </dd>       </dl></li></ul> <a end_ctx_id="method:addAll-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:addAll-int-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:addAll-int-java.util.Collection-"/><a name="addAll-int-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>addAll</h4><pre>public boolean addAll(int index,
                      <a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;? extends <a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt; c)</pre><div class="block">Inserts all of the elements in the specified collection into this list, starting at the specified position. Shifts the element currently at that position (if any) and any subsequent elements to the right (increases their indices). The new elements will appear in the list in the order that they are returned by the specified collection's iterator.                                                       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#addAll-int-java.util.Collection-">addAll</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractSequentialList.html#addAll-int-java.util.Collection-">addAll</a></code> in class <code><a href="../../java/util/AbstractSequentialList.html" title="class in java.util">AbstractSequentialList</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - index at which to insert the first element from the specified collection              </dd><dd> <code>c</code> - collection containing elements to be added to this list           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this list changed as a result of the call           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if the index is out of range (<tt>index &lt; 0 || index &gt; size()      </tt>)          </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified collection is null        </dd>     </dl></li></ul> <a end_ctx_id="method:addAll-int-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:clear-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:clear--"/><a name="clear--"/><ul class="blockList"><li class="blockList"><h4>clear</h4><pre>public void clear()</pre><div class="block">Removes all of the elements from this list. The list will be empty after this call returns.                </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#clear--">clear</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#clear--">clear</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractList.html#clear--">clear</a></code> in class <code><a href="../../java/util/AbstractList.html" title="class in java.util">AbstractList</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd>   </dl></li></ul> <a end_ctx_id="method:clear--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:get-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:get-int-"/><a name="get-int-"/><ul class="blockList"><li class="blockList"><h4>get</h4><pre>public <a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a> get(int index)</pre><div class="block">Returns the element at the specified position in this list.         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#get-int-">get</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractSequentialList.html#get-int-">get</a></code> in class <code><a href="../../java/util/AbstractSequentialList.html" title="class in java.util">AbstractSequentialList</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - index of the element to return        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the element at the specified position in this list        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if the index is out of range (<tt>index &lt; 0 || index &gt;= size()      </tt>)          </dd>     </dl></li></ul> <a name="set-int-java.lang.Object-"/><a end_ctx_id="method:get-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:set-int-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:set-int-E-"/><a name="set-int-E-"/><ul class="blockList"><li class="blockList"><h4>set</h4><pre>public <a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a> set(int index,
             <a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a> element)</pre><div class="block">Replaces the element at the specified position in this list with the specified element.             </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#set-int-E-">set</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractSequentialList.html#set-int-E-">set</a></code> in class <code><a href="../../java/util/AbstractSequentialList.html" title="class in java.util">AbstractSequentialList</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - index of the element to replace        </dd><dd> <code>element</code> - element to be stored at the specified position          </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the element previously at the specified position      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if the index is out of range (<tt>index &lt; 0 || index &gt;= size()      </tt>)          </dd>     </dl></li></ul> <a name="add-int-java.lang.Object-"/><a end_ctx_id="method:set-int-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:add-int-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:add-int-E-"/><a name="add-int-E-"/><ul class="blockList"><li class="blockList"><h4>add</h4><pre>public void add(int index,
                <a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a> element)</pre><div class="block">Inserts the specified element at the specified position in this list. Shifts the element currently at that position (if any) and any subsequent elements to the right (adds one to their indices).                               </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#add-int-E-">add</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractSequentialList.html#add-int-E-">add</a></code> in class <code><a href="../../java/util/AbstractSequentialList.html" title="class in java.util">AbstractSequentialList</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - index at which the specified element is to be inserted            </dd><dd> <code>element</code> - element to be inserted      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if the index is out of range (<tt>index &lt; 0 || index &gt; size()      </tt>)          </dd>    </dl></li></ul> <a end_ctx_id="method:add-int-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:remove-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:remove-int-"/><a name="remove-int-"/><ul class="blockList"><li class="blockList"><h4>remove</h4><pre>public <a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a> remove(int index)</pre><div class="block">Removes the element at the specified position in this list. Shifts any subsequent elements to the left (subtracts one from their indices). Returns the element that was removed from the list.                              </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#remove-int-">remove</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractSequentialList.html#remove-int-">remove</a></code> in class <code><a href="../../java/util/AbstractSequentialList.html" title="class in java.util">AbstractSequentialList</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - the index of the element to be removed          </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the element previously at the specified position      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if the index is out of range (<tt>index &lt; 0 || index &gt;= size()      </tt>)          </dd>     </dl></li></ul> <a end_ctx_id="method:remove-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:indexOf-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:indexOf-java.lang.Object-"/><a name="indexOf-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>indexOf</h4><pre>public int indexOf(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Returns the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element. More formally, returns the lowest index <code>i</code> such that <tt>(o==null ? get(i)==null : o.equals(get(i)))</tt>, or -1 if there is no such index.                                         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#indexOf-java.lang.Object-">indexOf</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractList.html#indexOf-java.lang.Object-">indexOf</a></code> in class <code><a href="../../java/util/AbstractList.html" title="class in java.util">AbstractList</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element to search for      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element                      </dd>    </dl></li></ul> <a end_ctx_id="method:indexOf-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:lastIndexOf-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:lastIndexOf-java.lang.Object-"/><a name="lastIndexOf-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>lastIndexOf</h4><pre>public int lastIndexOf(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Returns the index of the last occurrence of the specified element in this list, or -1 if this list does not contain the element. More formally, returns the highest index <code>i</code> such that <tt>(o==null ? get(i)==null : o.equals(get(i)))</tt>, or -1 if there is no such index.                                         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#lastIndexOf-java.lang.Object-">lastIndexOf</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractList.html#lastIndexOf-java.lang.Object-">lastIndexOf</a></code> in class <code><a href="../../java/util/AbstractList.html" title="class in java.util">AbstractList</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element to search for      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the index of the last occurrence of the specified element in this list, or -1 if this list does not contain the element                      </dd>    </dl></li></ul> <a end_ctx_id="method:lastIndexOf-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:peek-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:peek--"/><a name="peek--"/><ul class="blockList"><li class="blockList"><h4>peek</h4><pre>public <a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a> peek()</pre><div class="block">Retrieves, but does not remove, the head (first element) of this list.           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#peek--">peek</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Queue.html#peek--">peek</a></code> in interface <code><a href="../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of this list, or <code>null</code> if this list is empty           </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd>    </dl></li></ul> <a end_ctx_id="method:peek--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:element-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:element--"/><a name="element--"/><ul class="blockList"><li class="blockList"><h4>element</h4><pre>public <a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a> element()</pre><div class="block">Retrieves, but does not remove, the head (first element) of this list.           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#element--">element</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Queue.html#element--">element</a></code> in interface <code><a href="../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of this list    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/util/NoSuchElementException.html" title="class in java.util">NoSuchElementException</a></code> - if this list is empty       </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd>     </dl></li></ul> <a end_ctx_id="method:element--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:poll-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:poll--"/><a name="poll--"/><ul class="blockList"><li class="blockList"><h4>poll</h4><pre>public <a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a> poll()</pre><div class="block">Retrieves and removes the head (first element) of this list.         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#poll--">poll</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Queue.html#poll--">poll</a></code> in interface <code><a href="../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of this list, or <code>null</code> if this list is empty           </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd>    </dl></li></ul> <a end_ctx_id="method:poll--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:remove-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:remove--"/><a name="remove--"/><ul class="blockList"><li class="blockList"><h4>remove</h4><pre>public <a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a> remove()</pre><div class="block">Retrieves and removes the head (first element) of this list.         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#remove--">remove</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Queue.html#remove--">remove</a></code> in interface <code><a href="../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of this list    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/util/NoSuchElementException.html" title="class in java.util">NoSuchElementException</a></code> - if this list is empty       </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd>     </dl></li></ul> <a name="offer-java.lang.Object-"/><a end_ctx_id="method:remove--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:offer-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:offer-E-"/><a name="offer-E-"/><ul class="blockList"><li class="blockList"><h4>offer</h4><pre>public boolean offer(<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a> e)</pre><div class="block">Adds the specified element as the tail (last element) of this list.           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#offer-E-">offer</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Queue.html#offer-E-">offer</a></code> in interface <code><a href="../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> (as specified by <a href="../../java/util/Queue.html#offer-E-"><code>Queue.offer(E)</code></a>)     </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd>     </dl></li></ul> <a name="offerFirst-java.lang.Object-"/><a end_ctx_id="method:offer-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:offerFirst-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:offerFirst-E-"/><a name="offerFirst-E-"/><ul class="blockList"><li class="blockList"><h4>offerFirst</h4><pre>public boolean offerFirst(<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a> e)</pre><div class="block">Inserts the specified element at the front of this list.         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#offerFirst-E-">offerFirst</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to insert      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> (as specified by <a href="../../java/util/Deque.html#offerFirst-E-"><code>Deque.offerFirst(E)</code></a>)     </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.6</dd>    </dl></li></ul> <a name="offerLast-java.lang.Object-"/><a end_ctx_id="method:offerFirst-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:offerLast-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:offerLast-E-"/><a name="offerLast-E-"/><ul class="blockList"><li class="blockList"><h4>offerLast</h4><pre>public boolean offerLast(<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a> e)</pre><div class="block">Inserts the specified element at the end of this list.         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#offerLast-E-">offerLast</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to insert      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> (as specified by <a href="../../java/util/Deque.html#offerLast-E-"><code>Deque.offerLast(E)</code></a>)     </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.6</dd>    </dl></li></ul> <a end_ctx_id="method:offerLast-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:peekFirst-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:peekFirst--"/><a name="peekFirst--"/><ul class="blockList"><li class="blockList"><h4>peekFirst</h4><pre>public <a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a> peekFirst()</pre><div class="block">Retrieves, but does not remove, the first element of this list, or returns <code>null</code> if this list is empty.                  </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#peekFirst--">peekFirst</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the first element of this list, or <code>null</code> if this list is empty            </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.6</dd>   </dl></li></ul> <a end_ctx_id="method:peekFirst--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:peekLast-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:peekLast--"/><a name="peekLast--"/><ul class="blockList"><li class="blockList"><h4>peekLast</h4><pre>public <a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a> peekLast()</pre><div class="block">Retrieves, but does not remove, the last element of this list, or returns <code>null</code> if this list is empty.                  </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#peekLast--">peekLast</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the last element of this list, or <code>null</code> if this list is empty            </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.6</dd>   </dl></li></ul> <a end_ctx_id="method:peekLast--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:pollFirst-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:pollFirst--"/><a name="pollFirst--"/><ul class="blockList"><li class="blockList"><h4>pollFirst</h4><pre>public <a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a> pollFirst()</pre><div class="block">Retrieves and removes the first element of this list, or returns <code>null</code> if this list is empty.                </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#pollFirst--">pollFirst</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the first element of this list, or <code>null</code> if this list is empty            </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.6</dd>   </dl></li></ul> <a end_ctx_id="method:pollFirst--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:pollLast-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:pollLast--"/><a name="pollLast--"/><ul class="blockList"><li class="blockList"><h4>pollLast</h4><pre>public <a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a> pollLast()</pre><div class="block">Retrieves and removes the last element of this list, or returns <code>null</code> if this list is empty.                </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#pollLast--">pollLast</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the last element of this list, or <code>null</code> if this list is empty            </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.6</dd>   </dl></li></ul> <a name="push-java.lang.Object-"/><a end_ctx_id="method:pollLast--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:push-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:push-E-"/><a name="push-E-"/><ul class="blockList"><li class="blockList"><h4>push</h4><pre>public void push(<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a> e)</pre><div class="block">Pushes an element onto the stack represented by this list. In other words, inserts the element at the front of this list.<p>This method is equivalent to <a href="../../java/util/LinkedList.html#addFirst-E-"><code>addFirst(E)</code></a>.     </p>                     </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#push-E-">push</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to push      </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.6</dd>   </dl></li></ul> <a end_ctx_id="method:push-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:pop-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:pop--"/><a name="pop--"/><ul class="blockList"><li class="blockList"><h4>pop</h4><pre>public <a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a> pop()</pre><div class="block">Pops an element from the stack represented by this list. In other words, removes and returns the first element of this list.<p>This method is equivalent to <a href="../../java/util/LinkedList.html#removeFirst--"><code>removeFirst()</code></a>.     </p>                     </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#pop--">pop</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the element at the front of this list (which is the top of the stack represented by this list)                  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/util/NoSuchElementException.html" title="class in java.util">NoSuchElementException</a></code> - if this list is empty       </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.6</dd>    </dl></li></ul> <a end_ctx_id="method:pop--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:removeFirstOccurrence-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:removeFirstOccurrence-java.lang.Object-"/><a name="removeFirstOccurrence-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>removeFirstOccurrence</h4><pre>public boolean removeFirstOccurrence(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Removes the first occurrence of the specified element in this list (when traversing the list from head to tail). If the list does not contain the element, it is unchanged.                             </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#removeFirstOccurrence-java.lang.Object-">removeFirstOccurrence</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element to be removed from this list, if present           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if the list contained the specified element        </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.6</dd>    </dl></li></ul> <a end_ctx_id="method:removeFirstOccurrence-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:removeLastOccurrence-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:removeLastOccurrence-java.lang.Object-"/><a name="removeLastOccurrence-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>removeLastOccurrence</h4><pre>public boolean removeLastOccurrence(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Removes the last occurrence of the specified element in this list (when traversing the list from head to tail). If the list does not contain the element, it is unchanged.                             </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#removeLastOccurrence-java.lang.Object-">removeLastOccurrence</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element to be removed from this list, if present           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if the list contained the specified element        </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.6</dd>    </dl></li></ul> <a end_ctx_id="method:removeLastOccurrence-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:listIterator-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:listIterator-int-"/><a name="listIterator-int-"/><ul class="blockList"><li class="blockList"><h4>listIterator</h4><pre>public <a href="../../java/util/ListIterator.html" title="interface in java.util">ListIterator</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt; listIterator(int index)</pre><div class="block">Returns a list-iterator of the elements in this list (in proper sequence), starting at the specified position in the list. Obeys the general contract of <code>List.listIterator(int)</code>.<p> The list-iterator is <i>fail-fast</i>: if the list is structurally modified at any time after the Iterator is created, in any way except through the list-iterator's own <code>remove</code> or <code>add</code> methods, the list-iterator will throw a <code>ConcurrentModificationException</code>. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.                                                              </p>                         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#listIterator-int-">listIterator</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/AbstractSequentialList.html#listIterator-int-">listIterator</a></code> in class <code><a href="../../java/util/AbstractSequentialList.html" title="class in java.util">AbstractSequentialList</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - index of the first element to be returned from the list-iterator (by a call to <code>next</code>)                  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a ListIterator of the elements in this list (in proper sequence), starting at the specified position in the list                  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if the index is out of range (<code>index &lt; 0 || index &gt; size()      </code>)          </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/List.html#listIterator-int-"><code>List.listIterator(int)</code></a> </dd>      </dl></li></ul> <a end_ctx_id="method:listIterator-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:descendingIterator-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:descendingIterator--"/><a name="descendingIterator--"/><ul class="blockList"><li class="blockList"><h4>descendingIterator</h4><pre>public <a href="../../java/util/Iterator.html" title="interface in java.util">Iterator</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt; descendingIterator()</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../java/util/Deque.html#descendingIterator--">Deque</a></code>   </span> </div><div class="block">Returns an iterator over the elements in this deque in reverse sequential order. The elements will be returned in order from last (tail) to first (head).                         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Deque.html#descendingIterator--">descendingIterator</a></code> in interface <code><a href="../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an iterator over the elements in this deque in reverse sequence          </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.6</dd>   </dl></li></ul> <a end_ctx_id="method:descendingIterator--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:clone-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:clone--"/><a name="clone--"/><ul class="blockList"><li class="blockList"><h4>clone</h4><pre>public <a href="../../java/lang/Object.html" title="class in java.lang">Object</a> clone()</pre><div class="block">Returns a shallow copy of this <code>LinkedList</code>. (The elements themselves are not cloned.)            </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/lang/Object.html#clone--">clone</a></code> in class <code><a href="../../java/lang/Object.html" title="class in java.lang">Object</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a shallow copy of this <code>LinkedList</code> instance      </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/Cloneable.html" title="interface in java.lang"><code>Cloneable</code></a> </dd>   </dl></li></ul> <a end_ctx_id="method:clone--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toArray-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toArray--"/><a name="toArray--"/><ul class="blockList"><li class="blockList"><h4>toArray</h4><pre>public <a href="../../java/lang/Object.html" title="class in java.lang">Object</a>[] toArray()</pre><div class="block">Returns an array containing all of the elements in this list in proper sequence (from first to last element).<p>The returned array will be "safe" in that no references to it are maintained by this list. (In other words, this method must allocate a new array). The caller is thus free to modify the returned array.                                    </p><p>This method acts as bridge between array-based and collection-based APIs.         </p>                  </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#toArray--">toArray</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#toArray--">toArray</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#toArray--">toArray</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an array containing all of the elements in this list in proper sequence            </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Arrays.html#asList-T...-"><code>Arrays.asList(Object[])</code></a> </dd>     </dl></li></ul> <a name="toArray-java.lang.Object:A-"/><a end_ctx_id="method:toArray--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toArray-T:A- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toArray-T:A-"/><a name="toArray-T:A-"/><ul class="blockList"><li class="blockList"><h4>toArray</h4><pre>public &lt;T&gt; T[] toArray(T[] a)</pre><div class="block">Returns an array containing all of the elements in this list in proper sequence (from first to last element); the runtime type of the returned array is that of the specified array. If the list fits in the specified array, it is returned therein. Otherwise, a new array is allocated with the runtime type of the specified array and the size of this list.<p>If the list fits in the specified array with room to spare (i.e., the array has more elements than the list), the element in the array immediately following the end of the list is set to <code>null</code>. (This is useful in determining the length of the list <i>only</i> if the caller knows that the list does not contain any null elements.)                                                            </p><p>Like the <a href="../../java/util/LinkedList.html#toArray--"><code>toArray()</code></a> method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.                                      </p><p>Suppose <code>x</code> is a list known to contain only strings. The following code can be used to dump the list into a newly allocated array of <code>String</code>:<pre>
     String[] y = x.toArray(new String[0]);</pre> Note that <code>toArray(new Object[0]) </code> is identical in function to <code>toArray()</code>.                                   </p>                                                               </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#toArray-T:A-">toArray</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#toArray-T:A-">toArray</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#toArray-T:A-">toArray</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/LinkedList.html" title="type parameter in LinkedList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Type Parameters: </span>   </dt><dd> <code>T</code> - the runtime type of the array to contain the collection            </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>a</code> - the array into which the elements of the list are to be stored, if it is big enough; otherwise, a new array of the same runtime type is allocated for this purpose.                                  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an array containing the elements of the list       </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/ArrayStoreException.html" title="class in java.lang">ArrayStoreException</a></code> - if the runtime type of the specified array is not a supertype of the runtime type of every element in this list                        </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified array is null        </dd>       </dl></li></ul> <a end_ctx_id="method:toArray-T:A-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:spliterator-- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:spliterator--"><span class="diff-html-added"/></a><a name="spliterator--"/><ul class="blockListLast"><li class="blockList"><h4><span class="diff-html-added">spliterator</span></h4><pre><span class="diff-html-added">public </span><a href="../../java/util/Spliterator.html" title="interface in java.util"><span class="diff-html-added">Spliterator</span></a><span class="diff-html-added">&lt;</span><a href="../../java/util/LinkedList.html" title="type parameter in LinkedList"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt; spliterator()</span></pre><div class="block"><span class="diff-html-added">Creates</span> <span class="diff-html-added">a</span> <em><a href="Spliterator.html#binding"><span class="diff-html-added">late-binding</span></a></em> <span class="diff-html-added">and</span> <em><span class="diff-html-added">fail-fast</span></em><a href="../../java/util/Spliterator.html" title="interface in java.util"><code><span class="diff-html-added">Spliterator</span></code></a> <span class="diff-html-added">over</span> <span class="diff-html-added">the</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">in</span> <span class="diff-html-added">this</span> <span class="diff-html-added">list.</span><p><span class="diff-html-added">The</span> <code><span class="diff-html-added">Spliterator</span></code> <span class="diff-html-added">reports</span> <a href="../../java/util/Spliterator.html#SIZED"><code><span class="diff-html-added">Spliterator.SIZED</span></code></a> <span class="diff-html-added">and</span> <a href="../../java/util/Spliterator.html#ORDERED"><code><span class="diff-html-added">Spliterator.ORDERED</span></code></a><span class="diff-html-added">.</span> <span class="diff-html-added">Overriding</span> <span class="diff-html-added">implementations</span> <span class="diff-html-added">should</span> <span class="diff-html-added">document</span> <span class="diff-html-added">the</span> <span class="diff-html-added">reporting</span> <span class="diff-html-added">of</span> <span class="diff-html-added">additional</span> <span class="diff-html-added">characteristic</span> <span class="diff-html-added">values.</span>               </p>          </div><dl> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../java/lang/Iterable.html#spliterator--"><span class="diff-html-added">spliterator</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../java/lang/Iterable.html" title="interface in java.lang"><span class="diff-html-added">Iterable</span></a><span class="diff-html-added">&lt;</span><a href="../../java/util/LinkedList.html" title="type parameter in LinkedList"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../java/util/Collection.html#spliterator--"><span class="diff-html-added">spliterator</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../java/util/Collection.html" title="interface in java.util"><span class="diff-html-added">Collection</span></a><span class="diff-html-added">&lt;</span><a href="../../java/util/LinkedList.html" title="type parameter in LinkedList"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../java/util/List.html#spliterator--"><span class="diff-html-added">spliterator</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../java/util/List.html" title="interface in java.util"><span class="diff-html-added">List</span></a><span class="diff-html-added">&lt;</span><a href="../../java/util/LinkedList.html" title="type parameter in LinkedList"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Implementation</span> <span class="diff-html-added">Note:</span> </span>   </dt><dd><span class="diff-html-added">The</span> <code><span class="diff-html-added">Spliterator</span></code> <span class="diff-html-added">additionally</span> <span class="diff-html-added">reports</span> <a href="../../java/util/Spliterator.html#SUBSIZED"><code><span class="diff-html-added">Spliterator.SUBSIZED</span></code></a> <span class="diff-html-added">and</span> <span class="diff-html-added">implements</span> <code><span class="diff-html-added">trySplit</span></code> <span class="diff-html-added">to</span> <span class="diff-html-added">permit</span> <span class="diff-html-added">limited</span> <span class="diff-html-added">parallelism..</span>           </dd> <dt> <span class="returnLabel"><span class="diff-html-added">Returns:</span></span>   </dt><dd><span class="diff-html-added">a</span> <code><span class="diff-html-added">Spliterator</span></code> <span class="diff-html-added">over</span> <span class="diff-html-added">the</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">in</span> <span class="diff-html-added">this</span> <span class="diff-html-added">list</span>       </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Since:</span></span>   </dt><dd><span class="diff-html-added">1.8</span></dd>      </dl></li></ul> <a end_ctx_id="method:spliterator--"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table></diff></diffreport>