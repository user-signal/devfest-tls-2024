<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:Pack200.Unpacker [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:Pack200.Unpacker"/><ul class="blockList"><li class="blockList"><dl> <dt>Enclosing class: </dt><dd> <a href="../../../java/util/jar/Pack200.html" title="class in java.util.jar">Pack200</a> </dd> </dl> <hr/> <br/><pre>public static interface <span class="typeNameLabel">Pack200.Unpacker</span></pre><div class="block">The unpacker engine converts the packed stream to a JAR file. An instance of the engine can be obtained using <a href="../../../java/util/jar/Pack200.html#newUnpacker--"><code>Pack200.newUnpacker()</code></a>.<p> Every JAR file produced by this engine will include the string "<tt>PACK200</tt>" as a zip file comment. This allows a deployer to detect if a JAR archive was packed and unpacked.                               </p><p> Note: Unless otherwise noted, passing a <tt>null</tt> argument to a constructor or method in this class will cause a <a href="../../../java/lang/NullPointerException.html" title="class in java.lang"><code>NullPointerException</code></a> to be thrown.                       </p><p> This version of the unpacker is compatible with all previous versions.           </p>                    </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd> </dl>  </li></ul> </div> <a end_ctx_id="class:Pack200.Unpacker"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:KEEP [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:KEEP"/><a name="KEEP"/><ul class="blockList"><li class="blockList"><h4>KEEP</h4><pre>static final <a href="../../../java/lang/String.html" title="class in java.lang">String</a> KEEP</pre><div class="block">The string "keep", a possible value for certain properties.        </div><dl> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/util/jar/Pack200.Unpacker.html#DEFLATE_HINT"><code>DEFLATE_HINT</code></a>, <a href="../../../constant-values.html#java.util.jar.Pack200.Unpacker.KEEP">Constant Field Values  </a>  </dd> </dl></li></ul> <a end_ctx_id="field:KEEP"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:TRUE [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:TRUE"/><a name="TRUE"/><ul class="blockList"><li class="blockList"><h4>TRUE</h4><pre>static final <a href="../../../java/lang/String.html" title="class in java.lang">String</a> TRUE</pre><div class="block">The string "true", a possible value for certain properties.        </div><dl> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/util/jar/Pack200.Unpacker.html#DEFLATE_HINT"><code>DEFLATE_HINT</code></a>, <a href="../../../constant-values.html#java.util.jar.Pack200.Unpacker.TRUE">Constant Field Values  </a>  </dd> </dl></li></ul> <a end_ctx_id="field:TRUE"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:FALSE [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:FALSE"/><a name="FALSE"/><ul class="blockList"><li class="blockList"><h4>FALSE</h4><pre>static final <a href="../../../java/lang/String.html" title="class in java.lang">String</a> FALSE</pre><div class="block">The string "false", a possible value for certain properties.        </div><dl> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/util/jar/Pack200.Unpacker.html#DEFLATE_HINT"><code>DEFLATE_HINT</code></a>, <a href="../../../constant-values.html#java.util.jar.Pack200.Unpacker.FALSE">Constant Field Values  </a>  </dd> </dl></li></ul> <a end_ctx_id="field:FALSE"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:DEFLATE_HINT [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:DEFLATE_HINT"/><a name="DEFLATE_HINT"/><ul class="blockList"><li class="blockList"><h4>DEFLATE_HINT</h4><pre>static final <a href="../../../java/lang/String.html" title="class in java.lang">String</a> DEFLATE_HINT</pre><div class="block">Property indicating that the unpacker should ignore all transmitted values for DEFLATE_HINT, replacing them by the given value, <a href="../../../java/util/jar/Pack200.Unpacker.html#TRUE"><code>TRUE</code></a> or <a href="../../../java/util/jar/Pack200.Unpacker.html#FALSE"><code>FALSE</code></a>. The default value is the special string <a href="../../../java/util/jar/Pack200.Unpacker.html#KEEP"><code>KEEP</code></a>, which asks the unpacker to preserve all transmitted deflation hints.                                      </div><dl> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../constant-values.html#java.util.jar.Pack200.Unpacker.DEFLATE_HINT">Constant Field Values  </a> </dd> </dl></li></ul> <a end_ctx_id="field:DEFLATE_HINT"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:PROGRESS [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:PROGRESS"/><a name="PROGRESS"/><ul class="blockListLast"><li class="blockList"><h4>PROGRESS</h4><pre>static final <a href="../../../java/lang/String.html" title="class in java.lang">String</a> PROGRESS</pre><div class="block">The unpacker's progress as a percentage, as periodically updated by the unpacker. Values of 0 - 100 are normal, and -1 indicates a stall. Progress can be monitored by polling the value of this property.<p> At a minimum, the unpacker must set progress to 0 at the beginning of a packing operation, and to 100 at the end.                       </p>                                  </div><dl> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../constant-values.html#java.util.jar.Pack200.Unpacker.PROGRESS">Constant Field Values  </a> </dd> </dl></li></ul> <a end_ctx_id="field:PROGRESS"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:properties-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:properties--"/><a name="properties--"/><ul class="blockList"><li class="blockList"><h4>properties</h4><pre><a href="../../../java/util/SortedMap.html" title="interface in java.util">SortedMap</a>&lt;<a href="../../../java/lang/String.html" title="class in java.lang">String</a>,<a href="../../../java/lang/String.html" title="class in java.lang">String</a>&gt; properties()</pre><div class="block">Get the set of this engine's properties. This set is a "live view", so that changing its contents immediately affects the Packer engine, and changes from the engine (such as progress indications) are immediately visible in the map.<p>The property map may contain pre-defined implementation specific and default properties. Users are encouraged to read the information and fully understand the implications, before modifying pre-existing properties.                          </p><p> Implementation specific properties are prefixed with a package name associated with the implementor, beginning with <tt>com.</tt> or a similar prefix. All property names beginning with <tt>pack.</tt> and <tt>unpack.</tt> are reserved for use by this API.                                   </p><p> Unknown properties may be ignored or rejected with an unspecified error, and invalid entries may cause an unspecified error to be thrown.                      </p>                                     </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>A sorted association of option key strings to option values.         </dd> </dl></li></ul> <a end_ctx_id="method:properties--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:unpack-java.io.InputStream-java.util.jar.JarOutputStream- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:unpack-java.io.InputStream-java.util.jar.JarOutputStream-"/><a name="unpack-java.io.InputStream-java.util.jar.JarOutputStream-"/><ul class="blockList"><li class="blockList"><h4>unpack</h4><pre>void unpack(<a href="../../../java/io/InputStream.html" title="class in java.io">InputStream</a> in,
            <a href="../../../java/util/jar/JarOutputStream.html" title="class in java.util.jar">JarOutputStream</a> out)
     throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Read a Pack200 archive, and write the encoded JAR to a JarOutputStream. The entire contents of the input stream will be read. It may be more efficient to read the Pack200 archive to a file and pass the File object, using the alternate method described below.<p> Closes its input but not its output. (The output can accumulate more elements.)             </p>                                             </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>in</code> - an InputStream.    </dd><dd> <code>out</code> - a JarOutputStream.    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an error is encountered.       </dd>  </dl></li></ul> <a end_ctx_id="method:unpack-java.io.InputStream-java.util.jar.JarOutputStream-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:unpack-java.io.File-java.util.jar.JarOutputStream- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:unpack-java.io.File-java.util.jar.JarOutputStream-"/><a name="unpack-java.io.File-java.util.jar.JarOutputStream-"/><ul class="blockList"><li class="blockList"><h4>unpack</h4><pre>void unpack(<a href="../../../java/io/File.html" title="class in java.io">File</a> in,
            <a href="../../../java/util/jar/JarOutputStream.html" title="class in java.util.jar">JarOutputStream</a> out)
     throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Read a Pack200 archive, and write the encoded JAR to a JarOutputStream.<p> Does not close its output. (The output can accumulate more elements.)           </p>           </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>in</code> - a File.    </dd><dd> <code>out</code> - a JarOutputStream.    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an error is encountered.       </dd>  </dl></li></ul> <a end_ctx_id="method:unpack-java.io.File-java.util.jar.JarOutputStream-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:addPropertyChangeListener-java.beans.PropertyChangeListener- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:addPropertyChangeListener-java.beans.PropertyChangeListener-"/><a name="addPropertyChangeListener-java.beans.PropertyChangeListener-"/><ul class="blockList"><li class="blockList"><h4>addPropertyChangeListener</h4><pre><a href="../../../java/lang/Deprecated.html" title="annotation in java.lang">@Deprecated</a>
default void addPropertyChangeListener(<a href="../../../java/beans/PropertyChangeListener.html" title="interface in java.beans">PropertyChangeListener</a> listener)</pre><div class="block"> <span class="deprecatedLabel">Deprecated.</span> <span class="deprecationComment">The dependency on <code>PropertyChangeListener</code> creates a significant impediment to future modularization of the Java platform. This method will be removed in a future release. Applications that need to monitor progress of the unpacker can poll the value of the <a href="../../../java/util/jar/Pack200.Unpacker.html#PROGRESS"><code>PROGRESS</code></a> property instead.                                         </span> </div><div class="block">Registers a listener for PropertyChange events on the properties map. This is typically used by applications to update a progress bar.<p> The default implementation of this method does nothing and has no side-effects.            </p><p> <b>WARNING:</b> This method is omitted from the interface declaration in all subset Profiles of Java SE that do not include the <code>java.beans</code> package.                       </p>                    </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>listener</code> - An object to be invoked when a property is changed.            </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/util/jar/Pack200.Unpacker.html#properties--"><code>properties()</code></a>, <a href="../../../java/util/jar/Pack200.Unpacker.html#PROGRESS"><code>PROGRESS</code></a>  </dd>  </dl></li></ul> <a end_ctx_id="method:addPropertyChangeListener-java.beans.PropertyChangeListener-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:removePropertyChangeListener-java.beans.PropertyChangeListener- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:removePropertyChangeListener-java.beans.PropertyChangeListener-"/><a name="removePropertyChangeListener-java.beans.PropertyChangeListener-"/><ul class="blockListLast"><li class="blockList"><h4>removePropertyChangeListener</h4><pre><a href="../../../java/lang/Deprecated.html" title="annotation in java.lang">@Deprecated</a>
default void removePropertyChangeListener(<a href="../../../java/beans/PropertyChangeListener.html" title="interface in java.beans">PropertyChangeListener</a> listener)</pre><div class="block"> <span class="deprecatedLabel">Deprecated.</span> <span class="deprecationComment">The dependency on <code>PropertyChangeListener</code> creates a significant impediment to future modularization of the Java platform. This method will be removed in a future release.                       </span> </div><div class="block">Remove a listener for PropertyChange events, added by the <a href="../../../java/util/jar/Pack200.Unpacker.html#addPropertyChangeListener-java.beans.PropertyChangeListener-"><code>addPropertyChangeListener(java.beans.PropertyChangeListener)</code></a>.<p> The default implementation of this method does nothing and has no side-effects.            </p><p> <b>WARNING:</b> This method is omitted from the interface declaration in all subset Profiles of Java SE that do not include the <code>java.beans</code> package.                       </p>         </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>listener</code> - The PropertyChange listener to be removed.        </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/util/jar/Pack200.Unpacker.html#addPropertyChangeListener-java.beans.PropertyChangeListener-"><code>addPropertyChangeListener(java.beans.PropertyChangeListener)</code></a> </dd>  </dl></li></ul> <a end_ctx_id="method:removePropertyChangeListener-java.beans.PropertyChangeListener-"/>  </td></tr></table></td></tr></table></diff></diffreport>