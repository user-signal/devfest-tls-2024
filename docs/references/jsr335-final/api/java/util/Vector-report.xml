<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:Vector [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:Vector"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>, <a href="../../java/lang/Cloneable.html" title="interface in java.lang">Cloneable</a>, <a href="../../java/lang/Iterable.html" title="interface in java.lang">Iterable</a>&lt;E&gt;, <a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;E&gt;, <a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;E&gt;, <a href="../../java/util/RandomAccess.html" title="interface in java.util">RandomAccess</a>      </dd> </dl><dl> <dt>Direct Known Subclasses:  </dt><dd> <a href="../../java/util/Stack.html" title="class in java.util">Stack</a> </dd> </dl> <hr/> <br/><pre>public class <span class="typeNameLabel">Vector&lt;E&gt;</span>
extends <a href="../../java/util/AbstractList.html" title="class in java.util">AbstractList</a>&lt;E&gt;
implements <a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;E&gt;, <a href="../../java/util/RandomAccess.html" title="interface in java.util">RandomAccess</a>, <a href="../../java/lang/Cloneable.html" title="interface in java.lang">Cloneable</a>, <a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a></pre><div class="block">The <code>Vector</code> class implements a growable array of objects. Like an array, it contains components that can be accessed using an integer index. However, the size of a <code>Vector</code> can grow or shrink as needed to accommodate adding and removing items after the <code>Vector</code> has been created.<p>Each vector tries to optimize storage management by maintaining a <code>capacity</code> and a <code>capacityIncrement</code>. The <code>capacity</code> is always at least as large as the vector size; it is usually larger because as components are added to the vector, the vector's storage increases in chunks the size of <code>capacityIncrement</code>. An application can increase the capacity of a vector before inserting a large number of components; this reduces the amount of incremental reallocation.                                                                      </p><p> <a name="fail-fast"> The iterators returned by this class's        </a><a href="../../java/util/Vector.html#iterator--"><code>iterator</code></a> and <a href="../../java/util/Vector.html#listIterator-int-"><code>listIterator</code></a> methods are <em>fail-fast</em>: if the vector is structurally modified at any time after the iterator is created, in any way except through the iterator's own <a href="../../java/util/ListIterator.html#remove--"><code>remove</code></a> or <a href="../../java/util/ListIterator.html#add-E-"><code>add</code></a> methods, the iterator will throw a <a href="../../java/util/ConcurrentModificationException.html" title="class in java.util"><code>ConcurrentModificationException</code></a>. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future. The <a href="../../java/util/Enumeration.html" title="interface in java.util"><code>Enumerations</code></a> returned by the <a href="../../java/util/Vector.html#elements--"><code>elements</code></a> method are <em>not</em> fail-fast.                                                                          </p><p>Note that the fail-fast behavior of an iterator cannot be guaranteed as it is, generally speaking, impossible to make any hard guarantees in the presence of unsynchronized concurrent modification. Fail-fast iterators throw <code>ConcurrentModificationException</code> on a best-effort basis. Therefore, it would be wrong to write a program that depended on this exception for its correctness: <i>the fail-fast behavior of iterators should be used only to detect bugs.           </i>                                                      </p><p>As of the Java 2 platform v1.2, this class was retrofitted to implement the <a href="../../java/util/List.html" title="interface in java.util"><code>List</code></a> interface, making it a member of the <a href="http://download.oracle.com/javase/7/docs/technotes/guides/collections/index.html"> Java Collections Framework   </a>. Unlike the new collection implementations, <code>Vector</code> is synchronized. If a thread-safe implementation is not needed, it is recommended to use <a href="../../java/util/ArrayList.html" title="class in java.util"><code>ArrayList</code></a> in place of <code>Vector</code>.                                               </p>                                              </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>JDK1.0</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Collection.html" title="interface in java.util"><code>Collection</code></a>, <a href="../../java/util/LinkedList.html" title="class in java.util"><code>LinkedList</code></a>, <a href="../../serialized-form.html#java.util.Vector">Serialized Form </a>   </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:Vector"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:elementData [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:elementData"/><a name="elementData"/><ul class="blockList"><li class="blockList"><h4>elementData</h4><pre>protected <a href="../../java/lang/Object.html" title="class in java.lang">Object</a>[] elementData</pre><div class="block">The array buffer into which the components of the vector are stored. The capacity of the vector is the length of this array buffer, and is at least large enough to contain all the vector's elements.<p>Any array elements following the last element in the Vector are null.           </p>                                   </div></li></ul> <a end_ctx_id="field:elementData"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:elementCount [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:elementCount"/><a name="elementCount"/><ul class="blockList"><li class="blockList"><h4>elementCount</h4><pre>protected int elementCount</pre><div class="block">The number of valid components in this <code>Vector</code> object. Components <code>elementData[0]</code> through <code>elementData[elementCount-1]</code> are the actual items.                </div></li></ul> <a end_ctx_id="field:elementCount"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:capacityIncrement [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:capacityIncrement"/><a name="capacityIncrement"/><ul class="blockListLast"><li class="blockList"><h4>capacityIncrement</h4><pre>protected int capacityIncrement</pre><div class="block">The amount by which the capacity of the vector is automatically incremented when its size becomes greater than its capacity. If the capacity increment is less than or equal to zero, the capacity of the vector is doubled each time it needs to grow.                                           </div></li></ul> <a end_ctx_id="field:capacityIncrement"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:Vector-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:Vector-int-int-"/><a name="Vector-int-int-"/><ul class="blockList"><li class="blockList"><h4>Vector</h4><pre>public Vector(int initialCapacity,
              int capacityIncrement)</pre><div class="block">Constructs an empty vector with the specified initial capacity and capacity increment.           </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>initialCapacity</code> - the initial capacity of the vector        </dd><dd> <code>capacityIncrement</code> - the amount by which the capacity is increased when the vector overflows              </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if the specified initial capacity is negative         </dd>  </dl></li></ul> <a end_ctx_id="constructor:Vector-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:Vector-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:Vector-int-"/><a name="Vector-int-"/><ul class="blockList"><li class="blockList"><h4>Vector</h4><pre>public Vector(int initialCapacity)</pre><div class="block">Constructs an empty vector with the specified initial capacity and with its capacity increment equal to zero.                </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>initialCapacity</code> - the initial capacity of the vector        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if the specified initial capacity is negative         </dd>  </dl></li></ul> <a end_ctx_id="constructor:Vector-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:Vector-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:Vector--"/><a name="Vector--"/><ul class="blockList"><li class="blockList"><h4>Vector</h4><pre>public Vector()</pre><div class="block">Constructs an empty vector so that its internal data array has size <code>10</code> and its standard capacity increment is zero.                   </div></li></ul> <a end_ctx_id="constructor:Vector--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:Vector-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:Vector-java.util.Collection-"/><a name="Vector-java.util.Collection-"/><ul class="blockListLast"><li class="blockList"><h4>Vector</h4><pre>public Vector(<a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;? extends <a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt; c)</pre><div class="block">Constructs a vector containing the elements of the specified collection, in the order they are returned by the collection's iterator.                   </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - the collection whose elements are to be placed into this vector             </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified collection is null        </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd>   </dl></li></ul> <a end_ctx_id="constructor:Vector-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:copyInto-java.lang.Object:A- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:copyInto-java.lang.Object:A-"/><a name="copyInto-java.lang.Object:A-"/><ul class="blockList"><li class="blockList"><h4>copyInto</h4><pre>public void copyInto(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a>[] anArray)</pre><div class="block">Copies the components of this vector into the specified array. The item at index <code>k</code> in this vector is copied into component <code>k</code> of <code>anArray</code>.                        </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>anArray</code> - the array into which the components get copied          </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the given array is null        </dd><dd> <code><a href="../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if the specified array is not large enough to hold all the components of this vector                  </dd><dd> <code><a href="../../java/lang/ArrayStoreException.html" title="class in java.lang">ArrayStoreException</a></code> - if a component of this vector is not of a runtime type that can be stored in the specified array                      </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Vector.html#toArray-T:A-"><code>toArray(Object[])</code></a> </dd>   </dl></li></ul> <a end_ctx_id="method:copyInto-java.lang.Object:A-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:trimToSize-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:trimToSize--"/><a name="trimToSize--"/><ul class="blockList"><li class="blockList"><h4>trimToSize</h4><pre>public void trimToSize()</pre><div class="block">Trims the capacity of this vector to be the vector's current size. If the capacity of this vector is larger than its current size, then the capacity is changed to equal the size by replacing its internal data array, kept in the field <code>elementData</code>, with a smaller one. An application can use this operation to minimize the storage of a vector.                                                            </div></li></ul> <a end_ctx_id="method:trimToSize--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:ensureCapacity-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:ensureCapacity-int-"/><a name="ensureCapacity-int-"/><ul class="blockList"><li class="blockList"><h4>ensureCapacity</h4><pre>public void ensureCapacity(int minCapacity)</pre><div class="block">Increases the capacity of this vector, if necessary, to ensure that it can hold at least the number of components specified by the minimum capacity argument.<p>If the current capacity of this vector is less than <code>minCapacity</code>, then its capacity is increased by replacing its internal data array, kept in the field <code>elementData</code>, with a larger one. The size of the new data array will be the old size plus <code>capacityIncrement</code>, unless the value of <code>capacityIncrement</code> is less than or equal to zero, in which case the new capacity will be twice the old capacity; but if this new size is still smaller than <code>minCapacity</code>, then the new capacity will be <code>minCapacity</code>.                                                                                     </p>                         </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>minCapacity</code> - the desired minimum capacity      </dd> </dl></li></ul> <a end_ctx_id="method:ensureCapacity-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:setSize-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:setSize-int-"/><a name="setSize-int-"/><ul class="blockList"><li class="blockList"><h4>setSize</h4><pre>public void setSize(int newSize)</pre><div class="block">Sets the size of this vector. If the new size is greater than the current size, new <code>null</code> items are added to the end of the vector. If the new size is less than the current size, all components at index <code>newSize</code> and greater are discarded.                                             </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>newSize</code> - the new size of this vector        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/ArrayIndexOutOfBoundsException.html" title="class in java.lang">ArrayIndexOutOfBoundsException</a></code> - if the new size is negative        </dd>  </dl></li></ul> <a end_ctx_id="method:setSize-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:capacity-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:capacity--"/><a name="capacity--"/><ul class="blockList"><li class="blockList"><h4>capacity</h4><pre>public int capacity()</pre><div class="block">Returns the current capacity of this vector.      </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the current capacity (the length of its internal data array, kept in the field <code>elementData</code> of this vector)                 </dd> </dl></li></ul> <a end_ctx_id="method:capacity--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:size-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:size--"/><a name="size--"/><ul class="blockList"><li class="blockList"><h4>size</h4><pre>public int size()</pre><div class="block">Returns the number of components in this vector.       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#size--">size</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#size--">size</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#size--">size</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the number of components in this vector      </dd>    </dl></li></ul> <a end_ctx_id="method:size--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:isEmpty-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:isEmpty--"/><a name="isEmpty--"/><ul class="blockList"><li class="blockList"><h4>isEmpty</h4><pre>public boolean isEmpty()</pre><div class="block">Tests if this vector has no components.      </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#isEmpty--">isEmpty</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#isEmpty--">isEmpty</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#isEmpty--">isEmpty</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if and only if this vector has no components, that is, its size is zero; <code>false</code> otherwise.                  </dd>    </dl></li></ul> <a end_ctx_id="method:isEmpty--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:elements-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:elements--"/><a name="elements--"/><ul class="blockList"><li class="blockList"><h4>elements</h4><pre>public <a href="../../java/util/Enumeration.html" title="interface in java.util">Enumeration</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt; elements()</pre><div class="block">Returns an enumeration of the components of this vector. The returned <code>Enumeration</code> object will generate all items in this vector. The first item generated is the item at index <code>0</code>, then the item at index <code>1</code>, and so on.                                      </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an enumeration of the components of this vector       </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Iterator.html" title="interface in java.util"><code>Iterator</code></a> </dd>  </dl></li></ul> <a end_ctx_id="method:elements--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:contains-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:contains-java.lang.Object-"/><a name="contains-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>contains</h4><pre>public boolean contains(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Returns <code>true</code> if this vector contains the specified element. More formally, returns <code>true</code> if and only if this vector contains at least one element <code>e</code> such that <tt>(o==null ? e==null : o.equals(e))</tt>.                           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#contains-java.lang.Object-">contains</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#contains-java.lang.Object-">contains</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#contains-java.lang.Object-">contains</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element whose presence in this vector is to be tested            </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this vector contains the specified element        </dd>     </dl></li></ul> <a end_ctx_id="method:contains-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:indexOf-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:indexOf-java.lang.Object-"/><a name="indexOf-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>indexOf</h4><pre>public int indexOf(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Returns the index of the first occurrence of the specified element in this vector, or -1 if this vector does not contain the element. More formally, returns the lowest index <code>i</code> such that <tt>(o==null ? get(i)==null : o.equals(get(i)))</tt>, or -1 if there is no such index.                                         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#indexOf-java.lang.Object-">indexOf</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractList.html#indexOf-java.lang.Object-">indexOf</a></code> in class <code><a href="../../java/util/AbstractList.html" title="class in java.util">AbstractList</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element to search for      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the index of the first occurrence of the specified element in this vector, or -1 if this vector does not contain the element                      </dd>    </dl></li></ul> <a end_ctx_id="method:indexOf-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:indexOf-java.lang.Object-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:indexOf-java.lang.Object-int-"/><a name="indexOf-java.lang.Object-int-"/><ul class="blockList"><li class="blockList"><h4>indexOf</h4><pre>public int indexOf(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> o,
                   int index)</pre><div class="block">Returns the index of the first occurrence of the specified element in this vector, searching forwards from <code>index</code>, or returns -1 if the element is not found. More formally, returns the lowest index <code>i</code> such that <tt>(i &gt;= index &amp;&amp; (o==null ? get(i)==null : o.equals(get(i))))</tt>, or -1 if there is no such index.                                            </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element to search for      </dd><dd> <code>index</code> - index to start searching from       </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the index of the first occurrence of the element in this vector at position <code>index</code> or later in the vector; <code>-1</code> if the element is not found.                          </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if the specified index is negative        </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/Object.html#equals-java.lang.Object-"><code>Object.equals(Object)</code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:indexOf-java.lang.Object-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:lastIndexOf-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:lastIndexOf-java.lang.Object-"/><a name="lastIndexOf-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>lastIndexOf</h4><pre>public int lastIndexOf(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Returns the index of the last occurrence of the specified element in this vector, or -1 if this vector does not contain the element. More formally, returns the highest index <code>i</code> such that <tt>(o==null ? get(i)==null : o.equals(get(i)))</tt>, or -1 if there is no such index.                                         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#lastIndexOf-java.lang.Object-">lastIndexOf</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractList.html#lastIndexOf-java.lang.Object-">lastIndexOf</a></code> in class <code><a href="../../java/util/AbstractList.html" title="class in java.util">AbstractList</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element to search for      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the index of the last occurrence of the specified element in this vector, or -1 if this vector does not contain the element                      </dd>    </dl></li></ul> <a end_ctx_id="method:lastIndexOf-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:lastIndexOf-java.lang.Object-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:lastIndexOf-java.lang.Object-int-"/><a name="lastIndexOf-java.lang.Object-int-"/><ul class="blockList"><li class="blockList"><h4>lastIndexOf</h4><pre>public int lastIndexOf(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> o,
                       int index)</pre><div class="block">Returns the index of the last occurrence of the specified element in this vector, searching backwards from <code>index</code>, or returns -1 if the element is not found. More formally, returns the highest index <code>i</code> such that <tt>(i &lt;= index &amp;&amp; (o==null ? get(i)==null : o.equals(get(i))))</tt>, or -1 if there is no such index.                                            </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element to search for      </dd><dd> <code>index</code> - index to start searching backwards from        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the index of the last occurrence of the element at position less than or equal to <code>index</code> in this vector; -1 if the element is not found.                          </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if the specified index is greater than or equal to the current size of this vector                  </dd>   </dl></li></ul> <a end_ctx_id="method:lastIndexOf-java.lang.Object-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:elementAt-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:elementAt-int-"/><a name="elementAt-int-"/><ul class="blockList"><li class="blockList"><h4>elementAt</h4><pre>public <a href="../../java/util/Vector.html" title="type parameter in Vector">E</a> elementAt(int index)</pre><div class="block">Returns the component at the specified index.<p>This method is identical in functionality to the <a href="../../java/util/Vector.html#get-int-"><code>get(int)</code></a> method (which is part of the <a href="../../java/util/List.html" title="interface in java.util"><code>List</code></a> interface).                </p>      </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - an index into this vector       </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the component at the specified index     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/ArrayIndexOutOfBoundsException.html" title="class in java.lang">ArrayIndexOutOfBoundsException</a></code> - if the index is out of range (<code>index &lt; 0 || index &gt;= size()      </code>)          </dd>   </dl></li></ul> <a end_ctx_id="method:elementAt-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:firstElement-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:firstElement--"/><a name="firstElement--"/><ul class="blockList"><li class="blockList"><h4>firstElement</h4><pre>public <a href="../../java/util/Vector.html" title="type parameter in Vector">E</a> firstElement()</pre><div class="block">Returns the first component (the item at index <code>0</code>) of this vector.           </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the first component of this vector     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/util/NoSuchElementException.html" title="class in java.util">NoSuchElementException</a></code> - if this vector has no components        </dd>  </dl></li></ul> <a end_ctx_id="method:firstElement--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:lastElement-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:lastElement--"/><a name="lastElement--"/><ul class="blockList"><li class="blockList"><h4>lastElement</h4><pre>public <a href="../../java/util/Vector.html" title="type parameter in Vector">E</a> lastElement()</pre><div class="block">Returns the last component of the vector.      </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the last component of the vector, i.e., the component at index <code>size() - 1</code>.           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/util/NoSuchElementException.html" title="class in java.util">NoSuchElementException</a></code> - if this vector is empty       </dd>  </dl></li></ul> <a name="setElementAt-java.lang.Object-int-"/><a end_ctx_id="method:lastElement--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:setElementAt-E-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:setElementAt-E-int-"/><a name="setElementAt-E-int-"/><ul class="blockList"><li class="blockList"><h4>setElementAt</h4><pre>public void setElementAt(<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a> obj,
                         int index)</pre><div class="block">Sets the component at the specified <code>index</code> of this vector to be the specified object. The previous component at that position is discarded.<p>The index must be a value greater than or equal to <code>0</code> and less than the current size of the vector.                    </p><p>This method is identical in functionality to the <a href="../../java/util/Vector.html#set-int-E-"><code>set(int, E) </code></a> method (which is part of the <a href="../../java/util/List.html" title="interface in java.util"><code>List</code></a> interface). Note that the <code>set</code> method reverses the order of the parameters, to more closely match array usage. Note also that the <code>set</code> method returns the old value that was stored at the specified position.                                                  </p>                      </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>obj</code> - what the component is to be set to          </dd><dd> <code>index</code> - the specified index     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/ArrayIndexOutOfBoundsException.html" title="class in java.lang">ArrayIndexOutOfBoundsException</a></code> - if the index is out of range (<code>index &lt; 0 || index &gt;= size()      </code>)          </dd>  </dl></li></ul> <a end_ctx_id="method:setElementAt-E-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:removeElementAt-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:removeElementAt-int-"/><a name="removeElementAt-int-"/><ul class="blockList"><li class="blockList"><h4>removeElementAt</h4><pre>public void removeElementAt(int index)</pre><div class="block">Deletes the component at the specified index. Each component in this vector with an index greater or equal to the specified <code>index</code> is shifted downward to have an index one smaller than the value it had previously. The size of this vector is decreased by <code>1</code>.<p>The index must be a value greater than or equal to <code>0</code> and less than the current size of the vector.                    </p><p>This method is identical in functionality to the <a href="../../java/util/Vector.html#remove-int-"><code>remove(int)</code></a> method (which is part of the <a href="../../java/util/List.html" title="interface in java.util"><code>List</code></a> interface). Note that the <code>remove</code> method returns the old value that was stored at the specified position.                                </p>                                             </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - the index of the object to remove         </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/ArrayIndexOutOfBoundsException.html" title="class in java.lang">ArrayIndexOutOfBoundsException</a></code> - if the index is out of range (<code>index &lt; 0 || index &gt;= size()      </code>)          </dd>  </dl></li></ul> <a name="insertElementAt-java.lang.Object-int-"/><a end_ctx_id="method:removeElementAt-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:insertElementAt-E-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:insertElementAt-E-int-"/><a name="insertElementAt-E-int-"/><ul class="blockList"><li class="blockList"><h4>insertElementAt</h4><pre>public void insertElementAt(<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a> obj,
                            int index)</pre><div class="block">Inserts the specified object as a component in this vector at the specified <code>index</code>. Each component in this vector with an index greater or equal to the specified <code>index</code> is shifted upward to have an index one greater than the value it had previously.<p>The index must be a value greater than or equal to <code>0</code> and less than or equal to the current size of the vector. (If the index is equal to the current size of the vector, the new element is appended to the Vector.)                                           </p><p>This method is identical in functionality to the <a href="../../java/util/Vector.html#add-int-E-"><code>add(int, E) </code></a> method (which is part of the <a href="../../java/util/List.html" title="interface in java.util"><code>List</code></a> interface). Note that the <code>add</code> method reverses the order of the parameters, to more closely match array usage.                                 </p>                                           </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>obj</code> - the component to insert      </dd><dd> <code>index</code> - where to insert the new component        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/ArrayIndexOutOfBoundsException.html" title="class in java.lang">ArrayIndexOutOfBoundsException</a></code> - if the index is out of range (<code>index &lt; 0 || index &gt; size()      </code>)          </dd>  </dl></li></ul> <a name="addElement-java.lang.Object-"/><a end_ctx_id="method:insertElementAt-E-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:addElement-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:addElement-E-"/><a name="addElement-E-"/><ul class="blockList"><li class="blockList"><h4>addElement</h4><pre>public void addElement(<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a> obj)</pre><div class="block">Adds the specified component to the end of this vector, increasing its size by one. The capacity of this vector is increased if its size becomes greater than its capacity.<p>This method is identical in functionality to the <a href="../../java/util/Vector.html#add-E-"><code>add(E)</code></a> method (which is part of the <a href="../../java/util/List.html" title="interface in java.util"><code>List</code></a> interface).                </p>                             </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>obj</code> - the component to be added       </dd> </dl></li></ul> <a end_ctx_id="method:addElement-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:removeElement-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:removeElement-java.lang.Object-"/><a name="removeElement-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>removeElement</h4><pre>public boolean removeElement(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> obj)</pre><div class="block">Removes the first (lowest-indexed) occurrence of the argument from this vector. If the object is found in this vector, each component in the vector with an index greater or equal to the object's index is shifted downward to have an index one smaller than the value it had previously.<p>This method is identical in functionality to the <a href="../../java/util/Vector.html#remove-java.lang.Object-"><code>remove(Object)</code></a> method (which is part of the <a href="../../java/util/List.html" title="interface in java.util"><code>List</code></a> interface).                </p>                                                </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>obj</code> - the component to be removed       </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if the argument was a component of this vector; <code>false</code> otherwise.            </dd>  </dl></li></ul> <a end_ctx_id="method:removeElement-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:removeAllElements-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:removeAllElements--"/><a name="removeAllElements--"/><ul class="blockList"><li class="blockList"><h4>removeAllElements</h4><pre>public void removeAllElements()</pre><div class="block">Removes all components from this vector and sets its size to zero.<p>This method is identical in functionality to the <a href="../../java/util/Vector.html#clear--"><code>clear()</code></a> method (which is part of the <a href="../../java/util/List.html" title="interface in java.util"><code>List</code></a> interface).                </p>           </div></li></ul> <a end_ctx_id="method:removeAllElements--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:clone-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:clone--"/><a name="clone--"/><ul class="blockList"><li class="blockList"><h4>clone</h4><pre>public <a href="../../java/lang/Object.html" title="class in java.lang">Object</a> clone()</pre><div class="block">Returns a clone of this vector. The copy will contain a reference to a clone of the internal data array, not a reference to the original internal data array of this <code>Vector</code> object.                                </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/lang/Object.html#clone--">clone</a></code> in class <code><a href="../../java/lang/Object.html" title="class in java.lang">Object</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a clone of this vector    </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/Cloneable.html" title="interface in java.lang"><code>Cloneable</code></a> </dd>   </dl></li></ul> <a end_ctx_id="method:clone--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toArray-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toArray--"/><a name="toArray--"/><ul class="blockList"><li class="blockList"><h4>toArray</h4><pre>public <a href="../../java/lang/Object.html" title="class in java.lang">Object</a>[] toArray()</pre><div class="block">Returns an array containing all of the elements in this Vector in the correct order.              </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#toArray--">toArray</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#toArray--">toArray</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#toArray--">toArray</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an array containing all of the elements in this collection         </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Arrays.html#asList-T...-"><code>Arrays.asList(Object[])</code></a> </dd>      </dl></li></ul> <a name="toArray-java.lang.Object:A-"/><a end_ctx_id="method:toArray--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toArray-T:A- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toArray-T:A-"/><a name="toArray-T:A-"/><ul class="blockList"><li class="blockList"><h4>toArray</h4><pre>public &lt;T&gt; T[] toArray(T[] a)</pre><div class="block">Returns an array containing all of the elements in this Vector in the correct order; the runtime type of the returned array is that of the specified array. If the Vector fits in the specified array, it is returned therein. Otherwise, a new array is allocated with the runtime type of the specified array and the size of this Vector.<p>If the Vector fits in the specified array with room to spare (i.e., the array has more elements than the Vector), the element in the array immediately following the end of the Vector is set to null. (This is useful in determining the length of the Vector <em>only</em> if the caller knows that the Vector does not contain any null elements.)                                                            </p>                                                           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#toArray-T:A-">toArray</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#toArray-T:A-">toArray</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#toArray-T:A-">toArray</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Type Parameters: </span>   </dt><dd> <code>T</code> - the runtime type of the array to contain the collection            </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>a</code> - the array into which the elements of the Vector are to be stored, if it is big enough; otherwise, a new array of the same runtime type is allocated for this purpose.                                  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an array containing the elements of the Vector       </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/ArrayStoreException.html" title="class in java.lang">ArrayStoreException</a></code> - if the runtime type of a is not a supertype of the runtime type of every element in this Vector                      </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the given array is null        </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd>        </dl></li></ul> <a end_ctx_id="method:toArray-T:A-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:get-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:get-int-"/><a name="get-int-"/><ul class="blockList"><li class="blockList"><h4>get</h4><pre>public <a href="../../java/util/Vector.html" title="type parameter in Vector">E</a> get(int index)</pre><div class="block">Returns the element at the specified position in this Vector.         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#get-int-">get</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/AbstractList.html#get-int-">get</a></code> in class <code><a href="../../java/util/AbstractList.html" title="class in java.util">AbstractList</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - index of the element to return        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>object at the specified index    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/ArrayIndexOutOfBoundsException.html" title="class in java.lang">ArrayIndexOutOfBoundsException</a></code> - if the index is out of range (<code>index &lt; 0 || index &gt;= size()      </code>)          </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd>      </dl></li></ul> <a name="set-int-java.lang.Object-"/><a end_ctx_id="method:get-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:set-int-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:set-int-E-"/><a name="set-int-E-"/><ul class="blockList"><li class="blockList"><h4>set</h4><pre>public <a href="../../java/util/Vector.html" title="type parameter in Vector">E</a> set(int index,
             <a href="../../java/util/Vector.html" title="type parameter in Vector">E</a> element)</pre><div class="block">Replaces the element at the specified position in this Vector with the specified element.             </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#set-int-E-">set</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractList.html#set-int-E-">set</a></code> in class <code><a href="../../java/util/AbstractList.html" title="class in java.util">AbstractList</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - index of the element to replace        </dd><dd> <code>element</code> - element to be stored at the specified position          </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the element previously at the specified position      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/ArrayIndexOutOfBoundsException.html" title="class in java.lang">ArrayIndexOutOfBoundsException</a></code> - if the index is out of range (<code>index &lt; 0 || index &gt;= size()      </code>)          </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd>      </dl></li></ul> <a name="add-java.lang.Object-"/><a end_ctx_id="method:set-int-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:add-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:add-E-"/><a name="add-E-"/><ul class="blockList"><li class="blockList"><h4>add</h4><pre>public boolean add(<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a> e)</pre><div class="block">Appends the specified element to the end of this Vector.         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#add-E-">add</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#add-E-">add</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractList.html#add-E-">add</a></code> in class <code><a href="../../java/util/AbstractList.html" title="class in java.util">AbstractList</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - element to be appended to this Vector         </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> (as specified by <a href="../../java/util/Collection.html#add-E-"><code>Collection.add(E)</code></a>)     </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd>      </dl></li></ul> <a end_ctx_id="method:add-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:remove-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:remove-java.lang.Object-"/><a name="remove-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>remove</h4><pre>public boolean remove(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Removes the first occurrence of the specified element in this Vector If the Vector does not contain the element, it is unchanged. More formally, removes the element with the lowest index i such that <code>(o==null ? get(i)==null : o.equals(get(i)))    </code> (if such an element exists).                                       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#remove-java.lang.Object-">remove</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#remove-java.lang.Object-">remove</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#remove-java.lang.Object-">remove</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element to be removed from this Vector, if present           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>true if the Vector contained the specified element       </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd>      </dl></li></ul> <a name="add-int-java.lang.Object-"/><a end_ctx_id="method:remove-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:add-int-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:add-int-E-"/><a name="add-int-E-"/><ul class="blockList"><li class="blockList"><h4>add</h4><pre>public void add(int index,
                <a href="../../java/util/Vector.html" title="type parameter in Vector">E</a> element)</pre><div class="block">Inserts the specified element at the specified position in this Vector. Shifts the element currently at that position (if any) and any subsequent elements to the right (adds one to their indices).                               </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#add-int-E-">add</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractList.html#add-int-E-">add</a></code> in class <code><a href="../../java/util/AbstractList.html" title="class in java.util">AbstractList</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - index at which the specified element is to be inserted            </dd><dd> <code>element</code> - element to be inserted      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/ArrayIndexOutOfBoundsException.html" title="class in java.lang">ArrayIndexOutOfBoundsException</a></code> - if the index is out of range (<code>index &lt; 0 || index &gt; size()      </code>)          </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd>     </dl></li></ul> <a end_ctx_id="method:add-int-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:remove-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:remove-int-"/><a name="remove-int-"/><ul class="blockList"><li class="blockList"><h4>remove</h4><pre>public <a href="../../java/util/Vector.html" title="type parameter in Vector">E</a> remove(int index)</pre><div class="block">Removes the element at the specified position in this Vector. Shifts any subsequent elements to the left (subtracts one from their indices). Returns the element that was removed from the Vector.                              </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#remove-int-">remove</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractList.html#remove-int-">remove</a></code> in class <code><a href="../../java/util/AbstractList.html" title="class in java.util">AbstractList</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - the index of the element to be removed          </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>element that was removed   </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/ArrayIndexOutOfBoundsException.html" title="class in java.lang">ArrayIndexOutOfBoundsException</a></code> - if the index is out of range (<code>index &lt; 0 || index &gt;= size()      </code>)          </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd>      </dl></li></ul> <a end_ctx_id="method:remove-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:clear-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:clear--"/><a name="clear--"/><ul class="blockList"><li class="blockList"><h4>clear</h4><pre>public void clear()</pre><div class="block">Removes all of the elements from this Vector. The Vector will be empty after this call returns (unless it throws an exception).                     </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#clear--">clear</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#clear--">clear</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractList.html#clear--">clear</a></code> in class <code><a href="../../java/util/AbstractList.html" title="class in java.util">AbstractList</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd>    </dl></li></ul> <a end_ctx_id="method:clear--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:containsAll-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:containsAll-java.util.Collection-"/><a name="containsAll-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>containsAll</h4><pre>public boolean containsAll(<a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;?&gt; c)</pre><div class="block">Returns true if this Vector contains all of the elements in the specified Collection.             </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#containsAll-java.util.Collection-">containsAll</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#containsAll-java.util.Collection-">containsAll</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#containsAll-java.util.Collection-">containsAll</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - a collection whose elements will be tested for containment in this Vector              </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>true if this Vector contains all of the elements in the specified collection            </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified collection is null        </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/AbstractCollection.html#contains-java.lang.Object-"><code>AbstractCollection.contains(Object)</code></a> </dd>       </dl></li></ul> <a end_ctx_id="method:containsAll-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:addAll-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:addAll-java.util.Collection-"/><a name="addAll-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>addAll</h4><pre>public boolean addAll(<a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;? extends <a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt; c)</pre><div class="block">Appends all of the elements in the specified Collection to the end of this Vector, in the order that they are returned by the specified Collection's Iterator. The behavior of this operation is undefined if the specified Collection is modified while the operation is in progress. (This implies that the behavior of this call is undefined if the specified Collection is this Vector, and this Vector is nonempty.)                                                                   </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#addAll-java.util.Collection-">addAll</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#addAll-java.util.Collection-">addAll</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#addAll-java.util.Collection-">addAll</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - elements to be inserted into this Vector         </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this Vector changed as a result of the call           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified collection is null        </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/AbstractCollection.html#add-E-"><code>AbstractCollection.add(Object)</code></a> </dd>        </dl></li></ul> <a end_ctx_id="method:addAll-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:removeAll-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:removeAll-java.util.Collection-"/><a name="removeAll-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>removeAll</h4><pre>public boolean removeAll(<a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;?&gt; c)</pre><div class="block">Removes from this Vector all of its elements that are contained in the specified Collection.              </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#removeAll-java.util.Collection-">removeAll</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#removeAll-java.util.Collection-">removeAll</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#removeAll-java.util.Collection-">removeAll</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - a collection of elements to be removed from the Vector            </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>true if this Vector changed as a result of the call          </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the types of one or more elements in this vector are incompatible with the specified collection (<a href="Collection.html#optional-restrictions">optional</a>)                    </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if this vector contains one or more null elements and the specified collection does not support null elements (<a href="Collection.html#optional-restrictions">optional</a>), or if the specified collection is null                            </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/AbstractCollection.html#remove-java.lang.Object-"><code>AbstractCollection.remove(Object)</code></a>, <a href="../../java/util/AbstractCollection.html#contains-java.lang.Object-"><code>AbstractCollection.contains(Object)</code></a>  </dd>        </dl></li></ul> <a end_ctx_id="method:removeAll-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:retainAll-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:retainAll-java.util.Collection-"/><a name="retainAll-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>retainAll</h4><pre>public boolean retainAll(<a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;?&gt; c)</pre><div class="block">Retains only the elements in this Vector that are contained in the specified Collection. In other words, removes from this Vector all of its elements that are not contained in the specified Collection.                                </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#retainAll-java.util.Collection-">retainAll</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#retainAll-java.util.Collection-">retainAll</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#retainAll-java.util.Collection-">retainAll</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - a collection of elements to be retained in this Vector (all other elements are removed)                 </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>true if this Vector changed as a result of the call          </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the types of one or more elements in this vector are incompatible with the specified collection (<a href="Collection.html#optional-restrictions">optional</a>)                    </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if this vector contains one or more null elements and the specified collection does not support null elements (<a href="Collection.html#optional-restrictions">optional</a>), or if the specified collection is null                            </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/AbstractCollection.html#remove-java.lang.Object-"><code>AbstractCollection.remove(Object)</code></a>, <a href="../../java/util/AbstractCollection.html#contains-java.lang.Object-"><code>AbstractCollection.contains(Object)</code></a>  </dd>        </dl></li></ul> <a end_ctx_id="method:retainAll-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:addAll-int-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:addAll-int-java.util.Collection-"/><a name="addAll-int-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>addAll</h4><pre>public boolean addAll(int index,
                      <a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;? extends <a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt; c)</pre><div class="block">Inserts all of the elements in the specified Collection into this Vector at the specified position. Shifts the element currently at that position (if any) and any subsequent elements to the right (increases their indices). The new elements will appear in the Vector in the order that they are returned by the specified Collection's iterator.                                                      </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#addAll-int-java.util.Collection-">addAll</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractList.html#addAll-int-java.util.Collection-">addAll</a></code> in class <code><a href="../../java/util/AbstractList.html" title="class in java.util">AbstractList</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - index at which to insert the first element from the specified collection              </dd><dd> <code>c</code> - elements to be inserted into this Vector         </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this Vector changed as a result of the call           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/ArrayIndexOutOfBoundsException.html" title="class in java.lang">ArrayIndexOutOfBoundsException</a></code> - if the index is out of range (<code>index &lt; 0 || index &gt; size()      </code>)          </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified collection is null        </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd>      </dl></li></ul> <a end_ctx_id="method:addAll-int-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:equals-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:equals-java.lang.Object-"/><a name="equals-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>equals</h4><pre>public boolean equals(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Compares the specified Object with this Vector for equality. Returns true if and only if the specified Object is also a List, both Lists have the same size, and all corresponding pairs of elements in the two Lists are <em>equal</em>. (Two elements <code>e1</code> and <code>e2</code> are <em>equal</em> if <code>(e1==null ? e2==null : e1.equals(e2))    </code>.) In other words, two Lists are defined to be equal if they contain the same elements in the same order.                                                                    </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#equals-java.lang.Object-">equals</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#equals-java.lang.Object-">equals</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractList.html#equals-java.lang.Object-">equals</a></code> in class <code><a href="../../java/util/AbstractList.html" title="class in java.util">AbstractList</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - the Object to be compared for equality with this Vector            </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>true if the specified Object is equal to this Vector         </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/Object.html#hashCode--"><code>Object.hashCode()</code></a>, <a href="../../java/util/HashMap.html" title="class in java.util"><code>HashMap</code></a>  </dd>      </dl></li></ul> <a end_ctx_id="method:equals-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:hashCode-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:hashCode--"/><a name="hashCode--"/><ul class="blockList"><li class="blockList"><h4>hashCode</h4><pre>public int hashCode()</pre><div class="block">Returns the hash code value for this Vector.       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#hashCode--">hashCode</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#hashCode--">hashCode</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractList.html#hashCode--">hashCode</a></code> in class <code><a href="../../java/util/AbstractList.html" title="class in java.util">AbstractList</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the hash code value for this list      </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/Object.html#equals-java.lang.Object-"><code>Object.equals(java.lang.Object)</code></a>, <a href="../../java/lang/System.html#identityHashCode-java.lang.Object-"><code>System.identityHashCode(java.lang.Object)</code></a>  </dd>     </dl></li></ul> <a end_ctx_id="method:hashCode--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toString-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toString--"/><a name="toString--"/><ul class="blockList"><li class="blockList"><h4>toString</h4><pre>public <a href="../../java/lang/String.html" title="class in java.lang">String</a> toString()</pre><div class="block">Returns a string representation of this Vector, containing the String representation of each element.             </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#toString--">toString</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a string representation of this collection     </dd>  </dl></li></ul> <a end_ctx_id="method:toString--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:subList-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:subList-int-int-"/><a name="subList-int-int-"/><ul class="blockList"><li class="blockList"><h4>subList</h4><pre>public <a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt; subList(int fromIndex,
                       int toIndex)</pre><div class="block">Returns a view of the portion of this List between fromIndex, inclusive, and toIndex, exclusive. (If fromIndex and toIndex are equal, the returned List is empty.) The returned List is backed by this List, so changes in the returned List are reflected in this List, and vice-versa. The returned List supports all of the optional List operations supported by this List.<p>This method eliminates the need for explicit range operations (of the sort that commonly exist for arrays). Any operation that expects a List can be used as a range operation by operating on a subList view instead of a whole List. For example, the following idiom removes a range of elements from a List:<pre>
      list.subList(from, to).clear();
 </pre> Similar idioms may be constructed for indexOf and lastIndexOf, and all of the algorithms in the Collections class can be applied to a subList.                                                                             </p><p>The semantics of the List returned by this method become undefined if the backing list (i.e., this List) is <i>structurally modified </i> in any way other than via the returned List. (Structural modifications are those that change the size of the List, or otherwise perturb it in such a fashion that iterations in progress may yield incorrect results.)                                                       </p>                                                            </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#subList-int-int-">subList</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractList.html#subList-int-int-">subList</a></code> in class <code><a href="../../java/util/AbstractList.html" title="class in java.util">AbstractList</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>fromIndex</code> - low endpoint (inclusive) of the subList        </dd><dd> <code>toIndex</code> - high endpoint (exclusive) of the subList        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a view of the specified range within this List        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if an endpoint index value is out of range <code>(fromIndex &lt; 0 || toIndex &gt; size)      </code>            </dd><dd> <code><a href="../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if the endpoint indices are out of order <code>(fromIndex &gt; toIndex)  </code>           </dd>     </dl></li></ul> <a end_ctx_id="method:subList-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:removeRange-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:removeRange-int-int-"/><a name="removeRange-int-int-"/><ul class="blockList"><li class="blockList"><h4>removeRange</h4><pre>protected void removeRange(int fromIndex,
                           int toIndex)</pre><div class="block">Removes from this list all of the elements whose index is between <code>fromIndex</code>, inclusive, and <code>toIndex</code>, exclusive. Shifts any succeeding elements to the left (reduces their index). This call shortens the list by <code>(toIndex - fromIndex)  </code> elements. (If <code>toIndex==fromIndex</code>, this operation has no effect.)                                         </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractList.html#removeRange-int-int-">removeRange</a></code> in class <code><a href="../../java/util/AbstractList.html" title="class in java.util">AbstractList</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>fromIndex</code> - index of first element to be removed         </dd><dd> <code>toIndex</code> - index after last element to be removed         </dd>  </dl></li></ul> <a end_ctx_id="method:removeRange-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:listIterator-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:listIterator-int-"/><a name="listIterator-int-"/><ul class="blockList"><li class="blockList"><h4>listIterator</h4><pre>public <a href="../../java/util/ListIterator.html" title="interface in java.util">ListIterator</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt; listIterator(int index)</pre><div class="block">Returns a list iterator over the elements in this list (in proper sequence), starting at the specified position in the list. The specified index indicates the first element that would be returned by an initial call to <a href="../../java/util/ListIterator.html#next--"><code>next</code></a>. An initial call to <a href="../../java/util/ListIterator.html#previous--"><code>previous</code></a> would return the element with the specified index minus one.<p>The returned list iterator is <a href="#fail-fast"><i>fail-fast</i></a>.     </p>                                                    </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#listIterator-int-">listIterator</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractList.html#listIterator-int-">listIterator</a></code> in class <code><a href="../../java/util/AbstractList.html" title="class in java.util">AbstractList</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - index of the first element to be returned from the list iterator (by a call to <a href="../../java/util/ListIterator.html#next--"><code>next</code></a>)                   </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a list iterator over the elements in this list (in proper sequence), starting at the specified position in the list                   </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if the index is out of range (<code>index &lt; 0 || index &gt; size()      </code>)          </dd>     </dl></li></ul> <a end_ctx_id="method:listIterator-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:listIterator-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:listIterator--"/><a name="listIterator--"/><ul class="blockList"><li class="blockList"><h4>listIterator</h4><pre>public <a href="../../java/util/ListIterator.html" title="interface in java.util">ListIterator</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt; listIterator()</pre><div class="block">Returns a list iterator over the elements in this list (in proper sequence).<p>The returned list iterator is <a href="#fail-fast"><i>fail-fast</i></a>.     </p>            </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#listIterator--">listIterator</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractList.html#listIterator--">listIterator</a></code> in class <code><a href="../../java/util/AbstractList.html" title="class in java.util">AbstractList</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a list iterator over the elements in this list (in proper sequence)           </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Vector.html#listIterator-int-"><code>listIterator(int)</code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:listIterator--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:iterator-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:iterator--"/><a name="iterator--"/><ul class="blockList"><li class="blockList"><h4>iterator</h4><pre>public <a href="../../java/util/Iterator.html" title="interface in java.util">Iterator</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt; iterator()</pre><div class="block">Returns an iterator over the elements in this list in proper sequence.<p>The returned iterator is <a href="#fail-fast"><i>fail-fast</i></a>.    </p>           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/Iterable.html#iterator--">iterator</a></code> in interface <code><a href="../../java/lang/Iterable.html" title="interface in java.lang">Iterable</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#iterator--">iterator</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#iterator--">iterator</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractList.html#iterator--">iterator</a></code> in class <code><a href="../../java/util/AbstractList.html" title="class in java.util">AbstractList</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an iterator over the elements in this list in proper sequence          </dd>     </dl></li></ul> <a end_ctx_id="method:iterator--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:forEach-java.util.function.Consumer- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:forEach-java.util.function.Consumer-"><span class="diff-html-added"/></a><a name="forEach-java.util.function.Consumer-"/><ul class="blockList"><li class="blockList"><h4><span class="diff-html-added">forEach</span></h4><pre><span class="diff-html-added">public void forEach(</span><a href="../../java/util/function/Consumer.html" title="interface in java.util.function"><span class="diff-html-added">Consumer</span></a><span class="diff-html-added">&lt;?</span> <span class="diff-html-added">super</span> <a href="../../java/util/Vector.html" title="type parameter in Vector"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt; action)</span></pre><div class="block"> <span class="descfrmTypeLabel"><span class="diff-html-added">Description</span> <span class="diff-html-added">copied</span> <span class="diff-html-added">from</span> <span class="diff-html-added">interface:</span> <code><a href="../../java/lang/Iterable.html#forEach-java.util.function.Consumer-"><span class="diff-html-added">Iterable</span></a></code>   </span> </div><div class="block"><span class="diff-html-added">Performs</span> <span class="diff-html-added">the</span> <span class="diff-html-added">given</span> <span class="diff-html-added">action</span> <span class="diff-html-added">for</span> <span class="diff-html-added">each</span> <span class="diff-html-added">element</span> <span class="diff-html-added">of</span> <span class="diff-html-added">the</span> <code><span class="diff-html-added">Iterable</span></code> <span class="diff-html-added">until</span> <span class="diff-html-added">all</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">have</span> <span class="diff-html-added">been</span> <span class="diff-html-added">processed</span> <span class="diff-html-added">or</span> <span class="diff-html-added">the</span> <span class="diff-html-added">action</span> <span class="diff-html-added">throws</span> <span class="diff-html-added">an</span> <span class="diff-html-added">exception.</span> <span class="diff-html-added">Unless</span> <span class="diff-html-added">otherwise</span> <span class="diff-html-added">specified</span> <span class="diff-html-added">by</span> <span class="diff-html-added">the</span> <span class="diff-html-added">implementing</span> <span class="diff-html-added">class,</span> <span class="diff-html-added">actions</span> <span class="diff-html-added">are</span> <span class="diff-html-added">performed</span> <span class="diff-html-added">in</span> <span class="diff-html-added">the</span> <span class="diff-html-added">order</span> <span class="diff-html-added">of</span> <span class="diff-html-added">iteration</span> <span class="diff-html-added">(if</span> <span class="diff-html-added">an</span> <span class="diff-html-added">iteration</span> <span class="diff-html-added">order</span> <span class="diff-html-added">is</span> <span class="diff-html-added">specified).</span> <span class="diff-html-added">Exceptions</span> <span class="diff-html-added">thrown</span> <span class="diff-html-added">by</span> <span class="diff-html-added">the</span> <span class="diff-html-added">action</span> <span class="diff-html-added">are</span> <span class="diff-html-added">relayed</span> <span class="diff-html-added">to</span> <span class="diff-html-added">the</span> <span class="diff-html-added">caller.</span>                                                    </div><dl> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../java/lang/Iterable.html#forEach-java.util.function.Consumer-"><span class="diff-html-added">forEach</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../java/lang/Iterable.html" title="interface in java.lang"><span class="diff-html-added">Iterable</span></a><span class="diff-html-added">&lt;</span><a href="../../java/util/Vector.html" title="type parameter in Vector"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="paramLabel"><span class="diff-html-added">Parameters:</span></span>   </dt><dd> <code><span class="diff-html-added">action</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">The</span> <span class="diff-html-added">action</span> <span class="diff-html-added">to</span> <span class="diff-html-added">be</span> <span class="diff-html-added">performed</span> <span class="diff-html-added">for</span> <span class="diff-html-added">each</span> <span class="diff-html-added">element</span>          </dd>  </dl></li></ul> <a end_ctx_id="method:forEach-java.util.function.Consumer-"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:removeIf-java.util.function.Predicate- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:removeIf-java.util.function.Predicate-"><span class="diff-html-added"/></a><a name="removeIf-java.util.function.Predicate-"/><ul class="blockList"><li class="blockList"><h4><span class="diff-html-added">removeIf</span></h4><pre><span class="diff-html-added">public boolean removeIf(</span><a href="../../java/util/function/Predicate.html" title="interface in java.util.function"><span class="diff-html-added">Predicate</span></a><span class="diff-html-added">&lt;?</span> <span class="diff-html-added">super</span> <a href="../../java/util/Vector.html" title="type parameter in Vector"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt; filter)</span></pre><div class="block"> <span class="descfrmTypeLabel"><span class="diff-html-added">Description</span> <span class="diff-html-added">copied</span> <span class="diff-html-added">from</span> <span class="diff-html-added">interface:</span> <code><a href="../../java/util/Collection.html#removeIf-java.util.function.Predicate-"><span class="diff-html-added">Collection</span></a></code>   </span> </div><div class="block"><span class="diff-html-added">Removes</span> <span class="diff-html-added">all</span> <span class="diff-html-added">of</span> <span class="diff-html-added">the</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">of</span> <span class="diff-html-added">this</span> <span class="diff-html-added">collection</span> <span class="diff-html-added">that</span> <span class="diff-html-added">satisfy</span> <span class="diff-html-added">the</span> <span class="diff-html-added">given</span> <span class="diff-html-added">predicate.</span> <span class="diff-html-added">Errors</span> <span class="diff-html-added">or</span> <span class="diff-html-added">runtime</span> <span class="diff-html-added">exceptions</span> <span class="diff-html-added">thrown</span> <span class="diff-html-added">during</span> <span class="diff-html-added">iteration</span> <span class="diff-html-added">or</span> <span class="diff-html-added">by</span> <span class="diff-html-added">the</span> <span class="diff-html-added">predicate</span> <span class="diff-html-added">are</span> <span class="diff-html-added">relayed</span> <span class="diff-html-added">to</span> <span class="diff-html-added">the</span> <span class="diff-html-added">caller.</span>                            </div><dl> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../java/util/Collection.html#removeIf-java.util.function.Predicate-"><span class="diff-html-added">removeIf</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../java/util/Collection.html" title="interface in java.util"><span class="diff-html-added">Collection</span></a><span class="diff-html-added">&lt;</span><a href="../../java/util/Vector.html" title="type parameter in Vector"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="paramLabel"><span class="diff-html-added">Parameters:</span></span>   </dt><dd> <code><span class="diff-html-added">filter</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">a</span> <span class="diff-html-added">predicate</span> <span class="diff-html-added">which</span> <span class="diff-html-added">returns</span> <code><span class="diff-html-added">true</span></code> <span class="diff-html-added">for</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">to</span> <span class="diff-html-added">be</span> <span class="diff-html-added">removed</span>            </dd> <dt> <span class="returnLabel"><span class="diff-html-added">Returns:</span></span>   </dt><dd> <code><span class="diff-html-added">true</span></code> <span class="diff-html-added">if</span> <span class="diff-html-added">any</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">were</span> <span class="diff-html-added">removed</span>      </dd>   </dl></li></ul> <a end_ctx_id="method:removeIf-java.util.function.Predicate-"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:replaceAll-java.util.function.UnaryOperator- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:replaceAll-java.util.function.UnaryOperator-"><span class="diff-html-added"/></a><a name="replaceAll-java.util.function.UnaryOperator-"/><ul class="blockList"><li class="blockList"><h4><span class="diff-html-added">replaceAll</span></h4><pre><span class="diff-html-added">public void replaceAll(</span><a href="../../java/util/function/UnaryOperator.html" title="interface in java.util.function"><span class="diff-html-added">UnaryOperator</span></a><span class="diff-html-added">&lt;</span><a href="../../java/util/Vector.html" title="type parameter in Vector"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt; operator)</span></pre><div class="block"> <span class="descfrmTypeLabel"><span class="diff-html-added">Description</span> <span class="diff-html-added">copied</span> <span class="diff-html-added">from</span> <span class="diff-html-added">interface:</span> <code><a href="../../java/util/List.html#replaceAll-java.util.function.UnaryOperator-"><span class="diff-html-added">List</span></a></code>   </span> </div><div class="block"><span class="diff-html-added">Replaces</span> <span class="diff-html-added">each</span> <span class="diff-html-added">element</span> <span class="diff-html-added">of</span> <span class="diff-html-added">this</span> <span class="diff-html-added">list</span> <span class="diff-html-added">with</span> <span class="diff-html-added">the</span> <span class="diff-html-added">result</span> <span class="diff-html-added">of</span> <span class="diff-html-added">applying</span> <span class="diff-html-added">the</span> <span class="diff-html-added">operator</span> <span class="diff-html-added">to</span> <span class="diff-html-added">that</span> <span class="diff-html-added">element.</span> <span class="diff-html-added">Errors</span> <span class="diff-html-added">or</span> <span class="diff-html-added">runtime</span> <span class="diff-html-added">exceptions</span> <span class="diff-html-added">thrown</span> <span class="diff-html-added">by</span> <span class="diff-html-added">the</span> <span class="diff-html-added">operator</span> <span class="diff-html-added">are</span> <span class="diff-html-added">relayed</span> <span class="diff-html-added">to</span> <span class="diff-html-added">the</span> <span class="diff-html-added">caller.</span>                            </div><dl> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../java/util/List.html#replaceAll-java.util.function.UnaryOperator-"><span class="diff-html-added">replaceAll</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../java/util/List.html" title="interface in java.util"><span class="diff-html-added">List</span></a><span class="diff-html-added">&lt;</span><a href="../../java/util/Vector.html" title="type parameter in Vector"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="paramLabel"><span class="diff-html-added">Parameters:</span></span>   </dt><dd> <code><span class="diff-html-added">operator</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">the</span> <span class="diff-html-added">operator</span> <span class="diff-html-added">to</span> <span class="diff-html-added">apply</span> <span class="diff-html-added">to</span> <span class="diff-html-added">each</span> <span class="diff-html-added">element</span>         </dd>  </dl></li></ul> <a end_ctx_id="method:replaceAll-java.util.function.UnaryOperator-"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:sort-java.util.Comparator- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:sort-java.util.Comparator-"/><a name="sort-java.util.Comparator-"/><ul class="blockList"><li class="blockList"><h4>sort</h4><pre>public void sort(<a href="../../java/util/Comparator.html" title="interface in java.util">Comparator</a>&lt;? super <a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt; c)</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../java/util/List.html#sort-java.util.Comparator-">List</a></code>   </span> </div><div class="block">Sorts this list using the supplied <code>Comparator</code> to compare elements.         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/List.html#sort-java.util.Comparator-">sort</a></code> in interface <code><a href="../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../java/util/Vector.html" title="type parameter in Vector">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - the <code>Comparator</code> used to compare list elements. A <code>null</code> value indicates that the elements' <a href="../../java/lang/Comparable.html" title="interface in java.lang">natural ordering </a> should be used                    </dd>  </dl></li></ul> <a end_ctx_id="method:sort-java.util.Comparator-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:spliterator-- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:spliterator--"><span class="diff-html-added"/></a><a name="spliterator--"/><ul class="blockListLast"><li class="blockList"><h4><span class="diff-html-added">spliterator</span></h4><pre><span class="diff-html-added">public </span><a href="../../java/util/Spliterator.html" title="interface in java.util"><span class="diff-html-added">Spliterator</span></a><span class="diff-html-added">&lt;</span><a href="../../java/util/Vector.html" title="type parameter in Vector"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt; spliterator()</span></pre><div class="block"><span class="diff-html-added">Creates</span> <span class="diff-html-added">a</span> <em><a href="Spliterator.html#binding"><span class="diff-html-added">late-binding</span></a></em> <span class="diff-html-added">and</span> <em><span class="diff-html-added">fail-fast</span></em><a href="../../java/util/Spliterator.html" title="interface in java.util"><code><span class="diff-html-added">Spliterator</span></code></a> <span class="diff-html-added">over</span> <span class="diff-html-added">the</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">in</span> <span class="diff-html-added">this</span> <span class="diff-html-added">list.</span><p><span class="diff-html-added">The</span> <code><span class="diff-html-added">Spliterator</span></code> <span class="diff-html-added">reports</span> <a href="../../java/util/Spliterator.html#SIZED"><code><span class="diff-html-added">Spliterator.SIZED</span></code></a><span class="diff-html-added">,</span> <a href="../../java/util/Spliterator.html#SUBSIZED"><code><span class="diff-html-added">Spliterator.SUBSIZED</span></code></a><span class="diff-html-added">,</span> <span class="diff-html-added">and</span> <a href="../../java/util/Spliterator.html#ORDERED"><code><span class="diff-html-added">Spliterator.ORDERED</span></code></a><span class="diff-html-added">.</span> <span class="diff-html-added">Overriding</span> <span class="diff-html-added">implementations</span> <span class="diff-html-added">should</span> <span class="diff-html-added">document</span> <span class="diff-html-added">the</span> <span class="diff-html-added">reporting</span> <span class="diff-html-added">of</span> <span class="diff-html-added">additional</span> <span class="diff-html-added">characteristic</span> <span class="diff-html-added">values.</span>                </p>          </div><dl> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../java/lang/Iterable.html#spliterator--"><span class="diff-html-added">spliterator</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../java/lang/Iterable.html" title="interface in java.lang"><span class="diff-html-added">Iterable</span></a><span class="diff-html-added">&lt;</span><a href="../../java/util/Vector.html" title="type parameter in Vector"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../java/util/Collection.html#spliterator--"><span class="diff-html-added">spliterator</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../java/util/Collection.html" title="interface in java.util"><span class="diff-html-added">Collection</span></a><span class="diff-html-added">&lt;</span><a href="../../java/util/Vector.html" title="type parameter in Vector"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../java/util/List.html#spliterator--"><span class="diff-html-added">spliterator</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../java/util/List.html" title="interface in java.util"><span class="diff-html-added">List</span></a><span class="diff-html-added">&lt;</span><a href="../../java/util/Vector.html" title="type parameter in Vector"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="returnLabel"><span class="diff-html-added">Returns:</span></span>   </dt><dd><span class="diff-html-added">a</span> <code><span class="diff-html-added">Spliterator</span></code> <span class="diff-html-added">over</span> <span class="diff-html-added">the</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">in</span> <span class="diff-html-added">this</span> <span class="diff-html-added">list</span>       </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Since:</span></span>   </dt><dd><span class="diff-html-added">1.8</span></dd>     </dl></li></ul> <a end_ctx_id="method:spliterator--"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table></diff></diffreport>