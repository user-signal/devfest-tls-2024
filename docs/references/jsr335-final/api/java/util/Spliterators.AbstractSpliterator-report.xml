<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:Spliterators.AbstractSpliterator [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:Spliterators.AbstractSpliterator"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../java/util/Spliterator.html" title="interface in java.util">Spliterator</a>&lt;T&gt; </dd> </dl><dl> <dt>Enclosing class: </dt><dd> <a href="../../java/util/Spliterators.html" title="class in java.util">Spliterators</a> </dd> </dl> <hr/> <br/><pre>public abstract static class <span class="typeNameLabel">Spliterators.AbstractSpliterator&lt;T&gt;</span>
extends <a href="../../java/lang/Object.html" title="class in java.lang">Object</a>
implements <a href="../../java/util/Spliterator.html" title="interface in java.util">Spliterator</a>&lt;T&gt;</pre><div class="block">An abstract <code>Spliterator</code> that implements <code>trySplit</code> to permit limited parallelism.<p>An extending class need only implement <a href="../../java/util/Spliterator.html#tryAdvance-java.util.function.Consumer-"><code>tryAdvance</code></a>. The extending class should override <a href="../../java/util/Spliterator.html#forEachRemaining-java.util.function.Consumer-"><code>forEach</code></a> if it can provide a more performant implementation.                    </p>         </div><dl> <dt> <span class="simpleTagLabel">API Note: </span>   </dt><dd>This class is a useful aid for creating a spliterator when it is not possible or difficult to efficiently partition elements in a manner allowing balanced parallel computation.<p>An alternative to using this class, that also permits limited parallelism, is to create a spliterator from an iterator (see <a href="../../java/util/Spliterators.html#spliterator-java.util.Iterator-long-int-"><code>Spliterators.spliterator(Iterator, long, int)  </code></a>. Depending on the circumstances using an iterator may be easier or more convenient than extending this class, such as when there is already an iterator available to use.                                                </p>                           </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.8</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Spliterators.html#spliterator-java.util.Iterator-long-int-"><code>Spliterators.spliterator(Iterator, long, int)  </code></a> </dd>   </dl>  </li></ul> </div> <a end_ctx_id="class:Spliterators.AbstractSpliterator"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:AbstractSpliterator-long-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:AbstractSpliterator-long-int-"/><a name="AbstractSpliterator-long-int-"/><ul class="blockListLast"><li class="blockList"><h4>AbstractSpliterator</h4><pre>protected AbstractSpliterator(long est,
                              int additionalCharacteristics)</pre><div class="block">Creates a spliterator reporting the given estimated size and additionalCharacteristics.         </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>est</code> - the estimated size of this spliterator if known, otherwise <code>Long.MAX_VALUE</code>.            </dd><dd> <code>additionalCharacteristics</code> - properties of this spliterator's source or elements. If <code>SIZED</code> is reported then this spliterator will additionally report <code>SUBSIZED</code>.                    </dd> </dl></li></ul> <a end_ctx_id="constructor:AbstractSpliterator-long-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:trySplit-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:trySplit--"/><a name="trySplit--"/><ul class="blockList"><li class="blockList"><h4>trySplit</h4><pre>public <a href="../../java/util/Spliterator.html" title="interface in java.util">Spliterator</a>&lt;<a href="../../java/util/Spliterators.AbstractSpliterator.html" title="type parameter in Spliterators.AbstractSpliterator">T</a>&gt; trySplit()</pre><div class="block">If this spliterator can be partitioned, returns a Spliterator covering elements, that will, upon return from this method, not be covered by this Spliterator.<p>If this Spliterator is <a href="../../java/util/Spliterator.html#ORDERED"><code>Spliterator.ORDERED</code></a>, the returned Spliterator must cover a strict prefix of the elements.               </p><p>Unless this Spliterator covers an infinite number of elements, repeated calls to <code>trySplit()</code> must eventually return <code>null</code>. Upon non-null return:<ul><li>the value reported for <code>estimateSize()</code> before splitting, must, after splitting, be greater than or equal to <code>estimateSize()</code> for this and the returned Spliterator; and                       </li><li>if this Spliterator is <code>SUBSIZED</code>, then <code>estimateSize()</code> for this spliterator before splitting must be equal to the sum of <code>estimateSize()</code> for this and the returned Spliterator after splitting.                           </li></ul>                   </p><p>This method may return <code>null</code> for any reason, including emptiness, inability to split after traversal has commenced, data structure constraints, and efficiency considerations. This implementation permits limited parallelism.                           </p>                       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Spliterator.html#trySplit--">trySplit</a></code> in interface <code><a href="../../java/util/Spliterator.html" title="interface in java.util">Spliterator</a>&lt;<a href="../../java/util/Spliterators.AbstractSpliterator.html" title="type parameter in Spliterators.AbstractSpliterator">T</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a <code>Spliterator</code> covering some portion of the elements, or <code>null</code> if this spliterator cannot be split               </dd>  </dl></li></ul> <a end_ctx_id="method:trySplit--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:estimateSize-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:estimateSize--"/><a name="estimateSize--"/><ul class="blockList"><li class="blockList"><h4>estimateSize</h4><pre>public long estimateSize()</pre><div class="block">Returns an estimate of the number of elements that would be encountered by a <a href="../../java/util/Spliterator.html#forEachRemaining-java.util.function.Consumer-"><code>Spliterator.forEachRemaining(java.util.function.Consumer&lt;? super T&gt;)  </code></a> traversal, or returns <a href="../../java/lang/Long.html#MAX_VALUE"><code>Long.MAX_VALUE</code></a> if infinite, unknown, or too expensive to compute.<p>If this Spliterator is <a href="../../java/util/Spliterator.html#SIZED"><code>Spliterator.SIZED</code></a> and has not yet been partially traversed or split, or this Spliterator is <a href="../../java/util/Spliterator.html#SUBSIZED"><code>Spliterator.SUBSIZED</code></a> and has not yet been partially traversed, this estimate must be an accurate count of elements that would be encountered by a complete traversal. Otherwise, this estimate may be arbitrarily inaccurate, but must decrease as specified across invocations of <a href="../../java/util/Spliterator.html#trySplit--"><code>Spliterator.trySplit()</code></a>.                                                          </p>                          </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Spliterator.html#estimateSize--">estimateSize</a></code> in interface <code><a href="../../java/util/Spliterator.html" title="interface in java.util">Spliterator</a>&lt;<a href="../../java/util/Spliterators.AbstractSpliterator.html" title="type parameter in Spliterators.AbstractSpliterator">T</a>&gt;</code>  </dd> <dt> <span class="simpleTagLabel">Implementation Requirements: </span>   </dt><dd>This implementation returns the estimated size as reported when created and, if the estimate size is known, decreases in size when split.                     </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the estimated size, or <code>Long.MAX_VALUE</code> if infinite, unknown, or too expensive to compute.            </dd>   </dl></li></ul> <a end_ctx_id="method:estimateSize--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:characteristics-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:characteristics--"/><a name="characteristics--"/><ul class="blockListLast"><li class="blockList"><h4>characteristics</h4><pre>public int characteristics()</pre><div class="block">Returns a set of characteristics of this Spliterator and its elements. The result is represented as ORed values from <a href="../../java/util/Spliterator.html#ORDERED"><code>Spliterator.ORDERED</code></a>, <a href="../../java/util/Spliterator.html#DISTINCT"><code>Spliterator.DISTINCT</code></a>, <a href="../../java/util/Spliterator.html#SORTED"><code>Spliterator.SORTED</code></a>, <a href="../../java/util/Spliterator.html#SIZED"><code>Spliterator.SIZED</code></a>, <a href="../../java/util/Spliterator.html#NONNULL"><code>Spliterator.NONNULL</code></a>, <a href="../../java/util/Spliterator.html#IMMUTABLE"><code>Spliterator.IMMUTABLE</code></a>, <a href="../../java/util/Spliterator.html#CONCURRENT"><code>Spliterator.CONCURRENT</code></a>, <a href="../../java/util/Spliterator.html#SUBSIZED"><code>Spliterator.SUBSIZED</code></a>. Repeated calls to <code>characteristics()</code> on a given spliterator, prior to or in-between calls to <code>trySplit</code>, should always return the same result.<p>If a Spliterator reports an inconsistent set of characteristics (either those returned from a single invocation or across multiple invocations), no guarantees can be made about any computation using this Spliterator.                              </p>                                               </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Spliterator.html#characteristics--">characteristics</a></code> in interface <code><a href="../../java/util/Spliterator.html" title="interface in java.util">Spliterator</a>&lt;<a href="../../java/util/Spliterators.AbstractSpliterator.html" title="type parameter in Spliterators.AbstractSpliterator">T</a>&gt;</code>  </dd> <dt> <span class="simpleTagLabel">Implementation Requirements: </span>   </dt><dd>This implementation returns the characteristics as reported when created.        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a representation of characteristics   </dd>   </dl></li></ul> <a end_ctx_id="method:characteristics--"/>  </td></tr></table></td></tr></table></diff></diffreport>