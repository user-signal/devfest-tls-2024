<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:StringJoiner [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:StringJoiner"/><ul class="blockList"><li class="blockList"> <hr/> <br/><pre>public final class <span class="typeNameLabel">StringJoiner</span>
extends <a href="../../java/lang/Object.html" title="class in java.lang">Object</a></pre><div class="block"> <code>StringJoiner</code> is used to construct a sequence of characters separated by a delimiter and optionally starting with a supplied prefix and ending with a supplied suffix.<p> Prior to adding something to the <code>StringJoiner</code>, its <code>sj.toString()</code> method will, by default, return <code>prefix + suffix  </code>. However, if the <code>setEmptyValue</code> method is called, the <code>emptyValue</code> supplied will be returned instead. This can be used, for example, when creating a string using set notation to indicate an empty set, i.e. <code>"{}"</code>, where the <code>prefix</code> is <code>"{"</code>, the <code>suffix</code> is <code>"}"</code> and nothing has been added to the <code>StringJoiner</code>.                                                                  </p>                          </div><dl> <dt> <span class="simpleTagLabel">API Note: </span>   </dt><dd><p>The String <code>"[George:Sally:Fred]"</code> may be constructed as follows:<pre> 
<code>
 StringJoiner sj = new StringJoiner(":", "[", "]");
 sj.add("George").add("Sally").add("Fred");
 String desiredString = sj.toString();
 </code></pre>       </p><p> A <code>StringJoiner</code> may be employed to create formatted output from a <a href="../../java/util/stream/Stream.html" title="interface in java.util.stream"><code>Stream</code></a> using <a href="../../java/util/stream/Collectors.html#joining-java.lang.CharSequence-"><code>Collectors.joining(CharSequence)</code></a>. For example:<pre> 
<code>
 List&lt;Integer&gt; numbers = Arrays.asList(1, 2, 3, 4);
 String commaSeparatedNumbers = numbers.stream()
     .map(i -&gt; i.toString())
     .collect(Collectors.joining(", "));
 </code></pre>                </p></dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.8</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/stream/Collectors.html#joining-java.lang.CharSequence-"><code>Collectors.joining(CharSequence)</code></a>, <a href="../../java/util/stream/Collectors.html#joining-java.lang.CharSequence-java.lang.CharSequence-java.lang.CharSequence-"><code>Collectors.joining(CharSequence, CharSequence, CharSequence)  </code></a>  </dd>   </dl>  </li></ul> </div> <a end_ctx_id="class:StringJoiner"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:StringJoiner-java.lang.CharSequence- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:StringJoiner-java.lang.CharSequence-"/><a name="StringJoiner-java.lang.CharSequence-"/><ul class="blockList"><li class="blockList"><h4>StringJoiner</h4><pre>public StringJoiner(<a href="../../java/lang/CharSequence.html" title="interface in java.lang">CharSequence</a> delimiter)</pre><div class="block">Constructs a <code>StringJoiner</code> with no characters in it, with no <code>prefix</code> or <code>suffix</code>, and a copy of the supplied <code>delimiter</code>. If no characters are added to the <code>StringJoiner</code> and methods accessing the value of it are invoked, it will not return a <code>prefix</code> or <code>suffix</code> (or properties thereof) in the result, unless <code>setEmptyValue</code> has first been called.                                                        </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>delimiter</code> - the sequence of characters to be used between each element added to the <code>StringJoiner</code> value                 </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if <code>delimiter</code> is <code>null</code>      </dd>  </dl></li></ul> <a end_ctx_id="constructor:StringJoiner-java.lang.CharSequence-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:StringJoiner-java.lang.CharSequence-java.lang.CharSequence-java.lang.CharSequence- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:StringJoiner-java.lang.CharSequence-java.lang.CharSequence-java.lang.CharSequence-"/><a name="StringJoiner-java.lang.CharSequence-java.lang.CharSequence-java.lang.CharSequence-"/><ul class="blockListLast"><li class="blockList"><h4>StringJoiner</h4><pre>public StringJoiner(<a href="../../java/lang/CharSequence.html" title="interface in java.lang">CharSequence</a> delimiter,
                    <a href="../../java/lang/CharSequence.html" title="interface in java.lang">CharSequence</a> prefix,
                    <a href="../../java/lang/CharSequence.html" title="interface in java.lang">CharSequence</a> suffix)</pre><div class="block">Constructs a <code>StringJoiner</code> with no characters in it using copies of the supplied <code>prefix</code>, <code>delimiter</code> and <code>suffix</code>. If no characters are added to the <code>StringJoiner</code> and methods accessing the string value of it are invoked, it will return the <code>prefix + suffix  </code> (or properties thereof) in the result, unless <code>setEmptyValue</code> has first been called.                                                   </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>delimiter</code> - the sequence of characters to be used between each element added to the <code>StringJoiner</code>                </dd><dd> <code>prefix</code> - the sequence of characters to be used at the beginning            </dd><dd> <code>suffix</code> - the sequence of characters to be used at the end            </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if <code>prefix</code>, <code>delimiter</code>, or <code>suffix</code> is <code>null</code>         </dd>  </dl></li></ul> <a end_ctx_id="constructor:StringJoiner-java.lang.CharSequence-java.lang.CharSequence-java.lang.CharSequence-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:setEmptyValue-java.lang.CharSequence- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:setEmptyValue-java.lang.CharSequence-"/><a name="setEmptyValue-java.lang.CharSequence-"/><ul class="blockList"><li class="blockList"><h4>setEmptyValue</h4><pre>public <a href="../../java/util/StringJoiner.html" title="class in java.util">StringJoiner</a> setEmptyValue(<a href="../../java/lang/CharSequence.html" title="interface in java.lang">CharSequence</a> emptyValue)</pre><div class="block">Sets the sequence of characters to be used when determining the string representation of this <code>StringJoiner</code> and no elements have been added yet, that is, when it is empty. A copy of the <code>emptyValue</code> parameter is made for this purpose. Note that once an add method has been called, the <code>StringJoiner</code> is no longer considered empty, even if the element(s) added correspond to the empty <code>String</code>.                                                                 </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>emptyValue</code> - the characters to return as the value of an empty <code>StringJoiner</code>             </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>this <code>StringJoiner</code> itself so the calls may be chained        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - when the <code>emptyValue</code> parameter is <code>null</code>        </dd>   </dl></li></ul> <a end_ctx_id="method:setEmptyValue-java.lang.CharSequence-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toString-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toString--"/><a name="toString--"/><ul class="blockList"><li class="blockList"><h4>toString</h4><pre>public <a href="../../java/lang/String.html" title="class in java.lang">String</a> toString()</pre><div class="block">Returns the current value, consisting of the <code>prefix</code>, the values added so far separated by the <code>delimiter</code>, and the <code>suffix</code>, unless no elements have been added in which case, the <code>prefix + suffix  </code> or the <code>emptyValue</code> characters are returned                                    </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/lang/Object.html#toString--">toString</a></code> in class <code><a href="../../java/lang/Object.html" title="class in java.lang">Object</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the string representation of this <code>StringJoiner</code>     </dd>  </dl></li></ul> <a end_ctx_id="method:toString--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:add-java.lang.CharSequence- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:add-java.lang.CharSequence-"/><a name="add-java.lang.CharSequence-"/><ul class="blockList"><li class="blockList"><h4>add</h4><pre>public <a href="../../java/util/StringJoiner.html" title="class in java.util">StringJoiner</a> add(<a href="../../java/lang/CharSequence.html" title="interface in java.lang">CharSequence</a> newElement)</pre><div class="block">Adds a copy of the given <code>CharSequence</code> value as the next element of the <code>StringJoiner</code> value. If <code>newElement</code> is <code>null</code>, then <code>"null"</code> is added.                       </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>newElement</code> - The element to add      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this <code>StringJoiner</code>    </dd>  </dl></li></ul> <a end_ctx_id="method:add-java.lang.CharSequence-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:merge-java.util.StringJoiner- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:merge-java.util.StringJoiner-"/><a name="merge-java.util.StringJoiner-"/><ul class="blockList"><li class="blockList"><h4>merge</h4><pre>public <a href="../../java/util/StringJoiner.html" title="class in java.util">StringJoiner</a> merge(<a href="../../java/util/StringJoiner.html" title="class in java.util">StringJoiner</a> other)</pre><div class="block">Adds the contents of the given <code>StringJoiner</code> without prefix and suffix as the next element if it is non-empty. If the given <code>StringJoiner</code> is empty, the call has no effect.<p>A <code>StringJoiner</code> is empty if <a href="../../java/util/StringJoiner.html#add-java.lang.CharSequence-"><code>add()</code></a> has never been called, and if <code>merge()</code> has never been called with a non-empty <code>StringJoiner</code> argument.                     </p><p>If the other <code>StringJoiner</code> is using a different delimiter, then elements from the other <code>StringJoiner</code> are concatenated with that delimiter and the result is appended to this <code>StringJoiner</code> as a single element.                               </p>                             </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>other</code> - The <code>StringJoiner</code> whose contents should be merged into this one            </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>This <code>StringJoiner</code> </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the other <code>StringJoiner</code> is null        </dd>   </dl></li></ul> <a end_ctx_id="method:merge-java.util.StringJoiner-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:length-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:length--"/><a name="length--"/><ul class="blockListLast"><li class="blockList"><h4>length</h4><pre>public int length()</pre><div class="block">Returns the length of the <code>String</code> representation of this <code>StringJoiner</code>. Note that if no add methods have been called, then the length of the <code>String</code> representation (either <code>prefix + suffix  </code> or <code>emptyValue</code>) will be returned. The value should be equivalent to <code>toString().length()</code>.                                       </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the length of the current value of <code>StringJoiner</code>       </dd> </dl></li></ul> <a end_ctx_id="method:length--"/>  </td></tr></table></td></tr></table></diff></diffreport>