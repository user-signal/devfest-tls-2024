<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:LongSummaryStatistics [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:LongSummaryStatistics"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../java/util/function/IntConsumer.html" title="interface in java.util.function">IntConsumer</a>, <a href="../../java/util/function/LongConsumer.html" title="interface in java.util.function">LongConsumer</a>  </dd> </dl> <hr/> <br/><pre>public class <span class="typeNameLabel">LongSummaryStatistics</span>
extends <a href="../../java/lang/Object.html" title="class in java.lang">Object</a>
implements <a href="../../java/util/function/LongConsumer.html" title="interface in java.util.function">LongConsumer</a>, <a href="../../java/util/function/IntConsumer.html" title="interface in java.util.function">IntConsumer</a></pre><div class="block">A state object for collecting statistics such as count, min, max, sum, and average.<p>This class is designed to work with (though does not require) <a href="../../java/util/stream/package-summary.html">streams</a>. For example, you can compute summary statistics on a stream of longs with:<pre> 
<code>
 LongSummaryStatistics stats = longStream.collect(LongSummaryStatistics::new,
                                                  LongSummaryStatistics::accept,
                                                  LongSummaryStatistics::combine);
 </code></pre>                        </p><p> <code>LongSummaryStatistics</code> can be used as a <a href="../../java/util/stream/Stream.html#collect-java.util.stream.Collector-">Stream.collect(Collector)</a> reduction} target for a <a href="../../java/util/stream/Stream.html" title="interface in java.util.stream">stream</a>. For example:<pre> 
<code>
 LongSummaryStatistics stats = people.stream()
                                     .collect(Collectors.summarizingLong(Person::getAge));
</code></pre> This computes, in a single pass, the count of people, as well as the minimum, maximum, sum, and average of their ages.                                    </p>             </div><dl> <dt> <span class="simpleTagLabel">Implementation Note: </span>   </dt><dd>This implementation is not thread safe. However, it is safe to use <a href="../../java/util/stream/Collectors.html#summarizingLong-java.util.function.ToLongFunction-"><code>Collectors.toLongStatistics()</code></a> on a parallel stream, because the parallel implementation of <a href="../../java/util/stream/Stream.html#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-"><code>Stream.collect()</code></a> provides the necessary partitioning, isolation, and merging of results for safe and efficient parallel execution.<p>This implementation does not check for overflow of the sum.         </p>                                     </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.8</dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:LongSummaryStatistics"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:LongSummaryStatistics-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:LongSummaryStatistics--"/><a name="LongSummaryStatistics--"/><ul class="blockListLast"><li class="blockList"><h4>LongSummaryStatistics</h4><pre>public LongSummaryStatistics()</pre><div class="block">Construct an empty instance with zero count, zero sum, <code>Long.MAX_VALUE</code> min, <code>Long.MIN_VALUE</code> max and zero average.               </div></li></ul> <a end_ctx_id="constructor:LongSummaryStatistics--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:accept-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:accept-int-"/><a name="accept-int-"/><ul class="blockList"><li class="blockList"><h4>accept</h4><pre>public void accept(int value)</pre><div class="block">Records a new <code>int</code> value into the summary information.        </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/function/IntConsumer.html#accept-int-">accept</a></code> in interface <code><a href="../../java/util/function/IntConsumer.html" title="interface in java.util.function">IntConsumer</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>value</code> - the input value     </dd>  </dl></li></ul> <a end_ctx_id="method:accept-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:accept-long- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:accept-long-"/><a name="accept-long-"/><ul class="blockList"><li class="blockList"><h4>accept</h4><pre>public void accept(long value)</pre><div class="block">Records a new <code>long</code> value into the summary information.        </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/function/LongConsumer.html#accept-long-">accept</a></code> in interface <code><a href="../../java/util/function/LongConsumer.html" title="interface in java.util.function">LongConsumer</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>value</code> - the input value     </dd>  </dl></li></ul> <a end_ctx_id="method:accept-long-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:combine-java.util.LongSummaryStatistics- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:combine-java.util.LongSummaryStatistics-"/><a name="combine-java.util.LongSummaryStatistics-"/><ul class="blockList"><li class="blockList"><h4>combine</h4><pre>public void combine(<a href="../../java/util/LongSummaryStatistics.html" title="class in java.util">LongSummaryStatistics</a> other)</pre><div class="block">Combines the state of another <code>LongSummaryStatistics</code> into this one.        </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>other</code> - another <code>LongSummaryStatistics</code>    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if <code>other</code> is null      </dd>  </dl></li></ul> <a end_ctx_id="method:combine-java.util.LongSummaryStatistics-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getCount-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getCount--"/><a name="getCount--"/><ul class="blockList"><li class="blockList"><h4>getCount</h4><pre>public final long getCount()</pre><div class="block">Returns the count of values recorded.     </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the count of values   </dd> </dl></li></ul> <a end_ctx_id="method:getCount--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getSum-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getSum--"/><a name="getSum--"/><ul class="blockList"><li class="blockList"><h4>getSum</h4><pre>public final long getSum()</pre><div class="block">Returns the sum of values recorded, or zero if no values have been recorded.             </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the sum of values, or zero if none       </dd> </dl></li></ul> <a end_ctx_id="method:getSum--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getMin-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getMin--"/><a name="getMin--"/><ul class="blockList"><li class="blockList"><h4>getMin</h4><pre>public final long getMin()</pre><div class="block">Returns the minimum value recorded, or <code>Long.MAX_VALUE</code> if no values have been recorded.            </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the minimum value, or <code>Long.MAX_VALUE</code> if none      </dd> </dl></li></ul> <a end_ctx_id="method:getMin--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getMax-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getMax--"/><a name="getMax--"/><ul class="blockList"><li class="blockList"><h4>getMax</h4><pre>public final long getMax()</pre><div class="block">Returns the maximum value recorded, or <code>Long.MIN_VALUE</code> if no values have been recorded            </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the maximum value, or <code>Long.MIN_VALUE</code> if none      </dd> </dl></li></ul> <a end_ctx_id="method:getMax--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getAverage-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getAverage--"/><a name="getAverage--"/><ul class="blockList"><li class="blockList"><h4>getAverage</h4><pre>public final double getAverage()</pre><div class="block">Returns the arithmetic mean of values recorded, or zero if no values have been recorded.              </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>The arithmetic mean of values, or zero if none        </dd> </dl></li></ul> <a end_ctx_id="method:getAverage--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toString-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toString--"/><a name="toString--"/><ul class="blockListLast"><li class="blockList"><h4>toString</h4><pre>public <a href="../../java/lang/String.html" title="class in java.lang">String</a> toString()</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from class: <code><a href="../../java/lang/Object.html#toString--">Object</a></code>   </span> </div><div class="block">Returns a string representation of the object. In general, the <code>toString</code> method returns a string that "textually represents" this object. The result should be a concise but informative representation that is easy for a person to read. It is recommended that all subclasses override this method.<p> The <code>toString</code> method for class <code>Object</code> returns a string consisting of the name of the class of which the object is an instance, the at-sign character `<code>@</code>', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:                                                    </p><blockquote><pre>
 getClass().getName() + '@' + Integer.toHexString(hashCode())
 </pre></blockquote>                                             </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/lang/Object.html#toString--">toString</a></code> in class <code><a href="../../java/lang/Object.html" title="class in java.lang">Object</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a string representation of the object.     </dd>  </dl></li></ul> <a end_ctx_id="method:toString--"/>  </td></tr></table></td></tr></table></diff></diffreport>