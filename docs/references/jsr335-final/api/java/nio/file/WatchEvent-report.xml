<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:WatchEvent [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:WatchEvent"/><ul class="blockList"><li class="blockList"><dl> <dt> <span class="paramLabel">Type Parameters: </span>   </dt><dd> <code>T</code> - The type of the context object associated with the event            </dd> </dl> <hr/> <br/><pre>public interface <span class="typeNameLabel">WatchEvent&lt;T&gt;</span></pre><div class="block">An event or a repeated event for an object that is registered with a <a href="../../../java/nio/file/WatchService.html" title="interface in java.nio.file"><code>WatchService</code></a>.<p> An event is classified by its <a href="../../../java/nio/file/WatchEvent.html#kind--"><code>kind</code></a> and has a <a href="../../../java/nio/file/WatchEvent.html#count--"><code>count</code></a> to indicate the number of times that the event has been observed. This allows for efficient representation of repeated events. The <a href="../../../java/nio/file/WatchEvent.html#context--"><code>context</code></a> method returns any context associated with the event. In the case of a repeated event then the context is the same for all events.                                                         </p><p> Watch events are immutable and safe for use by multiple concurrent threads.            </p>              </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.7</dd> </dl>  </li></ul> </div> <a end_ctx_id="class:WatchEvent"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:kind-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:kind--"/><a name="kind--"/><ul class="blockList"><li class="blockList"><h4>kind</h4><pre><a href="../../../java/nio/file/WatchEvent.Kind.html" title="interface in java.nio.file">WatchEvent.Kind</a>&lt;<a href="../../../java/nio/file/WatchEvent.html" title="type parameter in WatchEvent">T</a>&gt; kind()</pre><div class="block">Returns the event kind.   </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the event kind  </dd> </dl></li></ul> <a end_ctx_id="method:kind--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:count-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:count--"/><a name="count--"/><ul class="blockList"><li class="blockList"><h4>count</h4><pre>int count()</pre><div class="block">Returns the event count. If the event count is greater than <code>1</code> then this is a repeated event.                 </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the event count  </dd> </dl></li></ul> <a end_ctx_id="method:count--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:context-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:context--"/><a name="context--"/><ul class="blockListLast"><li class="blockList"><h4>context</h4><pre><a href="../../../java/nio/file/WatchEvent.html" title="type parameter in WatchEvent">T</a> context()</pre><div class="block">Returns the context for the event.<p> In the case of <a href="../../../java/nio/file/StandardWatchEventKinds.html#ENTRY_CREATE"><code>ENTRY_CREATE</code></a>, <a href="../../../java/nio/file/StandardWatchEventKinds.html#ENTRY_DELETE"><code>ENTRY_DELETE</code></a>, and <a href="../../../java/nio/file/StandardWatchEventKinds.html#ENTRY_MODIFY"><code>ENTRY_MODIFY</code></a> events the context is a <code>Path</code> that is the <a href="../../../java/nio/file/Path.html#relativize-java.nio.file.Path-"><code>relative</code></a> path between the directory registered with the watch service, and the entry that is created, deleted, or modified.                                    </p>     </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the event context; may be <code>null</code>     </dd> </dl></li></ul> <a end_ctx_id="method:context--"/>  </td></tr></table></td></tr></table></diff></diffreport>