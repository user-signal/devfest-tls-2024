<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:SimpleFileVisitor [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:SimpleFileVisitor"/><ul class="blockList"><li class="blockList"><dl> <dt> <span class="paramLabel">Type Parameters: </span>   </dt><dd> <code>T</code> - The type of reference to the files         </dd> </dl><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../../java/nio/file/FileVisitor.html" title="interface in java.nio.file">FileVisitor</a>&lt;T&gt; </dd> </dl> <hr/> <br/><pre>public class <span class="typeNameLabel">SimpleFileVisitor&lt;T&gt;</span>
extends <a href="../../../java/lang/Object.html" title="class in java.lang">Object</a>
implements <a href="../../../java/nio/file/FileVisitor.html" title="interface in java.nio.file">FileVisitor</a>&lt;T&gt;</pre><div class="block">A simple visitor of files with default behavior to visit all files and to re-throw I/O errors.<p> Methods in this class may be overridden subject to their general contract.            </p>                </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.7</dd> </dl>  </li></ul> </div> <a end_ctx_id="class:SimpleFileVisitor"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:SimpleFileVisitor-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:SimpleFileVisitor--"/><a name="SimpleFileVisitor--"/><ul class="blockListLast"><li class="blockList"><h4>SimpleFileVisitor</h4><pre>protected SimpleFileVisitor()</pre><div class="block">Initializes a new instance of this class.      </div></li></ul> <a end_ctx_id="constructor:SimpleFileVisitor--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:preVisitDirectory-T-java.nio.file.attribute.BasicFileAttributes- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><a start_ctx_id="method:preVisitDirectory-T-java.nio.file.attribute.BasicFileAttributes-"/><a name="preVisitDirectory-T-java.nio.file.attribute.BasicFileAttributes-"/><ul class="blockList"><li class="blockList"><h4>preVisitDirectory</h4><pre>public <a href="../../../java/nio/file/FileVisitResult.html" title="enum in java.nio.file">FileVisitResult</a> preVisitDirectory(<a href="../../../java/nio/file/SimpleFileVisitor.html" title="type parameter in SimpleFileVisitor">T</a> dir,
                                         <a href="../../../java/nio/file/attribute/BasicFileAttributes.html" title="interface in java.nio.file.attribute">BasicFileAttributes</a> attrs)
                                  throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Invoked for a directory before entries in the directory are visited.<p> Unless overridden, this method returns <a href="../../../java/nio/file/FileVisitResult.html#CONTINUE"><code>CONTINUE</code></a>.      </p>          </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/nio/file/FileVisitor.html#preVisitDirectory-T-java.nio.file.attribute.BasicFileAttributes-">preVisitDirectory</a></code> in interface <code><a href="../../../java/nio/file/FileVisitor.html" title="interface in java.nio.file">FileVisitor</a>&lt;<a href="../../../java/nio/file/SimpleFileVisitor.html" title="type parameter in SimpleFileVisitor">T</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>dir</code> - a reference to the directory       </dd><dd> <code>attrs</code> - the directory's basic attributes      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the visit result  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs       </dd>    </dl></li></ul> <a name="visitFile-java.lang.Object-java.nio.file.attribute.BasicFileAttributes-"/><a end_ctx_id="method:preVisitDirectory-T-java.nio.file.attribute.BasicFileAttributes-"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:visitFile-T-java.nio.file.attribute.BasicFileAttributes- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:visitFile-T-java.nio.file.attribute.BasicFileAttributes-"/><a name="visitFile-T-java.nio.file.attribute.BasicFileAttributes-"/><ul class="blockList"><li class="blockList"><h4>visitFile</h4><pre>public <a href="../../../java/nio/file/FileVisitResult.html" title="enum in java.nio.file">FileVisitResult</a> visitFile(<a href="../../../java/nio/file/SimpleFileVisitor.html" title="type parameter in SimpleFileVisitor">T</a> file,
                                 <a href="../../../java/nio/file/attribute/BasicFileAttributes.html" title="interface in java.nio.file.attribute">BasicFileAttributes</a> attrs)
                          throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Invoked for a file in a directory.<p> Unless overridden, this method returns <a href="../../../java/nio/file/FileVisitResult.html#CONTINUE"><code>CONTINUE</code></a>.      </p>      </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/nio/file/FileVisitor.html#visitFile-T-java.nio.file.attribute.BasicFileAttributes-">visitFile</a></code> in interface <code><a href="../../../java/nio/file/FileVisitor.html" title="interface in java.nio.file">FileVisitor</a>&lt;<a href="../../../java/nio/file/SimpleFileVisitor.html" title="type parameter in SimpleFileVisitor">T</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>file</code> - a reference to the file       </dd><dd> <code>attrs</code> - the file's basic attributes      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the visit result  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs       </dd>    </dl></li></ul> <a name="visitFileFailed-java.lang.Object-java.io.IOException-"/><a end_ctx_id="method:visitFile-T-java.nio.file.attribute.BasicFileAttributes-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:visitFileFailed-T-java.io.IOException- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:visitFileFailed-T-java.io.IOException-"/><a name="visitFileFailed-T-java.io.IOException-"/><ul class="blockList"><li class="blockList"><h4>visitFileFailed</h4><pre>public <a href="../../../java/nio/file/FileVisitResult.html" title="enum in java.nio.file">FileVisitResult</a> visitFileFailed(<a href="../../../java/nio/file/SimpleFileVisitor.html" title="type parameter in SimpleFileVisitor">T</a> file,
                                       <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a> exc)
                                throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Invoked for a file that could not be visited.<p> Unless overridden, this method re-throws the I/O exception that prevented the file from being visited.               </p>        </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/nio/file/FileVisitor.html#visitFileFailed-T-java.io.IOException-">visitFileFailed</a></code> in interface <code><a href="../../../java/nio/file/FileVisitor.html" title="interface in java.nio.file">FileVisitor</a>&lt;<a href="../../../java/nio/file/SimpleFileVisitor.html" title="type parameter in SimpleFileVisitor">T</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>file</code> - a reference to the file       </dd><dd> <code>exc</code> - the I/O exception that prevented the file from being visited            </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the visit result  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs       </dd>    </dl></li></ul> <a name="postVisitDirectory-java.lang.Object-java.io.IOException-"/><a end_ctx_id="method:visitFileFailed-T-java.io.IOException-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:postVisitDirectory-T-java.io.IOException- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:postVisitDirectory-T-java.io.IOException-"/><a name="postVisitDirectory-T-java.io.IOException-"/><ul class="blockListLast"><li class="blockList"><h4>postVisitDirectory</h4><pre>public <a href="../../../java/nio/file/FileVisitResult.html" title="enum in java.nio.file">FileVisitResult</a> postVisitDirectory(<a href="../../../java/nio/file/SimpleFileVisitor.html" title="type parameter in SimpleFileVisitor">T</a> dir,
                                          <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a> exc)
                                   throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Invoked for a directory after entries in the directory, and all of their descendants, have been visited.<p> Unless overridden, this method returns <a href="../../../java/nio/file/FileVisitResult.html#CONTINUE"><code>CONTINUE</code></a> if the directory iteration completes without an I/O exception; otherwise this method re-throws the I/O exception that caused the iteration of the directory to terminate prematurely.                                </p>                </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/nio/file/FileVisitor.html#postVisitDirectory-T-java.io.IOException-">postVisitDirectory</a></code> in interface <code><a href="../../../java/nio/file/FileVisitor.html" title="interface in java.nio.file">FileVisitor</a>&lt;<a href="../../../java/nio/file/SimpleFileVisitor.html" title="type parameter in SimpleFileVisitor">T</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>dir</code> - a reference to the directory       </dd><dd> <code>exc</code> - <code>null</code> if the iteration of the directory completes without an error; otherwise the I/O exception that caused the iteration of the directory to complete prematurely                           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the visit result  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs       </dd>    </dl></li></ul> <a end_ctx_id="method:postVisitDirectory-T-java.io.IOException-"/>  </td></tr></table></td></tr></table></diff></diffreport>