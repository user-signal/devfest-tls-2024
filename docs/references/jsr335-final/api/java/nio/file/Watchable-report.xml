<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:Watchable [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:Watchable"/><ul class="blockList"><li class="blockList"><dl> <dt>All Known Subinterfaces:  </dt><dd> <a href="../../../java/nio/file/Path.html" title="interface in java.nio.file">Path</a> </dd> </dl> <hr/> <br/><pre>public interface <span class="typeNameLabel">Watchable</span></pre><div class="block">An object that may be registered with a watch service so that it can be <em>watched</em> for changes and events.<p> This interface defines the <a href="../../../java/nio/file/Watchable.html#register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind:A-java.nio.file.WatchEvent.Modifier...-"><code>register</code></a> method to register the object with a <a href="../../../java/nio/file/WatchService.html" title="interface in java.nio.file"><code>WatchService</code></a> returning a <a href="../../../java/nio/file/WatchKey.html" title="interface in java.nio.file"><code>WatchKey</code></a> to represent the registration. An object may be registered with more than one watch service. Registration with a watch service is cancelled by invoking the key's <a href="../../../java/nio/file/WatchKey.html#cancel--"><code>cancel</code></a> method.                                            </p>                   </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.7</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/nio/file/Path.html#register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind:A-java.nio.file.WatchEvent.Modifier...-"><code>Path.register(java.nio.file.WatchService, java.nio.file.WatchEvent.Kind&lt;?&gt;[], java.nio.file.WatchEvent.Modifier...)  </code></a> </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:Watchable"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind:A-java.nio.file.WatchEvent.Modifier...- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind:A-java.nio.file.WatchEvent.Modifier...-"/><a name="register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind:A-java.nio.file.WatchEvent.Modifier...-"/><ul class="blockList"><li class="blockList"><h4>register</h4><pre><a href="../../../java/nio/file/WatchKey.html" title="interface in java.nio.file">WatchKey</a> register(<a href="../../../java/nio/file/WatchService.html" title="interface in java.nio.file">WatchService</a> watcher,
                  <a href="../../../java/nio/file/WatchEvent.Kind.html" title="interface in java.nio.file">WatchEvent.Kind</a>&lt;?&gt;[] events,
                  <a href="../../../java/nio/file/WatchEvent.Modifier.html" title="interface in java.nio.file">WatchEvent.Modifier</a>... modifiers)
           throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Registers an object with a watch service.<p> If the file system object identified by this object is currently registered with the watch service then the watch key, representing that registration, is returned after changing the event set or modifiers to those specified by the <code>events</code> and <code>modifiers</code> parameters. Changing the event set does not cause pending events for the object to be discarded. Objects are automatically registered for the <a href="../../../java/nio/file/StandardWatchEventKinds.html#OVERFLOW"><code>OVERFLOW</code></a> event. This event is not required to be present in the array of events.                                                                             </p><p> Otherwise the file system object has not yet been registered with the given watch service, so it is registered and the resulting new key is returned.                          </p><p> Implementations of this interface should specify the events they support.          </p>      </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>watcher</code> - the watch service to which this object is to be registered             </dd><dd> <code>events</code> - the events for which this object should be registered           </dd><dd> <code>modifiers</code> - the modifiers, if any, that modify how the object is registered             </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a key representing the registration of this object with the given watch service            </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/UnsupportedOperationException.html" title="class in java.lang">UnsupportedOperationException</a></code> - if unsupported events or modifiers are specified         </dd><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if an invalid of combination of events are modifiers are specified             </dd><dd> <code><a href="../../../java/nio/file/ClosedWatchServiceException.html" title="class in java.nio.file">ClosedWatchServiceException</a></code> - if the watch service is closed        </dd><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs       </dd><dd> <code><a href="../../../java/lang/SecurityException.html" title="class in java.lang">SecurityException</a></code> - if a security manager is installed and it denies an unspecified permission required to monitor this object. Implementations of this interface should specify the permission checks.                            </dd>   </dl></li></ul> <a end_ctx_id="method:register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind:A-java.nio.file.WatchEvent.Modifier...-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind...- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind...-"/><a name="register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind...-"/><ul class="blockListLast"><li class="blockList"><h4>register</h4><pre><a href="../../../java/nio/file/WatchKey.html" title="interface in java.nio.file">WatchKey</a> register(<a href="../../../java/nio/file/WatchService.html" title="interface in java.nio.file">WatchService</a> watcher,
                  <a href="../../../java/nio/file/WatchEvent.Kind.html" title="interface in java.nio.file">WatchEvent.Kind</a>&lt;?&gt;... events)
           throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Registers an object with a watch service.<p> An invocation of this method behaves in exactly the same way as the invocation<pre>
     watchable.<a href="../../../java/nio/file/Watchable.html#register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind:A-java.nio.file.WatchEvent.Modifier...-"><code>register</code></a>(watcher, events, new WatchEvent.Modifier[0]);
 </pre>              </p>      </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>watcher</code> - the watch service to which this object is to be registered             </dd><dd> <code>events</code> - the events for which this object should be registered           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a key representing the registration of this object with the given watch service            </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/UnsupportedOperationException.html" title="class in java.lang">UnsupportedOperationException</a></code> - if unsupported events are specified       </dd><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if an invalid of combination of events are specified           </dd><dd> <code><a href="../../../java/nio/file/ClosedWatchServiceException.html" title="class in java.nio.file">ClosedWatchServiceException</a></code> - if the watch service is closed        </dd><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs       </dd><dd> <code><a href="../../../java/lang/SecurityException.html" title="class in java.lang">SecurityException</a></code> - if a security manager is installed and it denies an unspecified permission required to monitor this object. Implementations of this interface should specify the permission checks.                            </dd>   </dl></li></ul> <a end_ctx_id="method:register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind...-"/>  </td></tr></table></td></tr></table></diff></diffreport>