<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:StringBuffer [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:StringBuffer"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>, <a href="../../java/lang/Appendable.html" title="interface in java.lang">Appendable</a>, <a href="../../java/lang/CharSequence.html" title="interface in java.lang">CharSequence</a>   </dd> </dl> <hr/> <br/><pre>public final class <span class="typeNameLabel">StringBuffer</span>
extends <a href="../../java/lang/Object.html" title="class in java.lang">Object</a>
implements <a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>, <a href="../../java/lang/CharSequence.html" title="interface in java.lang">CharSequence</a></pre><div class="block">A thread-safe, mutable sequence of characters. A string buffer is like a <a href="../../java/lang/String.html" title="class in java.lang"><code>String</code></a>, but can be modified. At any point in time it contains some particular sequence of characters, but the length and content of the sequence can be changed through certain method calls.<p> String buffers are safe for use by multiple threads. The methods are synchronized where necessary so that all the operations on any particular instance behave as if they occur in some serial order that is consistent with the order of the method calls made by each of the individual threads involved.                                                   </p><p> The principal operations on a <code>StringBuffer</code> are the <code>append</code> and <code>insert</code> methods, which are overloaded so as to accept data of any type. Each effectively converts a given datum to a string and then appends or inserts the characters of that string to the string buffer. The <code>append</code> method always adds these characters at the end of the buffer; the <code>insert</code> method adds the characters at a specified point.                                                                     </p><p> For example, if <code>z</code> refers to a string buffer object whose current contents are <code>"start"</code>, then the method call <code>z.append("le")</code> would cause the string buffer to contain <code>"startle"</code>, whereas <code>z.insert(4, "le") </code> would alter the string buffer to contain <code>"starlet"</code>.                                      </p><p> In general, if sb refers to an instance of a <code>StringBuffer</code>, then <code>sb.append(x)</code> has the same effect as <code>sb.insert(sb.length(), x) </code>.                   </p><p> Whenever an operation occurs involving a source sequence (such as appending or inserting from a source sequence), this class synchronizes only on the string buffer performing the operation, not on the source. Note that while <code>StringBuffer</code> is designed to be safe to use concurrently from multiple threads, if the constructor or the <code>append</code> or <code>insert</code> operation is passed a source sequence that is shared across threads, the calling code must ensure that the operation has a consistent and unchanging view of the source sequence for the duration of the operation. This could be satisfied by the caller holding a lock during the operation's call, by using an immutable source sequence, or by not sharing the source sequence across threads.                                                                                                                       </p><p> Every string buffer has a capacity. As long as the length of the character sequence contained in the string buffer does not exceed the capacity, it is not necessary to allocate a new internal buffer array. If the internal buffer overflows, it is automatically made larger.                                              </p><p> Unless otherwise noted, passing a <code>null</code> argument to a constructor or method in this class will cause a <a href="../../java/lang/NullPointerException.html" title="class in java.lang"><code>NullPointerException</code></a> to be thrown.                      </p><p> As of release JDK 5, this class has been supplemented with an equivalent class designed for use by a single thread, <a href="../../java/lang/StringBuilder.html" title="class in java.lang"><code>StringBuilder</code></a>. The <code>StringBuilder</code> class should generally be used in preference to this one, as it supports all of the same operations but it is faster, as it performs no synchronization.                                                   </p>                                           </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>JDK1.0</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/StringBuilder.html" title="class in java.lang"><code>StringBuilder</code></a>, <a href="../../java/lang/String.html" title="class in java.lang"><code>String</code></a>, <a href="../../serialized-form.html#java.lang.StringBuffer">Serialized Form </a>   </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:StringBuffer"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:StringBuffer-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:StringBuffer--"/><a name="StringBuffer--"/><ul class="blockList"><li class="blockList"><h4>StringBuffer</h4><pre>public StringBuffer()</pre><div class="block">Constructs a string buffer with no characters in it and an initial capacity of 16 characters.               </div></li></ul> <a end_ctx_id="constructor:StringBuffer--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:StringBuffer-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:StringBuffer-int-"/><a name="StringBuffer-int-"/><ul class="blockList"><li class="blockList"><h4>StringBuffer</h4><pre>public StringBuffer(int capacity)</pre><div class="block">Constructs a string buffer with no characters in it and the specified initial capacity.             </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>capacity</code> - the initial capacity.     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NegativeArraySizeException.html" title="class in java.lang">NegativeArraySizeException</a></code> - if the <code>capacity</code> argument is less than <code>0</code>.          </dd>  </dl></li></ul> <a end_ctx_id="constructor:StringBuffer-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:StringBuffer-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:StringBuffer-java.lang.String-"/><a name="StringBuffer-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>StringBuffer</h4><pre>public StringBuffer(<a href="../../java/lang/String.html" title="class in java.lang">String</a> str)</pre><div class="block">Constructs a string buffer initialized to the contents of the specified string. The initial capacity of the string buffer is <code>16</code> plus the length of the string argument.                           </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>str</code> - the initial contents of the buffer.        </dd> </dl></li></ul> <a end_ctx_id="constructor:StringBuffer-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:StringBuffer-java.lang.CharSequence- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:StringBuffer-java.lang.CharSequence-"/><a name="StringBuffer-java.lang.CharSequence-"/><ul class="blockListLast"><li class="blockList"><h4>StringBuffer</h4><pre>public StringBuffer(<a href="../../java/lang/CharSequence.html" title="interface in java.lang">CharSequence</a> seq)</pre><div class="block">Constructs a string buffer that contains the same characters as the specified <code>CharSequence</code>. The initial capacity of the string buffer is <code>16</code> plus the length of the <code>CharSequence</code> argument.<p> If the length of the specified <code>CharSequence</code> is less than or equal to zero, then an empty buffer of capacity <code>16</code> is returned.                       </p>                            </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>seq</code> - the sequence to copy.      </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd>  </dl></li></ul> <a end_ctx_id="constructor:StringBuffer-java.lang.CharSequence-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:length-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:length--"/><a name="length--"/><ul class="blockList"><li class="blockList"><h4>length</h4><pre>public int length()</pre><div class="block">Returns the length (character count).    </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/CharSequence.html#length--">length</a></code> in interface <code><a href="../../java/lang/CharSequence.html" title="interface in java.lang">CharSequence</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the length of the sequence of characters currently represented by this object           </dd>  </dl></li></ul> <a end_ctx_id="method:length--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:capacity-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:capacity--"/><a name="capacity--"/><ul class="blockList"><li class="blockList"><h4>capacity</h4><pre>public int capacity()</pre><div class="block">Returns the current capacity. The capacity is the amount of storage available for newly inserted characters, beyond which an allocation will occur.                     </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the current capacity  </dd> </dl></li></ul> <a end_ctx_id="method:capacity--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:ensureCapacity-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:ensureCapacity-int-"/><a name="ensureCapacity-int-"/><ul class="blockList"><li class="blockList"><h4>ensureCapacity</h4><pre>public void ensureCapacity(int minimumCapacity)</pre><div class="block">Ensures that the capacity is at least equal to the specified minimum. If the current capacity is less than the argument, then a new internal array is allocated with greater capacity. The new capacity is the larger of:<ul><li>The <code>minimumCapacity</code> argument.  </li><li>Twice the old capacity, plus <code>2</code>.     </li></ul> If the <code>minimumCapacity</code> argument is nonpositive, this method takes no action and simply returns. Note that subsequent operations on this object can reduce the actual capacity below that requested here.                                                                   </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>minimumCapacity</code> - the minimum desired capacity.      </dd> </dl></li></ul> <a end_ctx_id="method:ensureCapacity-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:trimToSize-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:trimToSize--"/><a name="trimToSize--"/><ul class="blockList"><li class="blockList"><h4>trimToSize</h4><pre>public void trimToSize()</pre><div class="block">Attempts to reduce storage used for the character sequence. If the buffer is larger than necessary to hold its current sequence of characters, then it may be resized to become more space efficient. Calling this method may, but is not required to, affect the value returned by a subsequent call to the <a href="../../java/lang/StringBuffer.html#capacity--"><code>capacity()</code></a> method.                                                     </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd> </dl></li></ul> <a end_ctx_id="method:trimToSize--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:setLength-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:setLength-int-"/><a name="setLength-int-"/><ul class="blockList"><li class="blockList"><h4>setLength</h4><pre>public void setLength(int newLength)</pre><div class="block">Sets the length of the character sequence. The sequence is changed to a new character sequence whose length is specified by the argument. For every nonnegative index <i>k</i> less than <code>newLength</code>, the character at index <i>k</i> in the new character sequence is the same as the character at index <i>k</i> in the old sequence if <i>k</i> is less than the length of the old character sequence; otherwise, it is the null character <code>'\u0000'</code>. In other words, if the <code>newLength</code> argument is less than the current length, the length is changed to the specified length.<p> If the <code>newLength</code> argument is greater than or equal to the current length, sufficient null characters (<code>'\u0000'</code>) are appended so that length becomes the <code>newLength</code> argument.                          </p><p> The <code>newLength</code> argument must be greater than or equal to <code>0</code>.           </p>                                                                                             </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>newLength</code> - the new length     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if the <code>newLength</code> argument is negative.        </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/StringBuffer.html#length--"><code>length()</code></a> </dd>   </dl></li></ul> <a end_ctx_id="method:setLength-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:charAt-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:charAt-int-"/><a name="charAt-int-"/><ul class="blockList"><li class="blockList"><h4>charAt</h4><pre>public char charAt(int index)</pre><div class="block">Returns the <code>char</code> value in this sequence at the specified index. The first <code>char</code> value is at index <code>0</code>, the next at index <code>1</code>, and so on, as in array indexing.<p> The index argument must be greater than or equal to <code>0</code>, and less than the length of this sequence.                   </p><p>If the <code>char</code> value specified by the index is a <a href="Character.html#unicode">surrogate</a>, the surrogate value is returned.               </p>                              </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/CharSequence.html#charAt-int-">charAt</a></code> in interface <code><a href="../../java/lang/CharSequence.html" title="interface in java.lang">CharSequence</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - the index of the desired <code>char</code> value.         </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the <code>char</code> value at the specified index.      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if <code>index</code> is negative or greater than or equal to <code>length()</code>.             </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/StringBuffer.html#length--"><code>length()</code></a> </dd>     </dl></li></ul> <a end_ctx_id="method:charAt-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:codePointAt-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:codePointAt-int-"/><a name="codePointAt-int-"/><ul class="blockList"><li class="blockList"><h4>codePointAt</h4><pre>public int codePointAt(int index)</pre><div class="block">Returns the character (Unicode code point) at the specified index. The index refers to <code>char</code> values (Unicode code units) and ranges from <code>0</code> to <a href="../../java/lang/StringBuffer.html#length--"><code>length()</code></a><code>- 1 </code>.<p> If the <code>char</code> value specified at the given index is in the high-surrogate range, the following index is less than the length of this sequence, and the <code>char</code> value at the following index is in the low-surrogate range, then the supplementary code point corresponding to this surrogate pair is returned. Otherwise, the <code>char</code> value at the given index is returned.                                                            </p>                        </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - the index to the <code>char</code> values        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the code point value of the character at the <code>index</code>         </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd>   </dl></li></ul> <a end_ctx_id="method:codePointAt-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:codePointBefore-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:codePointBefore-int-"/><a name="codePointBefore-int-"/><ul class="blockList"><li class="blockList"><h4>codePointBefore</h4><pre>public int codePointBefore(int index)</pre><div class="block">Returns the character (Unicode code point) before the specified index. The index refers to <code>char</code> values (Unicode code units) and ranges from <code>1</code> to <a href="../../java/lang/StringBuffer.html#length--"><code>length()</code></a>.<p> If the <code>char</code> value at <code>(index - 1)  </code> is in the low-surrogate range, <code>(index - 2)  </code> is not negative, and the <code>char</code> value at <code>(index - 2)  </code> is in the high-surrogate range, then the supplementary code point value of the surrogate pair is returned. If the <code>char</code> value at <code>index - 1  </code> is an unpaired low-surrogate or a high-surrogate, the surrogate value is returned.                                                        </p>                        </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - the index following the code point that should be returned            </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the Unicode code point value before the given index.        </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd>   </dl></li></ul> <a end_ctx_id="method:codePointBefore-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:codePointCount-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:codePointCount-int-int-"/><a name="codePointCount-int-int-"/><ul class="blockList"><li class="blockList"><h4>codePointCount</h4><pre>public int codePointCount(int beginIndex,
                          int endIndex)</pre><div class="block">Returns the number of Unicode code points in the specified text range of this sequence. The text range begins at the specified <code>beginIndex</code> and extends to the <code>char</code> at index <code>endIndex - 1  </code>. Thus the length (in <code>char</code>s) of the text range is <code>endIndex-beginIndex</code>. Unpaired surrogates within this sequence count as one code point each.                                                    </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>beginIndex</code> - the index to the first <code>char</code> of the text range.            </dd><dd> <code>endIndex</code> - the index after the last <code>char</code> of the text range.            </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the number of Unicode code points in the specified text range          </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd>   </dl></li></ul> <a end_ctx_id="method:codePointCount-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:offsetByCodePoints-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:offsetByCodePoints-int-int-"/><a name="offsetByCodePoints-int-int-"/><ul class="blockList"><li class="blockList"><h4>offsetByCodePoints</h4><pre>public int offsetByCodePoints(int index,
                              int codePointOffset)</pre><div class="block">Returns the index within this sequence that is offset from the given <code>index</code> by <code>codePointOffset</code> code points. Unpaired surrogates within the text range given by <code>index</code> and <code>codePointOffset</code> count as one code point each.                                 </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - the index to be offset       </dd><dd> <code>codePointOffset</code> - the offset in code points       </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the index within this sequence    </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd>   </dl></li></ul> <a end_ctx_id="method:offsetByCodePoints-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getChars-int-int-char:A-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getChars-int-int-char:A-int-"/><a name="getChars-int-int-char:A-int-"/><ul class="blockList"><li class="blockList"><h4>getChars</h4><pre>public void getChars(int srcBegin,
                     int srcEnd,
                     char[] dst,
                     int dstBegin)</pre><div class="block">Characters are copied from this sequence into the destination character array <code>dst</code>. The first character to be copied is at index <code>srcBegin</code>; the last character to be copied is at index <code>srcEnd-1</code>. The total number of characters to be copied is <code>srcEnd-srcBegin</code>. The characters are copied into the subarray of <code>dst</code> starting at index <code>dstBegin</code> and ending at index:<pre><code>
 dstbegin + (srcEnd-srcBegin) - 1
 </code></pre>                                                          </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>srcBegin</code> - start copying at this offset.       </dd><dd> <code>srcEnd</code> - stop copying at this offset.       </dd><dd> <code>dst</code> - the array to copy the data into.         </dd><dd> <code>dstBegin</code> - offset into <code>dst</code>.     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if any of the following is true:<ul><li> <code>srcBegin</code> is negative   </li><li> <code>dstBegin</code> is negative   </li><li>the <code>srcBegin</code> argument is greater than the <code>srcEnd</code> argument.        </li><li> <code>srcEnd</code> is greater than <code>this.length()</code>.     </li><li> <code>dstBegin+srcEnd-srcBegin</code> is greater than <code>dst.length</code>     </li></ul>         </dd>  </dl></li></ul> <a end_ctx_id="method:getChars-int-int-char:A-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:setCharAt-int-char- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:setCharAt-int-char-"/><a name="setCharAt-int-char-"/><ul class="blockList"><li class="blockList"><h4>setCharAt</h4><pre>public void setCharAt(int index,
                      char ch)</pre><div class="block">The character at the specified index is set to <code>ch</code>. This sequence is altered to represent a new character sequence that is identical to the old character sequence, except that it contains the character <code>ch</code> at position <code>index</code>.<p> The index argument must be greater than or equal to <code>0</code>, and less than the length of this sequence.                   </p>                                     </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - the index of the character to modify.         </dd><dd> <code>ch</code> - the new character.     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if <code>index</code> is negative or greater than or equal to <code>length()</code>.             </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/StringBuffer.html#length--"><code>length()</code></a> </dd>   </dl></li></ul> <a end_ctx_id="method:setCharAt-int-char-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:append-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:append-java.lang.Object-"/><a name="append-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>append</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> append(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> obj)</pre><div class="block">Appends the string representation of the <code>Object</code> argument.<p> The overall effect is exactly as if the argument were converted to a string by the method <a href="../../java/lang/String.html#valueOf-java.lang.Object-"><code>String.valueOf(Object)</code></a>, and the characters of that string were then <a href="../../java/lang/StringBuffer.html#append-java.lang.String-"><code>appended</code></a> to this character sequence.                               </p>       </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>obj</code> - an <code>Object</code>.    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this object.    </dd>  </dl></li></ul> <a end_ctx_id="method:append-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:append-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:append-java.lang.String-"/><a name="append-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>append</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> append(<a href="../../java/lang/String.html" title="class in java.lang">String</a> str)</pre><div class="block">Appends the specified string to this character sequence.<p> The characters of the <code>String</code> argument are appended, in order, increasing the length of this sequence by the length of the argument. If <code>str</code> is <code>null</code>, then the four characters <code>"null"</code> are appended.                                 </p><p> Let <i>n</i> be the length of this character sequence just prior to execution of the <code>append</code> method. Then the character at index <i>k</i> in the new character sequence is equal to the character at index <i>k</i> in the old character sequence, if <i>k</i> is less than <i>n</i>; otherwise, it is equal to the character at index <i>k-n</i> in the argument <code>str</code>.                                                             </p>       </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>str</code> - a string.    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this object.    </dd>  </dl></li></ul> <a end_ctx_id="method:append-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:append-java.lang.StringBuffer- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:append-java.lang.StringBuffer-"/><a name="append-java.lang.StringBuffer-"/><ul class="blockList"><li class="blockList"><h4>append</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> append(<a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> sb)</pre><div class="block">Appends the specified <code>StringBuffer</code> to this sequence.<p> The characters of the <code>StringBuffer</code> argument are appended, in order, to the contents of this <code>StringBuffer</code>, increasing the length of this <code>StringBuffer</code> by the length of the argument. If <code>sb</code> is <code>null</code>, then the four characters <code>"null"</code> are appended to this <code>StringBuffer</code>.                                          </p><p> Let <i>n</i> be the length of the old character sequence, the one contained in the <code>StringBuffer</code> just prior to execution of the <code>append</code> method. Then the character at index <i>k</i> in the new character sequence is equal to the character at index <i>k</i> in the old character sequence, if <i>k</i> is less than <i>n</i>; otherwise, it is equal to the character at index <i>k-n</i> in the argument <code>sb</code>.                                                                    </p><p> This method synchronizes on <code>this</code>, the destination object, but does not synchronize on the source (<code>sb</code>).                </p>      </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>sb</code> - the <code>StringBuffer</code> to append.      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this object.    </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.4</dd>   </dl></li></ul> <a end_ctx_id="method:append-java.lang.StringBuffer-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:append-java.lang.CharSequence- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:append-java.lang.CharSequence-"/><a name="append-java.lang.CharSequence-"/><ul class="blockList"><li class="blockList"><h4>append</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> append(<a href="../../java/lang/CharSequence.html" title="interface in java.lang">CharSequence</a> s)</pre><div class="block">Appends the specified <code>CharSequence</code> to this sequence.<p> The characters of the <code>CharSequence</code> argument are appended, in order, increasing the length of this sequence by the length of the argument.                      </p><p>The result of this method is exactly the same as if it were an invocation of this.append(s, 0, s.length());                  </p><p>This method synchronizes on <code>this</code>, the destination object, but does not synchronize on the source (<code>s</code>).               </p><p>If <code>s</code> is <code>null</code>, then the four characters <code>"null"</code> are appended.          </p>      </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/Appendable.html#append-java.lang.CharSequence-">append</a></code> in interface <code><a href="../../java/lang/Appendable.html" title="interface in java.lang">Appendable</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>s</code> - the <code>CharSequence</code> to append.      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this object.    </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd>    </dl></li></ul> <a end_ctx_id="method:append-java.lang.CharSequence-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:append-java.lang.CharSequence-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:append-java.lang.CharSequence-int-int-"/><a name="append-java.lang.CharSequence-int-int-"/><ul class="blockList"><li class="blockList"><h4>append</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> append(<a href="../../java/lang/CharSequence.html" title="interface in java.lang">CharSequence</a> s,
                           int start,
                           int end)</pre><div class="block">Appends a subsequence of the specified <code>CharSequence</code> to this sequence.<p> Characters of the argument <code>s</code>, starting at index <code>start</code>, are appended, in order, to the contents of this sequence up to the (exclusive) index <code>end</code>. The length of this sequence is increased by the value of <code>end - start  </code>.                                     </p><p> Let <i>n</i> be the length of this character sequence just prior to execution of the <code>append</code> method. Then the character at index <i>k</i> in this character sequence becomes equal to the character at index <i>k</i> in this sequence, if <i>k</i> is less than <i>n</i>; otherwise, it is equal to the character at index <i>k+start-n</i> in the argument <code>s</code>.                                                          </p><p> If <code>s</code> is <code>null</code>, then this method appends characters as if the s parameter was a sequence containing the four characters <code>"null"</code>.                      </p>         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/Appendable.html#append-java.lang.CharSequence-int-int-">append</a></code> in interface <code><a href="../../java/lang/Appendable.html" title="interface in java.lang">Appendable</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>s</code> - the sequence to append.      </dd><dd> <code>start</code> - the starting index of the subsequence to be appended.           </dd><dd> <code>end</code> - the end index of the subsequence to be appended.           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this object.    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if <code>start</code> is negative, or <code>start</code> is greater than <code>end</code> or <code>end</code> is greater than <code>s.length()</code>                  </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd>     </dl></li></ul> <a end_ctx_id="method:append-java.lang.CharSequence-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:append-char:A- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:append-char:A-"/><a name="append-char:A-"/><ul class="blockList"><li class="blockList"><h4>append</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> append(char[] str)</pre><div class="block">Appends the string representation of the <code>char</code> array argument to this sequence.<p> The characters of the array argument are appended, in order, to the contents of this sequence. The length of this sequence increases by the length of the argument.                            </p><p> The overall effect is exactly as if the argument were converted to a string by the method <a href="../../java/lang/String.html#valueOf-char:A-"><code>String.valueOf(char[])</code></a>, and the characters of that string were then <a href="../../java/lang/StringBuffer.html#append-java.lang.String-"><code>appended</code></a> to this character sequence.                               </p>           </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>str</code> - the characters to be appended.       </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this object.    </dd>  </dl></li></ul> <a end_ctx_id="method:append-char:A-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:append-char:A-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:append-char:A-int-int-"/><a name="append-char:A-int-int-"/><ul class="blockList"><li class="blockList"><h4>append</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> append(char[] str,
                           int offset,
                           int len)</pre><div class="block">Appends the string representation of a subarray of the <code>char</code> array argument to this sequence.<p> Characters of the <code>char</code> array <code>str</code>, starting at index <code>offset</code>, are appended, in order, to the contents of this sequence. The length of this sequence increases by the value of <code>len</code>.                               </p><p> The overall effect is exactly as if the arguments were converted to a string by the method <a href="../../java/lang/String.html#valueOf-char:A-int-int-"><code>String.valueOf(char[],int,int)</code></a>, and the characters of that string were then <a href="../../java/lang/StringBuffer.html#append-java.lang.String-"><code>appended</code></a> to this character sequence.                               </p>              </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>str</code> - the characters to be appended.       </dd><dd> <code>offset</code> - the index of the first <code>char</code> to append.          </dd><dd> <code>len</code> - the number of <code>char</code>s to append.        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this object.    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if <code>offset &lt; 0  </code> or <code>len &lt; 0  </code> or <code>offset+len &gt; str.length  </code>        </dd>   </dl></li></ul> <a end_ctx_id="method:append-char:A-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:append-boolean- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:append-boolean-"/><a name="append-boolean-"/><ul class="blockList"><li class="blockList"><h4>append</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> append(boolean b)</pre><div class="block">Appends the string representation of the <code>boolean</code> argument to the sequence.<p> The overall effect is exactly as if the argument were converted to a string by the method <a href="../../java/lang/String.html#valueOf-boolean-"><code>String.valueOf(boolean)</code></a>, and the characters of that string were then <a href="../../java/lang/StringBuffer.html#append-java.lang.String-"><code>appended</code></a> to this character sequence.                               </p>          </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>b</code> - a <code>boolean</code>.    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this object.    </dd>  </dl></li></ul> <a end_ctx_id="method:append-boolean-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:append-char- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:append-char-"/><a name="append-char-"/><ul class="blockList"><li class="blockList"><h4>append</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> append(char c)</pre><div class="block">Appends the string representation of the <code>char</code> argument to this sequence.<p> The argument is appended to the contents of this sequence. The length of this sequence increases by <code>1</code>.                  </p><p> The overall effect is exactly as if the argument were converted to a string by the method <a href="../../java/lang/String.html#valueOf-char-"><code>String.valueOf(char)</code></a>, and the character in that string were then <a href="../../java/lang/StringBuffer.html#append-java.lang.String-"><code>appended</code></a> to this character sequence.                               </p>          </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/Appendable.html#append-char-">append</a></code> in interface <code><a href="../../java/lang/Appendable.html" title="interface in java.lang">Appendable</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - a <code>char</code>.    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this object.    </dd>   </dl></li></ul> <a end_ctx_id="method:append-char-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:append-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:append-int-"/><a name="append-int-"/><ul class="blockList"><li class="blockList"><h4>append</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> append(int i)</pre><div class="block">Appends the string representation of the <code>int</code> argument to this sequence.<p> The overall effect is exactly as if the argument were converted to a string by the method <a href="../../java/lang/String.html#valueOf-int-"><code>String.valueOf(int)</code></a>, and the characters of that string were then <a href="../../java/lang/StringBuffer.html#append-java.lang.String-"><code>appended</code></a> to this character sequence.                               </p>          </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>i</code> - an <code>int</code>.    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this object.    </dd>  </dl></li></ul> <a end_ctx_id="method:append-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:appendCodePoint-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:appendCodePoint-int-"/><a name="appendCodePoint-int-"/><ul class="blockList"><li class="blockList"><h4>appendCodePoint</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> appendCodePoint(int codePoint)</pre><div class="block">Appends the string representation of the <code>codePoint</code> argument to this sequence.<p> The argument is appended to the contents of this sequence. The length of this sequence increases by <a href="../../java/lang/Character.html#charCount-int-"><code>Character.charCount(codePoint)</code></a>.                  </p><p> The overall effect is exactly as if the argument were converted to a <code>char</code> array by the method <a href="../../java/lang/Character.html#toChars-int-"><code>Character.toChars(int)</code></a> and the character in that array were then <a href="../../java/lang/StringBuffer.html#append-char:A-"><code>appended</code></a> to this character sequence.                                </p>          </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>codePoint</code> - a Unicode code point      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this object.    </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd>   </dl></li></ul> <a end_ctx_id="method:appendCodePoint-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:append-long- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:append-long-"/><a name="append-long-"/><ul class="blockList"><li class="blockList"><h4>append</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> append(long lng)</pre><div class="block">Appends the string representation of the <code>long</code> argument to this sequence.<p> The overall effect is exactly as if the argument were converted to a string by the method <a href="../../java/lang/String.html#valueOf-long-"><code>String.valueOf(long)</code></a>, and the characters of that string were then <a href="../../java/lang/StringBuffer.html#append-java.lang.String-"><code>appended</code></a> to this character sequence.                               </p>          </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>lng</code> - a <code>long</code>.    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this object.    </dd>  </dl></li></ul> <a end_ctx_id="method:append-long-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:append-float- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:append-float-"/><a name="append-float-"/><ul class="blockList"><li class="blockList"><h4>append</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> append(float f)</pre><div class="block">Appends the string representation of the <code>float</code> argument to this sequence.<p> The overall effect is exactly as if the argument were converted to a string by the method <a href="../../java/lang/String.html#valueOf-float-"><code>String.valueOf(float)</code></a>, and the characters of that string were then <a href="../../java/lang/StringBuffer.html#append-java.lang.String-"><code>appended</code></a> to this character sequence.                               </p>          </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>f</code> - a <code>float</code>.    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this object.    </dd>  </dl></li></ul> <a end_ctx_id="method:append-float-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:append-double- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:append-double-"/><a name="append-double-"/><ul class="blockList"><li class="blockList"><h4>append</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> append(double d)</pre><div class="block">Appends the string representation of the <code>double</code> argument to this sequence.<p> The overall effect is exactly as if the argument were converted to a string by the method <a href="../../java/lang/String.html#valueOf-double-"><code>String.valueOf(double)</code></a>, and the characters of that string were then <a href="../../java/lang/StringBuffer.html#append-java.lang.String-"><code>appended</code></a> to this character sequence.                               </p>          </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>d</code> - a <code>double</code>.    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this object.    </dd>  </dl></li></ul> <a end_ctx_id="method:append-double-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:delete-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:delete-int-int-"/><a name="delete-int-int-"/><ul class="blockList"><li class="blockList"><h4>delete</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> delete(int start,
                           int end)</pre><div class="block">Removes the characters in a substring of this sequence. The substring begins at the specified <code>start</code> and extends to the character at index <code>end - 1  </code> or to the end of the sequence if no such character exists. If <code>start</code> is equal to <code>end</code>, no changes are made.                                             </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>start</code> - The beginning index, inclusive.      </dd><dd> <code>end</code> - The ending index, exclusive.      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>This object. </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/StringIndexOutOfBoundsException.html" title="class in java.lang">StringIndexOutOfBoundsException</a></code> - if <code>start</code> is negative, greater than <code>length()</code>, or greater than <code>end</code>.             </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd>    </dl></li></ul> <a end_ctx_id="method:delete-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:deleteCharAt-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:deleteCharAt-int-"/><a name="deleteCharAt-int-"/><ul class="blockList"><li class="blockList"><h4>deleteCharAt</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> deleteCharAt(int index)</pre><div class="block">Removes the <code>char</code> at the specified position in this sequence. This sequence is shortened by one <code>char</code>.<p>Note: If the character at the given index is a supplementary character, this method does not remove the entire character. If correct handling of supplementary characters is required, determine the number of <code>char</code>s to remove by calling <code>Character.charCount(thisSequence.codePointAt(index))</code>, where <code>thisSequence</code> is this sequence.                                          </p>                </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - Index of <code>char</code> to remove       </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>This object. </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/StringIndexOutOfBoundsException.html" title="class in java.lang">StringIndexOutOfBoundsException</a></code> - if the <code>index</code> is negative or greater than or equal to <code>length()</code>.              </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd>    </dl></li></ul> <a end_ctx_id="method:deleteCharAt-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:replace-int-int-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:replace-int-int-java.lang.String-"/><a name="replace-int-int-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>replace</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> replace(int start,
                            int end,
                            <a href="../../java/lang/String.html" title="class in java.lang">String</a> str)</pre><div class="block">Replaces the characters in a substring of this sequence with characters in the specified <code>String</code>. The substring begins at the specified <code>start</code> and extends to the character at index <code>end - 1  </code> or to the end of the sequence if no such character exists. First the characters in the substring are removed and then the specified <code>String</code> is inserted at <code>start</code>. (This sequence will be lengthened to accommodate the specified String if necessary.)                                                                      </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>start</code> - The beginning index, inclusive.      </dd><dd> <code>end</code> - The ending index, exclusive.      </dd><dd> <code>str</code> - String that will replace previous contents.        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>This object. </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/StringIndexOutOfBoundsException.html" title="class in java.lang">StringIndexOutOfBoundsException</a></code> - if <code>start</code> is negative, greater than <code>length()</code>, or greater than <code>end</code>.             </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd>    </dl></li></ul> <a end_ctx_id="method:replace-int-int-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:substring-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:substring-int-"/><a name="substring-int-"/><ul class="blockList"><li class="blockList"><h4>substring</h4><pre>public <a href="../../java/lang/String.html" title="class in java.lang">String</a> substring(int start)</pre><div class="block">Returns a new <code>String</code> that contains a subsequence of characters currently contained in this character sequence. The substring begins at the specified index and extends to the end of this sequence.                              </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>start</code> - The beginning index, inclusive.      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>The new string.  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/StringIndexOutOfBoundsException.html" title="class in java.lang">StringIndexOutOfBoundsException</a></code> - if <code>start</code> is less than zero, or greater than the length of this object.                </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd>    </dl></li></ul> <a end_ctx_id="method:substring-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:subSequence-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:subSequence-int-int-"/><a name="subSequence-int-int-"/><ul class="blockList"><li class="blockList"><h4>subSequence</h4><pre>public <a href="../../java/lang/CharSequence.html" title="interface in java.lang">CharSequence</a> subSequence(int start,
                                int end)</pre><div class="block">Returns a new character sequence that is a subsequence of this sequence.<p> An invocation of this method of the form<pre><code>
 sb.subSequence(begin,&amp;nbsp;end)</code></pre> behaves in exactly the same way as the invocation<pre><code>
 sb.substring(begin,&amp;nbsp;end)</code></pre> This method is provided so that this class can implement the <a href="../../java/lang/CharSequence.html" title="interface in java.lang"><code>CharSequence</code></a> interface.                              </p>           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/CharSequence.html#subSequence-int-int-">subSequence</a></code> in interface <code><a href="../../java/lang/CharSequence.html" title="interface in java.lang">CharSequence</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>start</code> - the start index, inclusive.      </dd><dd> <code>end</code> - the end index, exclusive.      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the specified subsequence.  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if <code>start</code> or <code>end</code> are negative, if <code>end</code> is greater than <code>length()</code>, or if <code>start</code> is greater than <code>end</code>                     </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.4</dd>     </dl></li></ul> <a end_ctx_id="method:subSequence-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:substring-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:substring-int-int-"/><a name="substring-int-int-"/><ul class="blockList"><li class="blockList"><h4>substring</h4><pre>public <a href="../../java/lang/String.html" title="class in java.lang">String</a> substring(int start,
                        int end)</pre><div class="block">Returns a new <code>String</code> that contains a subsequence of characters currently contained in this sequence. The substring begins at the specified <code>start</code> and extends to the character at index <code>end - 1  </code>.                             </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>start</code> - The beginning index, inclusive.      </dd><dd> <code>end</code> - The ending index, exclusive.      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>The new string.  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/StringIndexOutOfBoundsException.html" title="class in java.lang">StringIndexOutOfBoundsException</a></code> - if <code>start</code> or <code>end</code> are negative or greater than <code>length()</code>, or <code>start</code> is greater than <code>end</code>.                  </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd>    </dl></li></ul> <a end_ctx_id="method:substring-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:insert-int-char:A-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:insert-int-char:A-int-int-"/><a name="insert-int-char:A-int-int-"/><ul class="blockList"><li class="blockList"><h4>insert</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> insert(int index,
                           char[] str,
                           int offset,
                           int len)</pre><div class="block">Inserts the string representation of a subarray of the <code>str</code> array argument into this sequence. The subarray begins at the specified <code>offset</code> and extends <code>len</code><code>char</code>s. The characters of the subarray are inserted into this sequence at the position indicated by <code>index</code>. The length of this sequence increases by <code>len</code><code>char</code>s.                                                </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - position at which to insert subarray.        </dd><dd> <code>str</code> - A <code>char</code> array.     </dd><dd> <code>offset</code> - the index of the first <code>char</code> in subarray to be inserted.             </dd><dd> <code>len</code> - the number of <code>char</code>s in the subarray to be inserted.            </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>This object </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/StringIndexOutOfBoundsException.html" title="class in java.lang">StringIndexOutOfBoundsException</a></code> - if <code>index</code> is negative or greater than <code>length()</code>, or <code>offset</code> or <code>len</code> are negative, or <code>(offset+len)</code> is greater than <code>str.length</code>.                      </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd>    </dl></li></ul> <a end_ctx_id="method:insert-int-char:A-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:insert-int-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:insert-int-java.lang.Object-"/><a name="insert-int-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>insert</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> insert(int offset,
                           <a href="../../java/lang/Object.html" title="class in java.lang">Object</a> obj)</pre><div class="block">Inserts the string representation of the <code>Object</code> argument into this character sequence.<p> The overall effect is exactly as if the second argument were converted to a string by the method <a href="../../java/lang/String.html#valueOf-java.lang.Object-"><code>String.valueOf(Object)</code></a>, and the characters of that string were then <a href="../../java/lang/StringBuffer.html#insert-int-java.lang.String-"><code>inserted</code></a> into this character sequence at the indicated offset.                                    </p><p> The <code>offset</code> argument must be greater than or equal to <code>0</code>, and less than or equal to the <a href="../../java/lang/StringBuffer.html#length--">length</a> of this sequence.                      </p>           </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>offset</code> - the offset.    </dd><dd> <code>obj</code> - an <code>Object</code>.    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this object.    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/StringIndexOutOfBoundsException.html" title="class in java.lang">StringIndexOutOfBoundsException</a></code> - if the offset is invalid.       </dd>   </dl></li></ul> <a end_ctx_id="method:insert-int-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:insert-int-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:insert-int-java.lang.String-"/><a name="insert-int-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>insert</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> insert(int offset,
                           <a href="../../java/lang/String.html" title="class in java.lang">String</a> str)</pre><div class="block">Inserts the string into this character sequence.<p> The characters of the <code>String</code> argument are inserted, in order, into this sequence at the indicated offset, moving up any characters originally above that position and increasing the length of this sequence by the length of the argument. If <code>str</code> is <code>null</code>, then the four characters <code>"null"</code> are inserted into this sequence.                                                    </p><p> The character at index <i>k</i> in the new character sequence is equal to:<ul><li>the character at index <i>k</i> in the old character sequence, if <i>k</i> is less than <code>offset</code>               </li><li>the character at index <i>k</i><code>-offset</code> in the argument <code>str</code>, if <i>k</i> is not less than <code>offset</code> but is less than <code>offset+str.length()</code>                    </li><li>the character at index <i>k</i><code>-str.length()</code> in the old character sequence, if <i>k</i> is not less than <code>offset+str.length()</code>                </li></ul>             </p><p> The <code>offset</code> argument must be greater than or equal to <code>0</code>, and less than or equal to the <a href="../../java/lang/StringBuffer.html#length--">length</a> of this sequence.                      </p>      </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>offset</code> - the offset.    </dd><dd> <code>str</code> - a string.    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this object.    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/StringIndexOutOfBoundsException.html" title="class in java.lang">StringIndexOutOfBoundsException</a></code> - if the offset is invalid.       </dd>   </dl></li></ul> <a end_ctx_id="method:insert-int-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:insert-int-char:A- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:insert-int-char:A-"/><a name="insert-int-char:A-"/><ul class="blockList"><li class="blockList"><h4>insert</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> insert(int offset,
                           char[] str)</pre><div class="block">Inserts the string representation of the <code>char</code> array argument into this sequence.<p> The characters of the array argument are inserted into the contents of this sequence at the position indicated by <code>offset</code>. The length of this sequence increases by the length of the argument.                                </p><p> The overall effect is exactly as if the second argument were converted to a string by the method <a href="../../java/lang/String.html#valueOf-char:A-"><code>String.valueOf(char[])</code></a>, and the characters of that string were then <a href="../../java/lang/StringBuffer.html#insert-int-java.lang.String-"><code>inserted</code></a> into this character sequence at the indicated offset.                                    </p><p> The <code>offset</code> argument must be greater than or equal to <code>0</code>, and less than or equal to the <a href="../../java/lang/StringBuffer.html#length--">length</a> of this sequence.                      </p>           </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>offset</code> - the offset.    </dd><dd> <code>str</code> - a character array.     </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this object.    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/StringIndexOutOfBoundsException.html" title="class in java.lang">StringIndexOutOfBoundsException</a></code> - if the offset is invalid.       </dd>   </dl></li></ul> <a end_ctx_id="method:insert-int-char:A-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:insert-int-java.lang.CharSequence- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:insert-int-java.lang.CharSequence-"/><a name="insert-int-java.lang.CharSequence-"/><ul class="blockList"><li class="blockList"><h4>insert</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> insert(int dstOffset,
                           <a href="../../java/lang/CharSequence.html" title="interface in java.lang">CharSequence</a> s)</pre><div class="block">Inserts the specified <code>CharSequence</code> into this sequence.<p> The characters of the <code>CharSequence</code> argument are inserted, in order, into this sequence at the indicated offset, moving up any characters originally above that position and increasing the length of this sequence by the length of the argument s.                                       </p><p> The result of this method is exactly the same as if it were an invocation of this object's <a href="../../java/lang/StringBuffer.html#insert-int-java.lang.CharSequence-int-int-"><code>insert</code></a>(dstOffset, s, 0, s.length()) method.                       </p><p>If <code>s</code> is <code>null</code>, then the four characters <code>"null"</code> are inserted into this sequence.             </p>      </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>dstOffset</code> - the offset.    </dd><dd> <code>s</code> - the sequence to be inserted       </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this object.    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if the offset is invalid.       </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd>    </dl></li></ul> <a end_ctx_id="method:insert-int-java.lang.CharSequence-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:insert-int-java.lang.CharSequence-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:insert-int-java.lang.CharSequence-int-int-"/><a name="insert-int-java.lang.CharSequence-int-int-"/><ul class="blockList"><li class="blockList"><h4>insert</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> insert(int dstOffset,
                           <a href="../../java/lang/CharSequence.html" title="interface in java.lang">CharSequence</a> s,
                           int start,
                           int end)</pre><div class="block">Inserts a subsequence of the specified <code>CharSequence</code> into this sequence.<p> The subsequence of the argument <code>s</code> specified by <code>start</code> and <code>end</code> are inserted, in order, into this sequence at the specified destination offset, moving up any characters originally above that position. The length of this sequence is increased by <code>end - start  </code>.                                        </p><p> The character at index <i>k</i> in this sequence becomes equal to:<ul><li>the character at index <i>k</i> in this sequence, if <i>k</i> is less than <code>dstOffset</code>             </li><li>the character at index <i>k</i><code>+start-dstOffset</code> in the argument <code>s</code>, if <i>k</i> is greater than or equal to <code>dstOffset</code> but is less than <code>dstOffset+end-start</code>                      </li><li>the character at index <i>k</i><code>-(end-start)</code> in this sequence, if <i>k</i> is greater than or equal to <code>dstOffset+end-start</code>                </li></ul>           </p><p> The <code>dstOffset</code> argument must be greater than or equal to <code>0</code>, and less than or equal to the <a href="../../java/lang/StringBuffer.html#length--">length</a> of this sequence.                      </p><p>The start argument must be nonnegative, and not greater than <code>end</code>.          </p><p>The end argument must be greater than or equal to <code>start</code>, and less than or equal to the length of s.                    </p><p>If <code>s</code> is <code>null</code>, then this method inserts characters as if the s parameter was a sequence containing the four characters <code>"null"</code>.                     </p>         </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>dstOffset</code> - the offset in this sequence.       </dd><dd> <code>s</code> - the sequence to be inserted.       </dd><dd> <code>start</code> - the starting index of the subsequence to be inserted.           </dd><dd> <code>end</code> - the end index of the subsequence to be inserted.           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this object.    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if <code>dstOffset</code> is negative or greater than <code>this.length()</code>, or <code>start</code> or <code>end</code> are negative, or <code>start</code> is greater than <code>end</code> or <code>end</code> is greater than <code>s.length()</code>                            </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd>    </dl></li></ul> <a end_ctx_id="method:insert-int-java.lang.CharSequence-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:insert-int-boolean- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:insert-int-boolean-"/><a name="insert-int-boolean-"/><ul class="blockList"><li class="blockList"><h4>insert</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> insert(int offset,
                           boolean b)</pre><div class="block">Inserts the string representation of the <code>boolean</code> argument into this sequence.<p> The overall effect is exactly as if the second argument were converted to a string by the method <a href="../../java/lang/String.html#valueOf-boolean-"><code>String.valueOf(boolean)</code></a>, and the characters of that string were then <a href="../../java/lang/StringBuffer.html#insert-int-java.lang.String-"><code>inserted</code></a> into this character sequence at the indicated offset.                                    </p><p> The <code>offset</code> argument must be greater than or equal to <code>0</code>, and less than or equal to the <a href="../../java/lang/StringBuffer.html#length--">length</a> of this sequence.                      </p>          </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>offset</code> - the offset.    </dd><dd> <code>b</code> - a <code>boolean</code>.    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this object.    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/StringIndexOutOfBoundsException.html" title="class in java.lang">StringIndexOutOfBoundsException</a></code> - if the offset is invalid.       </dd>   </dl></li></ul> <a end_ctx_id="method:insert-int-boolean-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:insert-int-char- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:insert-int-char-"/><a name="insert-int-char-"/><ul class="blockList"><li class="blockList"><h4>insert</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> insert(int offset,
                           char c)</pre><div class="block">Inserts the string representation of the <code>char</code> argument into this sequence.<p> The overall effect is exactly as if the second argument were converted to a string by the method <a href="../../java/lang/String.html#valueOf-char-"><code>String.valueOf(char)</code></a>, and the character in that string were then <a href="../../java/lang/StringBuffer.html#insert-int-java.lang.String-"><code>inserted</code></a> into this character sequence at the indicated offset.                                    </p><p> The <code>offset</code> argument must be greater than or equal to <code>0</code>, and less than or equal to the <a href="../../java/lang/StringBuffer.html#length--">length</a> of this sequence.                      </p>          </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>offset</code> - the offset.    </dd><dd> <code>c</code> - a <code>char</code>.    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this object.    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if the offset is invalid.       </dd>   </dl></li></ul> <a end_ctx_id="method:insert-int-char-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:insert-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:insert-int-int-"/><a name="insert-int-int-"/><ul class="blockList"><li class="blockList"><h4>insert</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> insert(int offset,
                           int i)</pre><div class="block">Inserts the string representation of the second <code>int</code> argument into this sequence.<p> The overall effect is exactly as if the second argument were converted to a string by the method <a href="../../java/lang/String.html#valueOf-int-"><code>String.valueOf(int)</code></a>, and the characters of that string were then <a href="../../java/lang/StringBuffer.html#insert-int-java.lang.String-"><code>inserted</code></a> into this character sequence at the indicated offset.                                    </p><p> The <code>offset</code> argument must be greater than or equal to <code>0</code>, and less than or equal to the <a href="../../java/lang/StringBuffer.html#length--">length</a> of this sequence.                      </p>           </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>offset</code> - the offset.    </dd><dd> <code>i</code> - an <code>int</code>.    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this object.    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/StringIndexOutOfBoundsException.html" title="class in java.lang">StringIndexOutOfBoundsException</a></code> - if the offset is invalid.       </dd>   </dl></li></ul> <a end_ctx_id="method:insert-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:insert-int-long- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:insert-int-long-"/><a name="insert-int-long-"/><ul class="blockList"><li class="blockList"><h4>insert</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> insert(int offset,
                           long l)</pre><div class="block">Inserts the string representation of the <code>long</code> argument into this sequence.<p> The overall effect is exactly as if the second argument were converted to a string by the method <a href="../../java/lang/String.html#valueOf-long-"><code>String.valueOf(long)</code></a>, and the characters of that string were then <a href="../../java/lang/StringBuffer.html#insert-int-java.lang.String-"><code>inserted</code></a> into this character sequence at the indicated offset.                                    </p><p> The <code>offset</code> argument must be greater than or equal to <code>0</code>, and less than or equal to the <a href="../../java/lang/StringBuffer.html#length--">length</a> of this sequence.                      </p>          </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>offset</code> - the offset.    </dd><dd> <code>l</code> - a <code>long</code>.    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this object.    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/StringIndexOutOfBoundsException.html" title="class in java.lang">StringIndexOutOfBoundsException</a></code> - if the offset is invalid.       </dd>   </dl></li></ul> <a end_ctx_id="method:insert-int-long-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:insert-int-float- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:insert-int-float-"/><a name="insert-int-float-"/><ul class="blockList"><li class="blockList"><h4>insert</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> insert(int offset,
                           float f)</pre><div class="block">Inserts the string representation of the <code>float</code> argument into this sequence.<p> The overall effect is exactly as if the second argument were converted to a string by the method <a href="../../java/lang/String.html#valueOf-float-"><code>String.valueOf(float)</code></a>, and the characters of that string were then <a href="../../java/lang/StringBuffer.html#insert-int-java.lang.String-"><code>inserted</code></a> into this character sequence at the indicated offset.                                    </p><p> The <code>offset</code> argument must be greater than or equal to <code>0</code>, and less than or equal to the <a href="../../java/lang/StringBuffer.html#length--">length</a> of this sequence.                      </p>          </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>offset</code> - the offset.    </dd><dd> <code>f</code> - a <code>float</code>.    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this object.    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/StringIndexOutOfBoundsException.html" title="class in java.lang">StringIndexOutOfBoundsException</a></code> - if the offset is invalid.       </dd>   </dl></li></ul> <a end_ctx_id="method:insert-int-float-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:insert-int-double- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:insert-int-double-"/><a name="insert-int-double-"/><ul class="blockList"><li class="blockList"><h4>insert</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> insert(int offset,
                           double d)</pre><div class="block">Inserts the string representation of the <code>double</code> argument into this sequence.<p> The overall effect is exactly as if the second argument were converted to a string by the method <a href="../../java/lang/String.html#valueOf-double-"><code>String.valueOf(double)</code></a>, and the characters of that string were then <a href="../../java/lang/StringBuffer.html#insert-int-java.lang.String-"><code>inserted</code></a> into this character sequence at the indicated offset.                                    </p><p> The <code>offset</code> argument must be greater than or equal to <code>0</code>, and less than or equal to the <a href="../../java/lang/StringBuffer.html#length--">length</a> of this sequence.                      </p>          </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>offset</code> - the offset.    </dd><dd> <code>d</code> - a <code>double</code>.    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this object.    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/StringIndexOutOfBoundsException.html" title="class in java.lang">StringIndexOutOfBoundsException</a></code> - if the offset is invalid.       </dd>   </dl></li></ul> <a end_ctx_id="method:insert-int-double-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:indexOf-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:indexOf-java.lang.String-"/><a name="indexOf-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>indexOf</h4><pre>public int indexOf(<a href="../../java/lang/String.html" title="class in java.lang">String</a> str)</pre><div class="block">Returns the index within this string of the first occurrence of the specified substring. The integer returned is the smallest value <i>k</i> such that:<pre><code>
 this.toString().startsWith(str, &lt;i&gt;k&lt;/i&gt;)
 </code></pre> is <code>true</code>.                         </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>str</code> - any string.    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>if the string argument occurs as a substring within this object, then the index of the first character of the first such substring is returned; if it does not occur as a substring, <code>-1</code> is returned.                                   </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.4</dd>   </dl></li></ul> <a end_ctx_id="method:indexOf-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:indexOf-java.lang.String-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:indexOf-java.lang.String-int-"/><a name="indexOf-java.lang.String-int-"/><ul class="blockList"><li class="blockList"><h4>indexOf</h4><pre>public int indexOf(<a href="../../java/lang/String.html" title="class in java.lang">String</a> str,
                   int fromIndex)</pre><div class="block">Returns the index within this string of the first occurrence of the specified substring, starting at the specified index. The integer returned is the smallest value <code>k</code> for which:<pre><code>
     k &gt;= Math.min(fromIndex, this.length()) &amp;&amp;
                   this.toString().startsWith(str, k)
 </code></pre> If no such value of <i>k</i> exists, then -1 is returned.                                       </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>str</code> - the substring for which to search.        </dd><dd> <code>fromIndex</code> - the index from which to start the search.          </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the index within this string of the first occurrence of the specified substring, starting at the specified index.                 </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.4</dd>   </dl></li></ul> <a end_ctx_id="method:indexOf-java.lang.String-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:lastIndexOf-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:lastIndexOf-java.lang.String-"/><a name="lastIndexOf-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>lastIndexOf</h4><pre>public int lastIndexOf(<a href="../../java/lang/String.html" title="class in java.lang">String</a> str)</pre><div class="block">Returns the index within this string of the rightmost occurrence of the specified substring. The rightmost empty string "" is considered to occur at the index value <code>this.length()</code>. The returned index is the largest value <i>k</i> such that<pre><code>
 this.toString().startsWith(str, k)
 </code></pre> is true.                                       </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>str</code> - the substring to search for.       </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>if the string argument occurs one or more times as a substring within this object, then the index of the first character of the last such substring is returned. If it does not occur as a substring, <code>-1</code> is returned.                                       </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.4</dd>   </dl></li></ul> <a end_ctx_id="method:lastIndexOf-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:lastIndexOf-java.lang.String-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:lastIndexOf-java.lang.String-int-"/><a name="lastIndexOf-java.lang.String-int-"/><ul class="blockList"><li class="blockList"><h4>lastIndexOf</h4><pre>public int lastIndexOf(<a href="../../java/lang/String.html" title="class in java.lang">String</a> str,
                       int fromIndex)</pre><div class="block">Returns the index within this string of the last occurrence of the specified substring. The integer returned is the largest value <i>k</i> such that:<pre><code>
     k &lt;= Math.min(fromIndex, this.length()) &amp;&amp;
                   this.toString().startsWith(str, k)
 </code></pre> If no such value of <i>k</i> exists, then -1 is returned.                                  </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>str</code> - the substring to search for.       </dd><dd> <code>fromIndex</code> - the index to start the search from.         </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the index within this sequence of the last occurrence of the specified substring.            </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.4</dd>   </dl></li></ul> <a end_ctx_id="method:lastIndexOf-java.lang.String-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:reverse-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:reverse--"/><a name="reverse--"/><ul class="blockList"><li class="blockList"><h4>reverse</h4><pre>public <a href="../../java/lang/StringBuffer.html" title="class in java.lang">StringBuffer</a> reverse()</pre><div class="block">Causes this character sequence to be replaced by the reverse of the sequence. If there are any surrogate pairs included in the sequence, these are treated as single characters for the reverse operation. Thus, the order of the high-low surrogates is never reversed. Let <i>n</i> be the character length of this character sequence (not the length in <code>char</code> values) just prior to execution of the <code>reverse</code> method. Then the character at index <i>k</i> in the new character sequence is equal to the character at index <i>n-k-1</i> in the old character sequence.<p>Note that the reverse operation may result in producing surrogate pairs that were unpaired low-surrogates and high-surrogates before the operation. For example, reversing "\uDC00\uD800" produces "\uD800\uDC00" which is a valid surrogate pair.                               </p>                                                                                          </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a reference to this object.    </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>JDK1.0.2</dd>  </dl></li></ul> <a end_ctx_id="method:reverse--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toString-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toString--"/><a name="toString--"/><ul class="blockListLast"><li class="blockList"><h4>toString</h4><pre>public <a href="../../java/lang/String.html" title="class in java.lang">String</a> toString()</pre><div class="block">Returns a string representing the data in this sequence. A new <code>String</code> object is allocated and initialized to contain the character sequence currently represented by this object. This <code>String</code> is then returned. Subsequent changes to this sequence do not affect the contents of the <code>String</code>.                                            </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/CharSequence.html#toString--">toString</a></code> in interface <code><a href="../../java/lang/CharSequence.html" title="interface in java.lang">CharSequence</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a string representation of this sequence of characters.       </dd>  </dl></li></ul> <a end_ctx_id="method:toString--"/>  </td></tr></table></td></tr></table></diff></diffreport>