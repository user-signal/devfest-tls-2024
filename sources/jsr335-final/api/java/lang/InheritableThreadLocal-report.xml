<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:InheritableThreadLocal [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:InheritableThreadLocal"/><ul class="blockList"><li class="blockList"> <hr/> <br/><pre>public class <span class="typeNameLabel">InheritableThreadLocal&lt;T&gt;</span>
extends <a href="../../java/lang/ThreadLocal.html" title="class in java.lang">ThreadLocal</a>&lt;T&gt;</pre><div class="block">This class extends <tt>ThreadLocal</tt> to provide inheritance of values from parent thread to child thread: when a child thread is created, the child receives initial values for all inheritable thread-local variables for which the parent has values. Normally the child's values will be identical to the parent's; however, the child's value can be made an arbitrary function of the parent's by overriding the <tt>childValue</tt> method in this class.<p>Inheritable thread-local variables are used in preference to ordinary thread-local variables when the per-thread-attribute being maintained in the variable (e.g., User ID, Transaction ID) must be automatically transmitted to any child threads that are created.                                  </p>                                                                   </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/ThreadLocal.html" title="class in java.lang"><code>ThreadLocal</code></a> </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:InheritableThreadLocal"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:InheritableThreadLocal-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:InheritableThreadLocal--"/><a name="InheritableThreadLocal--"/><ul class="blockListLast"><li class="blockList"><h4>InheritableThreadLocal</h4><pre>public InheritableThreadLocal()</pre></li></ul> <a end_ctx_id="constructor:InheritableThreadLocal--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:childValue-T- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><a start_ctx_id="method:childValue-T-"/><a name="childValue-T-"/><ul class="blockListLast"><li class="blockList"><h4>childValue</h4><pre>protected <a href="../../java/lang/InheritableThreadLocal.html" title="type parameter in InheritableThreadLocal">T</a> childValue(<a href="../../java/lang/InheritableThreadLocal.html" title="type parameter in InheritableThreadLocal">T</a> parentValue)</pre><div class="block">Computes the child's initial value for this inheritable thread-local variable as a function of the parent's value at the time the child thread is created. This method is called from within the parent thread before the child is started.<p> This method merely returns its input argument, and should be overridden if a different behavior is desired.                 </p>                                      </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>parentValue</code> - the parent thread's value      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the child thread's initial value    </dd>  </dl></li></ul> <a end_ctx_id="method:childValue-T-"/> </td></tr></table></td></tr></table></diff></diffreport>