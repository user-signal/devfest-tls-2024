<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:WeakHashMap [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:WeakHashMap"/><ul class="blockList"><li class="blockList"><dl> <dt> <span class="paramLabel">Type Parameters: </span>   </dt><dd> <code>K</code> - the type of keys maintained by this map          </dd><dd> <code>V</code> - the type of mapped values       </dd> </dl><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;K,V&gt; </dd> </dl> <hr/> <br/><pre>public class <span class="typeNameLabel">WeakHashMap&lt;K,V&gt;</span>
extends <a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;K,V&gt;
implements <a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;K,V&gt;</pre><div class="block">Hash table based implementation of the <tt>Map</tt> interface, with <em>weak keys </em>. An entry in a <tt>WeakHashMap</tt> will automatically be removed when its key is no longer in ordinary use. More precisely, the presence of a mapping for a given key will not prevent the key from being discarded by the garbage collector, that is, made finalizable, finalized, and then reclaimed. When a key has been discarded its entry is effectively removed from the map, so this class behaves somewhat differently from other <tt>Map</tt> implementations.<p> Both null values and the null key are supported. This class has performance characteristics similar to those of the <tt>HashMap</tt> class, and has the same efficiency parameters of <em>initial capacity </em> and <em>load factor </em>.                               </p><p> Like most collection classes, this class is not synchronized. A synchronized <tt>WeakHashMap</tt> may be constructed using the <a href="../../java/util/Collections.html#synchronizedMap-java.util.Map-"><code>Collections.synchronizedMap</code></a> method.                   </p><p> This class is intended primarily for use with key objects whose <tt>equals</tt> methods test for object identity using the <tt>==</tt> operator. Once such a key is discarded it can never be recreated, so it is impossible to do a lookup of that key in a <tt>WeakHashMap</tt> at some later time and be surprised that its entry has been removed. This class will work perfectly well with key objects whose <tt>equals</tt> methods are not based upon object identity, such as <tt>String</tt> instances. With such recreatable key objects, however, the automatic removal of <tt>WeakHashMap</tt> entries whose keys have been discarded may prove to be confusing.                                                                                                       </p><p> The behavior of the <tt>WeakHashMap</tt> class depends in part upon the actions of the garbage collector, so several familiar (though not required) <tt>Map</tt> invariants do not hold for this class. Because the garbage collector may discard keys at any time, a <tt>WeakHashMap</tt> may behave as though an unknown thread is silently removing entries. In particular, even if you synchronize on a <tt>WeakHashMap</tt> instance and invoke none of its mutator methods, it is possible for the <tt>size</tt> method to return smaller values over time, for the <tt>isEmpty</tt> method to return <tt>false</tt> and then <tt>true</tt>, for the <tt>containsKey</tt> method to return <tt>true</tt> and later <tt>false</tt> for a given key, for the <tt>get</tt> method to return a value for a given key but later return <tt>null</tt>, for the <tt>put</tt> method to return <tt>null</tt> and the <tt>remove</tt> method to return <tt>false</tt> for a key that previously appeared to be in the map, and for successive examinations of the key set, the value collection, and the entry set to yield successively smaller numbers of elements.                                                                                                                                                                          </p><p> Each key object in a <tt>WeakHashMap</tt> is stored indirectly as the referent of a weak reference. Therefore a key will automatically be removed only after the weak references to it, both inside and outside of the map, have been cleared by the garbage collector.                                            </p><p> <strong>Implementation note: </strong> The value objects in a <tt>WeakHashMap</tt> are held by ordinary strong references. Thus care should be taken to ensure that value objects do not strongly refer to their own keys, either directly or indirectly, since that will prevent the keys from being discarded. Note that a value object may refer indirectly to its key via the <tt>WeakHashMap</tt> itself; that is, a value object may strongly refer to some other key object whose associated value object, in turn, strongly refers to the key of the first value object. If the values in the map do not rely on the map holding strong references to them, one way to deal with this is to wrap values themselves within <tt>WeakReferences</tt> before inserting, as in: <tt>m.put(key, new WeakReference(value))  </tt>, and then unwrapping upon each <tt>get</tt>.                                                                                                                                 </p><p>The iterators returned by the <tt>iterator</tt> method of the collections returned by all of this class's "collection view methods" are <i>fail-fast</i>: if the map is structurally modified at any time after the iterator is created, in any way except through the iterator's own <tt>remove</tt> method, the iterator will throw a <a href="../../java/util/ConcurrentModificationException.html" title="class in java.util"><code>ConcurrentModificationException</code></a>. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.                                                                            </p><p>Note that the fail-fast behavior of an iterator cannot be guaranteed as it is, generally speaking, impossible to make any hard guarantees in the presence of unsynchronized concurrent modification. Fail-fast iterators throw <tt>ConcurrentModificationException</tt> on a best-effort basis. Therefore, it would be wrong to write a program that depended on this exception for its correctness: <i>the fail-fast behavior of iterators should be used only to detect bugs.           </i>                                                      </p><p>This class is a member of the <a href="http://download.oracle.com/javase/7/docs/technotes/guides/collections/index.html"> Java Collections Framework   </a>.       </p>                                                                                  </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/HashMap.html" title="class in java.util"><code>HashMap</code></a>, <a href="../../java/lang/ref/WeakReference.html" title="class in java.lang.ref"><code>WeakReference</code></a>  </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:WeakHashMap"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:WeakHashMap-int-float- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:WeakHashMap-int-float-"/><a name="WeakHashMap-int-float-"/><ul class="blockList"><li class="blockList"><h4>WeakHashMap</h4><pre>public WeakHashMap(int initialCapacity,
                   float loadFactor)</pre><div class="block">Constructs a new, empty <tt>WeakHashMap</tt> with the given initial capacity and the given load factor.              </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>initialCapacity</code> - The initial capacity of the <tt>WeakHashMap</tt>        </dd><dd> <code>loadFactor</code> - The load factor of the <tt>WeakHashMap</tt>        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if the initial capacity is negative, or if the load factor is nonpositive.               </dd>  </dl></li></ul> <a end_ctx_id="constructor:WeakHashMap-int-float-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:WeakHashMap-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:WeakHashMap-int-"/><a name="WeakHashMap-int-"/><ul class="blockList"><li class="blockList"><h4>WeakHashMap</h4><pre>public WeakHashMap(int initialCapacity)</pre><div class="block">Constructs a new, empty <tt>WeakHashMap</tt> with the given initial capacity and the default load factor (0.75).               </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>initialCapacity</code> - The initial capacity of the <tt>WeakHashMap</tt>        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if the initial capacity is negative        </dd>  </dl></li></ul> <a end_ctx_id="constructor:WeakHashMap-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:WeakHashMap-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:WeakHashMap--"/><a name="WeakHashMap--"/><ul class="blockList"><li class="blockList"><h4>WeakHashMap</h4><pre>public WeakHashMap()</pre><div class="block">Constructs a new, empty <tt>WeakHashMap</tt> with the default initial capacity (16) and load factor (0.75).              </div></li></ul> <a end_ctx_id="constructor:WeakHashMap--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:WeakHashMap-java.util.Map- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:WeakHashMap-java.util.Map-"/><a name="WeakHashMap-java.util.Map-"/><ul class="blockListLast"><li class="blockList"><h4>WeakHashMap</h4><pre>public WeakHashMap(<a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;? extends <a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,? extends <a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt; m)</pre><div class="block">Constructs a new <tt>WeakHashMap</tt> with the same mappings as the specified map. The <tt>WeakHashMap</tt> is created with the default load factor (0.75) and an initial capacity sufficient to hold the mappings in the specified map.                                  </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>m</code> - the map whose mappings are to be placed in this map             </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified map is null        </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.3</dd>   </dl></li></ul> <a end_ctx_id="constructor:WeakHashMap-java.util.Map-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:size-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:size--"/><a name="size--"/><ul class="blockList"><li class="blockList"><h4>size</h4><pre>public int size()</pre><div class="block">Returns the number of key-value mappings in this map. This result is a snapshot, and may not reflect unprocessed entries that will be removed before next attempted access because they are no longer referenced.                                 </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#size--">size</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#size--">size</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the number of key-value mappings in this map       </dd>   </dl></li></ul> <a end_ctx_id="method:size--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:isEmpty-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:isEmpty--"/><a name="isEmpty--"/><ul class="blockList"><li class="blockList"><h4>isEmpty</h4><pre>public boolean isEmpty()</pre><div class="block">Returns <tt>true</tt> if this map contains no key-value mappings. This result is a snapshot, and may not reflect unprocessed entries that will be removed before next attempted access because they are no longer referenced.                                 </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#isEmpty--">isEmpty</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#isEmpty--">isEmpty</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this map contains no key-value mappings        </dd>   </dl></li></ul> <a end_ctx_id="method:isEmpty--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:get-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:get-java.lang.Object-"/><a name="get-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>get</h4><pre>public <a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a> get(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> key)</pre><div class="block">Returns the value to which the specified key is mapped, or <code>null</code> if this map contains no mapping for the key.<p>More formally, if this map contains a mapping from a key <code>k</code> to a value <code>v</code> such that <code>(key==null ? k==null : key.equals(k))    </code>, then this method returns <code>v</code>; otherwise it returns <code>null</code>. (There can be at most one such mapping.)                                   </p><p>A return value of <code>null</code> does not <i>necessarily</i> indicate that the map contains no mapping for the key; it's also possible that the map explicitly maps the key to <code>null</code>. The <a href="../../java/util/WeakHashMap.html#containsKey-java.lang.Object-"><code>containsKey</code></a> operation may be used to distinguish these two cases.                                        </p>                    </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#get-java.lang.Object-">get</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#get-java.lang.Object-">get</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>key</code> - the key whose associated value is to be returned           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the value to which the specified key is mapped, or <code>null</code> if this map contains no mapping for the key                   </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/WeakHashMap.html#put-K-V-"><code>put(Object, Object) </code></a> </dd>     </dl></li></ul> <a end_ctx_id="method:get-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:containsKey-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:containsKey-java.lang.Object-"/><a name="containsKey-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>containsKey</h4><pre>public boolean containsKey(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> key)</pre><div class="block">Returns <tt>true</tt> if this map contains a mapping for the specified key.           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#containsKey-java.lang.Object-">containsKey</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#containsKey-java.lang.Object-">containsKey</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>key</code> - The key whose presence in this map is to be tested             </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if there is a mapping for <tt>key</tt>; <tt>false</tt> otherwise          </dd>    </dl></li></ul> <a name="put-java.lang.Object-java.lang.Object-"/><a end_ctx_id="method:containsKey-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:put-K-V- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:put-K-V-"/><a name="put-K-V-"/><ul class="blockList"><li class="blockList"><h4>put</h4><pre>public <a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a> put(<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a> key,
             <a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a> value)</pre><div class="block">Associates the specified value with the specified key in this map. If the map previously contained a mapping for this key, the old value is replaced.                         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#put-K-V-">put</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#put-K-V-">put</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>key</code> - key with which the specified value is to be associated.            </dd><dd> <code>value</code> - value to be associated with the specified key.          </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the previous value associated with <tt>key</tt>, or <tt>null</tt> if there was no mapping for <tt>key</tt>. (A <tt>null</tt> return can also indicate that the map previously associated <tt>null</tt> with <tt>key</tt>.)                            </dd>    </dl></li></ul> <a end_ctx_id="method:put-K-V-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:putAll-java.util.Map- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:putAll-java.util.Map-"/><a name="putAll-java.util.Map-"/><ul class="blockList"><li class="blockList"><h4>putAll</h4><pre>public void putAll(<a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;? extends <a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,? extends <a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt; m)</pre><div class="block">Copies all of the mappings from the specified map to this map. These mappings will replace any mappings that this map had for any of the keys currently in the specified map.                               </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#putAll-java.util.Map-">putAll</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#putAll-java.util.Map-">putAll</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>m</code> - mappings to be stored in this map.         </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified map is null.        </dd>    </dl></li></ul> <a end_ctx_id="method:putAll-java.util.Map-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:remove-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:remove-java.lang.Object-"/><a name="remove-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>remove</h4><pre>public <a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a> remove(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> key)</pre><div class="block">Removes the mapping for a key from this weak hash map if it is present. More formally, if this map contains a mapping from key <tt>k</tt> to value <tt>v</tt> such that <code>(key==null ? k==null : key.equals(k))    </code>, that mapping is removed. (The map can contain at most one such mapping.)<p>Returns the value to which this map previously associated the key, or <tt>null</tt> if the map contained no mapping for the key. A return value of <tt>null</tt> does not <i>necessarily</i> indicate that the map contained no mapping for the key; it's also possible that the map explicitly mapped the key to <tt>null</tt>.                                                   </p><p>The map will not contain a mapping for the specified key once the call returns.              </p>                                            </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#remove-java.lang.Object-">remove</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#remove-java.lang.Object-">remove</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>key</code> - key whose mapping is to be removed from the map            </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the previous value associated with <tt>key</tt>, or <tt>null</tt> if there was no mapping for <tt>key</tt>              </dd>    </dl></li></ul> <a end_ctx_id="method:remove-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:clear-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:clear--"/><a name="clear--"/><ul class="blockList"><li class="blockList"><h4>clear</h4><pre>public void clear()</pre><div class="block">Removes all of the mappings from this map. The map will be empty after this call returns.                </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#clear--">clear</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#clear--">clear</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt;</code>  </dd>  </dl></li></ul> <a end_ctx_id="method:clear--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:containsValue-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:containsValue-java.lang.Object-"/><a name="containsValue-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>containsValue</h4><pre>public boolean containsValue(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> value)</pre><div class="block">Returns <tt>true</tt> if this map maps one or more keys to the specified value.             </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#containsValue-java.lang.Object-">containsValue</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#containsValue-java.lang.Object-">containsValue</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>value</code> - value whose presence in this map is to be tested            </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this map maps one or more keys to the specified value             </dd>    </dl></li></ul> <a end_ctx_id="method:containsValue-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:keySet-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:keySet--"/><a name="keySet--"/><ul class="blockList"><li class="blockList"><h4>keySet</h4><pre>public <a href="../../java/util/Set.html" title="interface in java.util">Set</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>&gt; keySet()</pre><div class="block">Returns a <a href="../../java/util/Set.html" title="interface in java.util"><code>Set</code></a> view of the keys contained in this map. The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. If the map is modified while an iteration over the set is in progress (except through the iterator's own <tt>remove</tt> operation), the results of the iteration are undefined. The set supports element removal, which removes the corresponding mapping from the map, via the <tt>Iterator.remove</tt>, <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt>, and <tt>clear</tt> operations. It does not support the <tt>add</tt> or <tt>addAll</tt> operations.                                                                                        </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#keySet--">keySet</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#keySet--">keySet</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a set view of the keys contained in this map         </dd>   </dl></li></ul> <a end_ctx_id="method:keySet--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:values-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:values--"/><a name="values--"/><ul class="blockList"><li class="blockList"><h4>values</h4><pre>public <a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt; values()</pre><div class="block">Returns a <a href="../../java/util/Collection.html" title="interface in java.util"><code>Collection</code></a> view of the values contained in this map. The collection is backed by the map, so changes to the map are reflected in the collection, and vice-versa. If the map is modified while an iteration over the collection is in progress (except through the iterator's own <tt>remove</tt> operation), the results of the iteration are undefined. The collection supports element removal, which removes the corresponding mapping from the map, via the <tt>Iterator.remove</tt>, <tt>Collection.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and <tt>clear</tt> operations. It does not support the <tt>add</tt> or <tt>addAll</tt> operations.                                                                                        </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#values--">values</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#values--">values</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a collection view of the values contained in this map         </dd>   </dl></li></ul> <a end_ctx_id="method:values--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:entrySet-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:entrySet--"/><a name="entrySet--"/><ul class="blockList"><li class="blockList"><h4>entrySet</h4><pre>public <a href="../../java/util/Set.html" title="interface in java.util">Set</a>&lt;<a href="../../java/util/Map.Entry.html" title="interface in java.util">Map.Entry</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt;&gt; entrySet()</pre><div class="block">Returns a <a href="../../java/util/Set.html" title="interface in java.util"><code>Set</code></a> view of the mappings contained in this map. The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. If the map is modified while an iteration over the set is in progress (except through the iterator's own <tt>remove</tt> operation, or through the <tt>setValue</tt> operation on a map entry returned by the iterator) the results of the iteration are undefined. The set supports element removal, which removes the corresponding mapping from the map, via the <tt>Iterator.remove</tt>, <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and <tt>clear</tt> operations. It does not support the <tt>add</tt> or <tt>addAll</tt> operations.                                                                                                     </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#entrySet--">entrySet</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#entrySet--">entrySet</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">K</a>,<a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap">V</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a set view of the mappings contained in this map         </dd>   </dl></li></ul> <a end_ctx_id="method:entrySet--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:forEach-java.util.function.BiConsumer- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:forEach-java.util.function.BiConsumer-"><span class="diff-html-added"/></a><a name="forEach-java.util.function.BiConsumer-"/><ul class="blockList"><li class="blockList"><h4><span class="diff-html-added">forEach</span></h4><pre><span class="diff-html-added">public void forEach(</span><a href="../../java/util/function/BiConsumer.html" title="interface in java.util.function"><span class="diff-html-added">BiConsumer</span></a><span class="diff-html-added">&lt;?</span> <span class="diff-html-added">super</span> <a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap"><span class="diff-html-added">K</span></a><span class="diff-html-added">,?</span> <span class="diff-html-added">super</span> <a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap"><span class="diff-html-added">V</span></a><span class="diff-html-added">&gt; action)</span></pre><div class="block"> <span class="descfrmTypeLabel"><span class="diff-html-added">Description</span> <span class="diff-html-added">copied</span> <span class="diff-html-added">from</span> <span class="diff-html-added">interface:</span> <code><a href="../../java/util/Map.html#forEach-java.util.function.BiConsumer-"><span class="diff-html-added">Map</span></a></code>   </span> </div><div class="block"><span class="diff-html-added">Performs</span> <span class="diff-html-added">the</span> <span class="diff-html-added">given</span> <span class="diff-html-added">action</span> <span class="diff-html-added">for</span> <span class="diff-html-added">each</span> <span class="diff-html-added">entry</span> <span class="diff-html-added">in</span> <span class="diff-html-added">this</span> <span class="diff-html-added">map</span> <span class="diff-html-added">until</span> <span class="diff-html-added">all</span> <span class="diff-html-added">entries</span> <span class="diff-html-added">have</span> <span class="diff-html-added">been</span> <span class="diff-html-added">processed</span> <span class="diff-html-added">or</span> <span class="diff-html-added">the</span> <span class="diff-html-added">action</span> <span class="diff-html-added">throws</span> <span class="diff-html-added">an</span> <span class="diff-html-added">exception.</span> <span class="diff-html-added">Unless</span> <span class="diff-html-added">otherwise</span> <span class="diff-html-added">specified</span> <span class="diff-html-added">by</span> <span class="diff-html-added">the</span> <span class="diff-html-added">implementing</span> <span class="diff-html-added">class,</span> <span class="diff-html-added">actions</span> <span class="diff-html-added">are</span> <span class="diff-html-added">performed</span> <span class="diff-html-added">in</span> <span class="diff-html-added">the</span> <span class="diff-html-added">order</span> <span class="diff-html-added">of</span> <span class="diff-html-added">entry</span> <span class="diff-html-added">set</span> <span class="diff-html-added">iteration</span> <span class="diff-html-added">(if</span> <span class="diff-html-added">an</span> <span class="diff-html-added">iteration</span> <span class="diff-html-added">order</span> <span class="diff-html-added">is</span> <span class="diff-html-added">specified.)</span> <span class="diff-html-added">Exceptions</span> <span class="diff-html-added">thrown</span> <span class="diff-html-added">by</span> <span class="diff-html-added">the</span> <span class="diff-html-added">action</span> <span class="diff-html-added">are</span> <span class="diff-html-added">relayed</span> <span class="diff-html-added">to</span> <span class="diff-html-added">the</span> <span class="diff-html-added">caller.</span>                                                      </div><dl> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../java/util/Map.html#forEach-java.util.function.BiConsumer-"><span class="diff-html-added">forEach</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../java/util/Map.html" title="interface in java.util"><span class="diff-html-added">Map</span></a><span class="diff-html-added">&lt;</span><a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap"><span class="diff-html-added">K</span></a><span class="diff-html-added">,</span><a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap"><span class="diff-html-added">V</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="paramLabel"><span class="diff-html-added">Parameters:</span></span>   </dt><dd> <code><span class="diff-html-added">action</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">The</span> <span class="diff-html-added">action</span> <span class="diff-html-added">to</span> <span class="diff-html-added">be</span> <span class="diff-html-added">performed</span> <span class="diff-html-added">for</span> <span class="diff-html-added">each</span> <span class="diff-html-added">entry</span>          </dd>  </dl></li></ul> <a end_ctx_id="method:forEach-java.util.function.BiConsumer-"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:replaceAll-java.util.function.BiFunction- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:replaceAll-java.util.function.BiFunction-"><span class="diff-html-added"/></a><a name="replaceAll-java.util.function.BiFunction-"/><ul class="blockListLast"><li class="blockList"><h4><span class="diff-html-added">replaceAll</span></h4><pre><span class="diff-html-added">public void replaceAll(</span><a href="../../java/util/function/BiFunction.html" title="interface in java.util.function"><span class="diff-html-added">BiFunction</span></a><span class="diff-html-added">&lt;?</span> <span class="diff-html-added">super</span> <a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap"><span class="diff-html-added">K</span></a><span class="diff-html-added">,?</span> <span class="diff-html-added">super</span> <a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap"><span class="diff-html-added">V</span></a><span class="diff-html-added">,?</span> <span class="diff-html-added">extends</span> <a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap"><span class="diff-html-added">V</span></a><span class="diff-html-added">&gt; function)</span></pre><div class="block"> <span class="descfrmTypeLabel"><span class="diff-html-added">Description</span> <span class="diff-html-added">copied</span> <span class="diff-html-added">from</span> <span class="diff-html-added">interface:</span> <code><a href="../../java/util/Map.html#replaceAll-java.util.function.BiFunction-"><span class="diff-html-added">Map</span></a></code>   </span> </div><div class="block"><span class="diff-html-added">Replaces</span> <span class="diff-html-added">each</span> <span class="diff-html-added">entry's</span> <span class="diff-html-added">value</span> <span class="diff-html-added">with</span> <span class="diff-html-added">the</span> <span class="diff-html-added">result</span> <span class="diff-html-added">of</span> <span class="diff-html-added">invoking</span> <span class="diff-html-added">the</span> <span class="diff-html-added">given</span> <span class="diff-html-added">function</span> <span class="diff-html-added">on</span> <span class="diff-html-added">that</span> <span class="diff-html-added">entry</span> <span class="diff-html-added">until</span> <span class="diff-html-added">all</span> <span class="diff-html-added">entries</span> <span class="diff-html-added">have</span> <span class="diff-html-added">been</span> <span class="diff-html-added">processed</span> <span class="diff-html-added">or</span> <span class="diff-html-added">the</span> <span class="diff-html-added">function</span> <span class="diff-html-added">throws</span> <span class="diff-html-added">an</span> <span class="diff-html-added">exception.</span> <span class="diff-html-added">Exceptions</span> <span class="diff-html-added">thrown</span> <span class="diff-html-added">by</span> <span class="diff-html-added">the</span> <span class="diff-html-added">function</span> <span class="diff-html-added">are</span> <span class="diff-html-added">relayed</span> <span class="diff-html-added">to</span> <span class="diff-html-added">the</span> <span class="diff-html-added">caller.</span>                                    </div><dl> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../java/util/Map.html#replaceAll-java.util.function.BiFunction-"><span class="diff-html-added">replaceAll</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../java/util/Map.html" title="interface in java.util"><span class="diff-html-added">Map</span></a><span class="diff-html-added">&lt;</span><a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap"><span class="diff-html-added">K</span></a><span class="diff-html-added">,</span><a href="../../java/util/WeakHashMap.html" title="type parameter in WeakHashMap"><span class="diff-html-added">V</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="paramLabel"><span class="diff-html-added">Parameters:</span></span>   </dt><dd> <code><span class="diff-html-added">function</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">the</span> <span class="diff-html-added">function</span> <span class="diff-html-added">to</span> <span class="diff-html-added">apply</span> <span class="diff-html-added">to</span> <span class="diff-html-added">each</span> <span class="diff-html-added">entry</span>         </dd>  </dl></li></ul> <a end_ctx_id="method:replaceAll-java.util.function.BiFunction-"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table></diff></diffreport>