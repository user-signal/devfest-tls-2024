<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:Enumeration [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:Enumeration"/><ul class="blockList"><li class="blockList"><dl> <dt>All Known Subinterfaces:  </dt><dd> <a href="../../javax/naming/NamingEnumeration.html" title="interface in javax.naming">NamingEnumeration</a>&lt;T&gt; </dd> </dl><dl> <dt>All Known Implementing Classes:   </dt><dd> <a href="../../java/util/StringTokenizer.html" title="class in java.util">StringTokenizer</a> </dd> </dl> <hr/> <br/><pre>public interface <span class="typeNameLabel">Enumeration&lt;E&gt;</span></pre><div class="block">An object that implements the Enumeration interface generates a series of elements, one at a time. Successive calls to the <code>nextElement</code> method return successive elements of the series.<p> For example, to print all elements of a <tt>Vector&lt;E&gt;</tt><i>v</i>:<pre>
   for (Enumeration&lt;E&gt; e = v.elements(); e.hasMoreElements();)
       System.out.println(e.nextElement());</pre>         </p><p> Methods are provided to enumerate through the elements of a vector, the keys of a hashtable, and the values in a hashtable. Enumerations are also used to specify the input streams to a <code>SequenceInputStream</code>.                                  </p><p> NOTE: The functionality of this interface is duplicated by the Iterator interface. In addition, Iterator adds an optional remove operation, and has shorter method names. New implementations should consider using Iterator in preference to Enumeration.                                   </p>                           </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>JDK1.0</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Iterator.html" title="interface in java.util"><code>Iterator</code></a>, <a href="../../java/io/SequenceInputStream.html" title="class in java.io"><code>SequenceInputStream</code></a>, <a href="../../java/util/Enumeration.html#nextElement--"><code>nextElement()</code></a>, <a href="../../java/util/Hashtable.html" title="class in java.util"><code>Hashtable</code></a>, <a href="../../java/util/Hashtable.html#elements--"><code>Hashtable.elements()</code></a>, <a href="../../java/util/Hashtable.html#keys--"><code>Hashtable.keys()</code></a>, <a href="../../java/util/Vector.html" title="class in java.util"><code>Vector</code></a>, <a href="../../java/util/Vector.html#elements--"><code>Vector.elements()</code></a>        </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:Enumeration"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:hasMoreElements-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:hasMoreElements--"/><a name="hasMoreElements--"/><ul class="blockList"><li class="blockList"><h4>hasMoreElements</h4><pre>boolean hasMoreElements()</pre><div class="block">Tests if this enumeration contains more elements.      </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if and only if this enumeration object contains at least one more element to provide; <code>false</code> otherwise.                  </dd> </dl></li></ul> <a end_ctx_id="method:hasMoreElements--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:nextElement-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:nextElement--"/><a name="nextElement--"/><ul class="blockListLast"><li class="blockList"><h4>nextElement</h4><pre><a href="../../java/util/Enumeration.html" title="type parameter in Enumeration">E</a> nextElement()</pre><div class="block">Returns the next element of this enumeration if this enumeration object has at least one more element to provide.                  </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the next element of this enumeration.     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/util/NoSuchElementException.html" title="class in java.util">NoSuchElementException</a></code> - if no more elements exist.       </dd>  </dl></li></ul> <a end_ctx_id="method:nextElement--"/>  </td></tr></table></td></tr></table></diff></diffreport>