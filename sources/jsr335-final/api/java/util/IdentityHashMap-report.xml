<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:IdentityHashMap [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:IdentityHashMap"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>, <a href="../../java/lang/Cloneable.html" title="interface in java.lang">Cloneable</a>, <a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;K,V&gt;   </dd> </dl> <hr/> <br/><pre>public class <span class="typeNameLabel">IdentityHashMap&lt;K,V&gt;</span>
extends <a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;K,V&gt;
implements <a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;K,V&gt;, <a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>, <a href="../../java/lang/Cloneable.html" title="interface in java.lang">Cloneable</a></pre><div class="block">This class implements the <tt>Map</tt> interface with a hash table, using reference-equality in place of object-equality when comparing keys (and values). In other words, in an <tt>IdentityHashMap</tt>, two keys <tt>k1</tt> and <tt>k2</tt> are considered equal if and only if <tt>(k1==k2)</tt>. (In normal <tt>Map</tt> implementations (like <tt>HashMap</tt>) two keys <tt>k1</tt> and <tt>k2</tt> are considered equal if and only if <tt>(k1==null ? k2==null : k1.equals(k2))    </tt>.)<p> <b>This class is <i>not</i> a general-purpose <tt>Map</tt> implementation! While this class implements the <tt>Map</tt> interface, it intentionally violates <tt>Map's</tt> general contract, which mandates the use of the <tt>equals</tt> method when comparing objects. This class is designed for use only in the rare cases wherein reference-equality semantics are required.                                               </b> </p><p>A typical use of this class is <i>topology-preserving object graph transformations   </i>, such as serialization or deep-copying. To perform such a transformation, a program must maintain a "node table" that keeps track of all the object references that have already been processed. The node table must not equate distinct objects even if they happen to be equal. Another typical use of this class is to maintain <i>proxy objects </i>. For example, a debugging facility might wish to maintain a proxy object for each object in the program being debugged.                                                                                  </p><p>This class provides all of the optional map operations, and permits <tt>null</tt> values and the <tt>null</tt> key. This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time.                                          </p><p>This class provides constant-time performance for the basic operations (<tt>get</tt> and <tt>put</tt>), assuming the system identity hash function (<a href="../../java/lang/System.html#identityHashCode-java.lang.Object-"><code>System.identityHashCode(Object)</code></a>) disperses elements properly among the buckets.                        </p><p>This class has one tuning parameter (which affects performance but not semantics): <i>expected maximum size  </i>. This parameter is the maximum number of key-value mappings that the map is expected to hold. Internally, this parameter is used to determine the number of buckets initially comprising the hash table. The precise relationship between the expected maximum size and the number of buckets is unspecified.                                                           </p><p>If the size of the map (the number of key-value mappings) sufficiently exceeds the expected maximum size, the number of buckets is increased Increasing the number of buckets ("rehashing") may be fairly expensive, so it pays to create identity hash maps with a sufficiently large expected maximum size. On the other hand, iteration over collection views requires time proportional to the number of buckets in the hash table, so it pays not to set the expected maximum size too high if you are especially concerned with iteration performance or memory usage.                                                                                          </p><p> <strong>Note that this implementation is not synchronized.      </strong> If multiple threads access an identity hash map concurrently, and at least one of the threads modifies the map structurally, it <i>must</i> be synchronized externally. (A structural modification is any operation that adds or deletes one or more mappings; merely changing the value associated with a key that an instance already contains is not a structural modification.) This is typically accomplished by synchronizing on some object that naturally encapsulates the map. If no such object exists, the map should be "wrapped" using the <a href="../../java/util/Collections.html#synchronizedMap-java.util.Map-"><code>Collections.synchronizedMap</code></a> method. This is best done at creation time, to prevent accidental unsynchronized access to the map:<pre>
   Map m = Collections.synchronizedMap(new IdentityHashMap(...));</pre>                                                                                                     </p><p>The iterators returned by the <tt>iterator</tt> method of the collections returned by all of this class's "collection view methods" are <i>fail-fast</i>: if the map is structurally modified at any time after the iterator is created, in any way except through the iterator's own <tt>remove</tt> method, the iterator will throw a <a href="../../java/util/ConcurrentModificationException.html" title="class in java.util"><code>ConcurrentModificationException</code></a>. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.                                                                            </p><p>Note that the fail-fast behavior of an iterator cannot be guaranteed as it is, generally speaking, impossible to make any hard guarantees in the presence of unsynchronized concurrent modification. Fail-fast iterators throw <tt>ConcurrentModificationException</tt> on a best-effort basis. Therefore, it would be wrong to write a program that depended on this exception for its correctness: <i>fail-fast iterators should be used only to detect bugs.        </i>                                                      </p><p>Implementation note: This is a simple <i>linear-probe</i> hash table, as described for example in texts by Sedgewick and Knuth. The array alternates holding keys and values. (This has better locality for large tables than does using separate arrays.) For many JRE implementations and operation mixes, this class will yield better performance than <a href="../../java/util/HashMap.html" title="class in java.util"><code>HashMap</code></a> (which uses <i>chaining</i> rather than linear-probing).                                                          </p><p>This class is a member of the <a href="http://download.oracle.com/javase/7/docs/technotes/guides/collections/index.html"> Java Collections Framework   </a>.       </p>                                                          </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.4</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/System.html#identityHashCode-java.lang.Object-"><code>System.identityHashCode(Object)</code></a>, <a href="../../java/lang/Object.html#hashCode--"><code>Object.hashCode()</code></a>, <a href="../../java/util/Collection.html" title="interface in java.util"><code>Collection</code></a>, <a href="../../java/util/Map.html" title="interface in java.util"><code>Map</code></a>, <a href="../../java/util/HashMap.html" title="class in java.util"><code>HashMap</code></a>, <a href="../../java/util/TreeMap.html" title="class in java.util"><code>TreeMap</code></a>, <a href="../../serialized-form.html#java.util.IdentityHashMap">Serialized Form </a>       </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:IdentityHashMap"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:IdentityHashMap-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:IdentityHashMap--"/><a name="IdentityHashMap--"/><ul class="blockList"><li class="blockList"><h4>IdentityHashMap</h4><pre>public IdentityHashMap()</pre><div class="block">Constructs a new, empty identity hash map with a default expected maximum size (21).             </div></li></ul> <a end_ctx_id="constructor:IdentityHashMap--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:IdentityHashMap-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:IdentityHashMap-int-"/><a name="IdentityHashMap-int-"/><ul class="blockList"><li class="blockList"><h4>IdentityHashMap</h4><pre>public IdentityHashMap(int expectedMaxSize)</pre><div class="block">Constructs a new, empty map with the specified expected maximum size. Putting more than the expected number of key-value mappings into the map may cause the internal data structure to grow, which may be somewhat time-consuming.                                   </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>expectedMaxSize</code> - the expected maximum size of the map         </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if <tt>expectedMaxSize</tt> is negative      </dd>  </dl></li></ul> <a end_ctx_id="constructor:IdentityHashMap-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:IdentityHashMap-java.util.Map- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:IdentityHashMap-java.util.Map-"/><a name="IdentityHashMap-java.util.Map-"/><ul class="blockListLast"><li class="blockList"><h4>IdentityHashMap</h4><pre>public IdentityHashMap(<a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;? extends <a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,? extends <a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt; m)</pre><div class="block">Constructs a new identity hash map containing the keys-value mappings in the specified map.             </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>m</code> - the map whose mappings are to be placed into this map             </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified map is null        </dd>  </dl></li></ul> <a end_ctx_id="constructor:IdentityHashMap-java.util.Map-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:size-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:size--"/><a name="size--"/><ul class="blockList"><li class="blockList"><h4>size</h4><pre>public int size()</pre><div class="block">Returns the number of key-value mappings in this identity hash map.          </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#size--">size</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#size--">size</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the number of key-value mappings in this map       </dd>   </dl></li></ul> <a end_ctx_id="method:size--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:isEmpty-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:isEmpty--"/><a name="isEmpty--"/><ul class="blockList"><li class="blockList"><h4>isEmpty</h4><pre>public boolean isEmpty()</pre><div class="block">Returns <tt>true</tt> if this identity hash map contains no key-value mappings.          </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#isEmpty--">isEmpty</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#isEmpty--">isEmpty</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this identity hash map contains no key-value mappings          </dd>   </dl></li></ul> <a end_ctx_id="method:isEmpty--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:get-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:get-java.lang.Object-"/><a name="get-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>get</h4><pre>public <a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a> get(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> key)</pre><div class="block">Returns the value to which the specified key is mapped, or <code>null</code> if this map contains no mapping for the key.<p>More formally, if this map contains a mapping from a key <code>k</code> to a value <code>v</code> such that <code>(key == k)  </code>, then this method returns <code>v</code>; otherwise it returns <code>null</code>. (There can be at most one such mapping.)                                   </p><p>A return value of <code>null</code> does not <i>necessarily</i> indicate that the map contains no mapping for the key; it's also possible that the map explicitly maps the key to <code>null</code>. The <a href="../../java/util/IdentityHashMap.html#containsKey-java.lang.Object-"><code>containsKey</code></a> operation may be used to distinguish these two cases.                                        </p>                    </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#get-java.lang.Object-">get</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#get-java.lang.Object-">get</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>key</code> - the key whose associated value is to be returned           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the value to which the specified key is mapped, or <code>null</code> if this map contains no mapping for the key                   </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/IdentityHashMap.html#put-K-V-"><code>put(Object, Object) </code></a> </dd>     </dl></li></ul> <a end_ctx_id="method:get-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:containsKey-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:containsKey-java.lang.Object-"/><a name="containsKey-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>containsKey</h4><pre>public boolean containsKey(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> key)</pre><div class="block">Tests whether the specified object reference is a key in this identity hash map.             </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#containsKey-java.lang.Object-">containsKey</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#containsKey-java.lang.Object-">containsKey</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>key</code> - possible key    </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if the specified object reference is a key in this map            </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/IdentityHashMap.html#containsValue-java.lang.Object-"><code>containsValue(Object)</code></a> </dd>     </dl></li></ul> <a end_ctx_id="method:containsKey-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:containsValue-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:containsValue-java.lang.Object-"/><a name="containsValue-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>containsValue</h4><pre>public boolean containsValue(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> value)</pre><div class="block">Tests whether the specified object reference is a value in this identity hash map.             </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#containsValue-java.lang.Object-">containsValue</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#containsValue-java.lang.Object-">containsValue</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>value</code> - value whose presence in this map is to be tested            </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this map maps one or more keys to the specified object reference              </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/IdentityHashMap.html#containsKey-java.lang.Object-"><code>containsKey(Object)</code></a> </dd>     </dl></li></ul> <a name="put-java.lang.Object-java.lang.Object-"/><a end_ctx_id="method:containsValue-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:put-K-V- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:put-K-V-"/><a name="put-K-V-"/><ul class="blockList"><li class="blockList"><h4>put</h4><pre>public <a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a> put(<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a> key,
             <a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a> value)</pre><div class="block">Associates the specified value with the specified key in this identity hash map. If the map previously contained a mapping for the key, the old value is replaced.                           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#put-K-V-">put</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#put-K-V-">put</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>key</code> - the key with which the specified value is to be associated             </dd><dd> <code>value</code> - the value to be associated with the specified key           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the previous value associated with <tt>key</tt>, or <tt>null</tt> if there was no mapping for <tt>key</tt>. (A <tt>null</tt> return can also indicate that the map previously associated <tt>null</tt> with <tt>key</tt>.)                            </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/Object.html#equals-java.lang.Object-"><code>Object.equals(Object)</code></a>, <a href="../../java/util/IdentityHashMap.html#get-java.lang.Object-"><code>get(Object)</code></a>, <a href="../../java/util/IdentityHashMap.html#containsKey-java.lang.Object-"><code>containsKey(Object)</code></a>   </dd>     </dl></li></ul> <a end_ctx_id="method:put-K-V-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:putAll-java.util.Map- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:putAll-java.util.Map-"/><a name="putAll-java.util.Map-"/><ul class="blockList"><li class="blockList"><h4>putAll</h4><pre>public void putAll(<a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;? extends <a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,? extends <a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt; m)</pre><div class="block">Copies all of the mappings from the specified map to this map. These mappings will replace any mappings that this map had for any of the keys currently in the specified map.                               </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#putAll-java.util.Map-">putAll</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#putAll-java.util.Map-">putAll</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>m</code> - mappings to be stored in this map         </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified map is null        </dd>    </dl></li></ul> <a end_ctx_id="method:putAll-java.util.Map-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:remove-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:remove-java.lang.Object-"/><a name="remove-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>remove</h4><pre>public <a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a> remove(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> key)</pre><div class="block">Removes the mapping for this key from this map if present.          </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#remove-java.lang.Object-">remove</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#remove-java.lang.Object-">remove</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>key</code> - key whose mapping is to be removed from the map            </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the previous value associated with <tt>key</tt>, or <tt>null</tt> if there was no mapping for <tt>key</tt>. (A <tt>null</tt> return can also indicate that the map previously associated <tt>null</tt> with <tt>key</tt>.)                            </dd>    </dl></li></ul> <a end_ctx_id="method:remove-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:clear-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:clear--"/><a name="clear--"/><ul class="blockList"><li class="blockList"><h4>clear</h4><pre>public void clear()</pre><div class="block">Removes all of the mappings from this map. The map will be empty after this call returns.                </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#clear--">clear</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#clear--">clear</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd>  </dl></li></ul> <a end_ctx_id="method:clear--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:equals-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:equals-java.lang.Object-"/><a name="equals-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>equals</h4><pre>public boolean equals(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Compares the specified object with this map for equality. Returns <tt>true</tt> if the given object is also a map and the two maps represent identical object-reference mappings. More formally, this map is equal to another map <tt>m</tt> if and only if <tt>this.entrySet().equals(m.entrySet())</tt>.<p> <b>Owing to the reference-equality-based semantics of this map it is possible that the symmetry and transitivity requirements of the <tt>Object.equals</tt> contract may be violated if this map is compared to a normal map. However, the <tt>Object.equals</tt> contract is guaranteed to hold among <tt>IdentityHashMap</tt> instances.                                           </b> </p>                                         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#equals-java.lang.Object-">equals</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#equals-java.lang.Object-">equals</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - object to be compared for equality with this map           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if the specified object is equal to this map          </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/Object.html#equals-java.lang.Object-"><code>Object.equals(Object)</code></a> </dd>     </dl></li></ul> <a end_ctx_id="method:equals-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:hashCode-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:hashCode--"/><a name="hashCode--"/><ul class="blockList"><li class="blockList"><h4>hashCode</h4><pre>public int hashCode()</pre><div class="block">Returns the hash code value for this map. The hash code of a map is defined to be the sum of the hash codes of each entry in the map's <tt>entrySet()</tt> view. This ensures that <tt>m1.equals(m2)</tt> implies that <tt>m1.hashCode()==m2.hashCode()</tt> for any two <tt>IdentityHashMap</tt> instances <tt>m1</tt> and <tt>m2</tt>, as required by the general contract of <a href="../../java/lang/Object.html#hashCode--"><code>Object.hashCode()</code></a>.<p> <b>Owing to the reference-equality-based semantics of the <tt>Map.Entry</tt> instances in the set returned by this map's <tt>entrySet</tt> method, it is possible that the contractual requirement of <tt>Object.hashCode</tt> mentioned in the previous paragraph will be violated if one of the two objects being compared is an <tt>IdentityHashMap</tt> instance and the other is a normal map.                                                     </b> </p>                                                      </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#hashCode--">hashCode</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#hashCode--">hashCode</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the hash code value for this map      </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/Object.html#equals-java.lang.Object-"><code>Object.equals(Object)</code></a>, <a href="../../java/util/IdentityHashMap.html#equals-java.lang.Object-"><code>equals(Object)</code></a>  </dd>    </dl></li></ul> <a end_ctx_id="method:hashCode--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:clone-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:clone--"/><a name="clone--"/><ul class="blockList"><li class="blockList"><h4>clone</h4><pre>public <a href="../../java/lang/Object.html" title="class in java.lang">Object</a> clone()</pre><div class="block">Returns a shallow copy of this identity hash map: the keys and values themselves are not cloned.                </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#clone--">clone</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a shallow copy of this map     </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/Cloneable.html" title="interface in java.lang"><code>Cloneable</code></a> </dd>   </dl></li></ul> <a end_ctx_id="method:clone--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:keySet-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:keySet--"/><a name="keySet--"/><ul class="blockList"><li class="blockList"><h4>keySet</h4><pre>public <a href="../../java/util/Set.html" title="interface in java.util">Set</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>&gt; keySet()</pre><div class="block">Returns an identity-based set view of the keys contained in this map. The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. If the map is modified while an iteration over the set is in progress, the results of the iteration are undefined. The set supports element removal, which removes the corresponding mapping from the map, via the <tt>Iterator.remove</tt>, <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt>, and <tt>clear</tt> methods. It does not support the <tt>add</tt> or <tt>addAll</tt> methods.<p> <b>While the object returned by this method implements the <tt>Set</tt> interface, it does <i>not</i> obey <tt>Set's</tt> general contract. Like its backing map, the set returned by this method defines element equality as reference-equality rather than object-equality. This affects the behavior of its <tt>contains</tt>, <tt>remove</tt>, <tt>containsAll</tt>, <tt>equals</tt>, and <tt>hashCode</tt> methods.                                                </b> </p><p> <b>The <tt>equals</tt> method of the returned set returns <tt>true</tt> only if the specified object is a set containing exactly the same object references as the returned set. The symmetry and transitivity requirements of the <tt>Object.equals</tt> contract may be violated if the set returned by this method is compared to a normal set. However, the <tt>Object.equals</tt> contract is guaranteed to hold among sets returned by this method.                                                                 </b> </p><p>The <tt>hashCode</tt> method of the returned set returns the sum of the <i>identity hashcodes </i> of the elements in the set, rather than the sum of their hashcodes. This is mandated by the change in the semantics of the <tt>equals</tt> method, in order to enforce the general contract of the <tt>Object.hashCode</tt> method among sets returned by this method.                                                       </p>                                                                                  </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#keySet--">keySet</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#keySet--">keySet</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an identity-based set view of the keys contained in this map          </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/Object.html#equals-java.lang.Object-"><code>Object.equals(Object)</code></a>, <a href="../../java/lang/System.html#identityHashCode-java.lang.Object-"><code>System.identityHashCode(Object)</code></a>  </dd>    </dl></li></ul> <a end_ctx_id="method:keySet--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:values-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:values--"/><a name="values--"/><ul class="blockList"><li class="blockList"><h4>values</h4><pre>public <a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt; values()</pre><div class="block">Returns a <a href="../../java/util/Collection.html" title="interface in java.util"><code>Collection</code></a> view of the values contained in this map. The collection is backed by the map, so changes to the map are reflected in the collection, and vice-versa. If the map is modified while an iteration over the collection is in progress, the results of the iteration are undefined. The collection supports element removal, which removes the corresponding mapping from the map, via the <tt>Iterator.remove</tt>, <tt>Collection.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and <tt>clear</tt> methods. It does not support the <tt>add</tt> or <tt>addAll</tt> methods.<p> <b>While the object returned by this method implements the <tt>Collection</tt> interface, it does <i>not</i> obey <tt>Collection's</tt> general contract. Like its backing map, the collection returned by this method defines element equality as reference-equality rather than object-equality. This affects the behavior of its <tt>contains</tt>, <tt>remove</tt> and <tt>containsAll</tt> methods.                                              </b> </p>                                                                                 </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#values--">values</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#values--">values</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a collection view of the values contained in this map         </dd>   </dl></li></ul> <a end_ctx_id="method:values--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:entrySet-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:entrySet--"/><a name="entrySet--"/><ul class="blockList"><li class="blockList"><h4>entrySet</h4><pre>public <a href="../../java/util/Set.html" title="interface in java.util">Set</a>&lt;<a href="../../java/util/Map.Entry.html" title="interface in java.util">Map.Entry</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;&gt; entrySet()</pre><div class="block">Returns a <a href="../../java/util/Set.html" title="interface in java.util"><code>Set</code></a> view of the mappings contained in this map. Each element in the returned set is a reference-equality-based <tt>Map.Entry</tt>. The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. If the map is modified while an iteration over the set is in progress, the results of the iteration are undefined. The set supports element removal, which removes the corresponding mapping from the map, via the <tt>Iterator.remove</tt>, <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and <tt>clear</tt> methods. It does not support the <tt>add</tt> or <tt>addAll</tt> methods.<p>Like the backing map, the <tt>Map.Entry</tt> objects in the set returned by this method define key and value equality as reference-equality rather than object-equality. This affects the behavior of the <tt>equals</tt> and <tt>hashCode</tt> methods of these <tt>Map.Entry</tt> objects. A reference-equality based <tt>Map.Entry e </tt> is equal to an object <tt>o</tt> if and only if <tt>o</tt> is a <tt>Map.Entry</tt> and <tt>e.getKey()==o.getKey() &amp;&amp; e.getValue()==o.getValue()  </tt>. To accommodate these equals semantics, the <tt>hashCode</tt> method returns <tt>System.identityHashCode(e.getKey()) ^ System.identityHashCode(e.getValue())  </tt>.                                                                   </p><p> <b>Owing to the reference-equality-based semantics of the <tt>Map.Entry</tt> instances in the set returned by this method, it is possible that the symmetry and transitivity requirements of the <a href="../../java/lang/Object.html#equals-java.lang.Object-"><code>Object.equals(Object)</code></a> contract may be violated if any of the entries in the set is compared to a normal map entry, or if the set returned by this method is compared to a set of normal map entries (such as would be returned by a call to this method on a normal map). However, the <tt>Object.equals</tt> contract is guaranteed to hold among identity-based map entries, and among sets of such entries.                                                                                                  </b> </p>                                                                                           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#entrySet--">entrySet</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#entrySet--">entrySet</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">K</a>,<a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap">V</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a set view of the identity-mappings contained in this map         </dd>   </dl></li></ul> <a end_ctx_id="method:entrySet--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:forEach-java.util.function.BiConsumer- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:forEach-java.util.function.BiConsumer-"><span class="diff-html-added"/></a><a name="forEach-java.util.function.BiConsumer-"/><ul class="blockList"><li class="blockList"><h4><span class="diff-html-added">forEach</span></h4><pre><span class="diff-html-added">public void forEach(</span><a href="../../java/util/function/BiConsumer.html" title="interface in java.util.function"><span class="diff-html-added">BiConsumer</span></a><span class="diff-html-added">&lt;?</span> <span class="diff-html-added">super</span> <a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap"><span class="diff-html-added">K</span></a><span class="diff-html-added">,?</span> <span class="diff-html-added">super</span> <a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap"><span class="diff-html-added">V</span></a><span class="diff-html-added">&gt; action)</span></pre><div class="block"> <span class="descfrmTypeLabel"><span class="diff-html-added">Description</span> <span class="diff-html-added">copied</span> <span class="diff-html-added">from</span> <span class="diff-html-added">interface:</span> <code><a href="../../java/util/Map.html#forEach-java.util.function.BiConsumer-"><span class="diff-html-added">Map</span></a></code>   </span> </div><div class="block"><span class="diff-html-added">Performs</span> <span class="diff-html-added">the</span> <span class="diff-html-added">given</span> <span class="diff-html-added">action</span> <span class="diff-html-added">for</span> <span class="diff-html-added">each</span> <span class="diff-html-added">entry</span> <span class="diff-html-added">in</span> <span class="diff-html-added">this</span> <span class="diff-html-added">map</span> <span class="diff-html-added">until</span> <span class="diff-html-added">all</span> <span class="diff-html-added">entries</span> <span class="diff-html-added">have</span> <span class="diff-html-added">been</span> <span class="diff-html-added">processed</span> <span class="diff-html-added">or</span> <span class="diff-html-added">the</span> <span class="diff-html-added">action</span> <span class="diff-html-added">throws</span> <span class="diff-html-added">an</span> <span class="diff-html-added">exception.</span> <span class="diff-html-added">Unless</span> <span class="diff-html-added">otherwise</span> <span class="diff-html-added">specified</span> <span class="diff-html-added">by</span> <span class="diff-html-added">the</span> <span class="diff-html-added">implementing</span> <span class="diff-html-added">class,</span> <span class="diff-html-added">actions</span> <span class="diff-html-added">are</span> <span class="diff-html-added">performed</span> <span class="diff-html-added">in</span> <span class="diff-html-added">the</span> <span class="diff-html-added">order</span> <span class="diff-html-added">of</span> <span class="diff-html-added">entry</span> <span class="diff-html-added">set</span> <span class="diff-html-added">iteration</span> <span class="diff-html-added">(if</span> <span class="diff-html-added">an</span> <span class="diff-html-added">iteration</span> <span class="diff-html-added">order</span> <span class="diff-html-added">is</span> <span class="diff-html-added">specified.)</span> <span class="diff-html-added">Exceptions</span> <span class="diff-html-added">thrown</span> <span class="diff-html-added">by</span> <span class="diff-html-added">the</span> <span class="diff-html-added">action</span> <span class="diff-html-added">are</span> <span class="diff-html-added">relayed</span> <span class="diff-html-added">to</span> <span class="diff-html-added">the</span> <span class="diff-html-added">caller.</span>                                                      </div><dl> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../java/util/Map.html#forEach-java.util.function.BiConsumer-"><span class="diff-html-added">forEach</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../java/util/Map.html" title="interface in java.util"><span class="diff-html-added">Map</span></a><span class="diff-html-added">&lt;</span><a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap"><span class="diff-html-added">K</span></a><span class="diff-html-added">,</span><a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap"><span class="diff-html-added">V</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="paramLabel"><span class="diff-html-added">Parameters:</span></span>   </dt><dd> <code><span class="diff-html-added">action</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">The</span> <span class="diff-html-added">action</span> <span class="diff-html-added">to</span> <span class="diff-html-added">be</span> <span class="diff-html-added">performed</span> <span class="diff-html-added">for</span> <span class="diff-html-added">each</span> <span class="diff-html-added">entry</span>          </dd>  </dl></li></ul> <a end_ctx_id="method:forEach-java.util.function.BiConsumer-"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:replaceAll-java.util.function.BiFunction- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:replaceAll-java.util.function.BiFunction-"><span class="diff-html-added"/></a><a name="replaceAll-java.util.function.BiFunction-"/><ul class="blockListLast"><li class="blockList"><h4><span class="diff-html-added">replaceAll</span></h4><pre><span class="diff-html-added">public void replaceAll(</span><a href="../../java/util/function/BiFunction.html" title="interface in java.util.function"><span class="diff-html-added">BiFunction</span></a><span class="diff-html-added">&lt;?</span> <span class="diff-html-added">super</span> <a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap"><span class="diff-html-added">K</span></a><span class="diff-html-added">,?</span> <span class="diff-html-added">super</span> <a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap"><span class="diff-html-added">V</span></a><span class="diff-html-added">,?</span> <span class="diff-html-added">extends</span> <a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap"><span class="diff-html-added">V</span></a><span class="diff-html-added">&gt; function)</span></pre><div class="block"> <span class="descfrmTypeLabel"><span class="diff-html-added">Description</span> <span class="diff-html-added">copied</span> <span class="diff-html-added">from</span> <span class="diff-html-added">interface:</span> <code><a href="../../java/util/Map.html#replaceAll-java.util.function.BiFunction-"><span class="diff-html-added">Map</span></a></code>   </span> </div><div class="block"><span class="diff-html-added">Replaces</span> <span class="diff-html-added">each</span> <span class="diff-html-added">entry's</span> <span class="diff-html-added">value</span> <span class="diff-html-added">with</span> <span class="diff-html-added">the</span> <span class="diff-html-added">result</span> <span class="diff-html-added">of</span> <span class="diff-html-added">invoking</span> <span class="diff-html-added">the</span> <span class="diff-html-added">given</span> <span class="diff-html-added">function</span> <span class="diff-html-added">on</span> <span class="diff-html-added">that</span> <span class="diff-html-added">entry</span> <span class="diff-html-added">until</span> <span class="diff-html-added">all</span> <span class="diff-html-added">entries</span> <span class="diff-html-added">have</span> <span class="diff-html-added">been</span> <span class="diff-html-added">processed</span> <span class="diff-html-added">or</span> <span class="diff-html-added">the</span> <span class="diff-html-added">function</span> <span class="diff-html-added">throws</span> <span class="diff-html-added">an</span> <span class="diff-html-added">exception.</span> <span class="diff-html-added">Exceptions</span> <span class="diff-html-added">thrown</span> <span class="diff-html-added">by</span> <span class="diff-html-added">the</span> <span class="diff-html-added">function</span> <span class="diff-html-added">are</span> <span class="diff-html-added">relayed</span> <span class="diff-html-added">to</span> <span class="diff-html-added">the</span> <span class="diff-html-added">caller.</span>                                    </div><dl> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../java/util/Map.html#replaceAll-java.util.function.BiFunction-"><span class="diff-html-added">replaceAll</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../java/util/Map.html" title="interface in java.util"><span class="diff-html-added">Map</span></a><span class="diff-html-added">&lt;</span><a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap"><span class="diff-html-added">K</span></a><span class="diff-html-added">,</span><a href="../../java/util/IdentityHashMap.html" title="type parameter in IdentityHashMap"><span class="diff-html-added">V</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="paramLabel"><span class="diff-html-added">Parameters:</span></span>   </dt><dd> <code><span class="diff-html-added">function</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">the</span> <span class="diff-html-added">function</span> <span class="diff-html-added">to</span> <span class="diff-html-added">apply</span> <span class="diff-html-added">to</span> <span class="diff-html-added">each</span> <span class="diff-html-added">entry</span>         </dd>  </dl></li></ul> <a end_ctx_id="method:replaceAll-java.util.function.BiFunction-"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table></diff></diffreport>