<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:Set [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:Set"/><ul class="blockList"><li class="blockList"><dl> <dt> <span class="paramLabel">Type Parameters: </span>   </dt><dd> <code>E</code> - the type of elements maintained by this set          </dd> </dl><dl> <dt>All Superinterfaces: </dt><dd> <a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;E&gt;, <a href="../../java/lang/Iterable.html" title="interface in java.lang">Iterable</a>&lt;E&gt;  </dd> </dl><dl> <dt>All Known Subinterfaces:  </dt><dd> <a href="../../java/util/NavigableSet.html" title="interface in java.util">NavigableSet</a>&lt;E&gt;, <a href="../../java/util/SortedSet.html" title="interface in java.util">SortedSet</a>&lt;E&gt;  </dd> </dl><dl> <dt>All Known Implementing Classes:   </dt><dd> <a href="../../java/util/AbstractSet.html" title="class in java.util">AbstractSet</a>, <a href="../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="class in java.util.concurrent">ConcurrentHashMap.KeySetView</a>, <a href="../../java/util/concurrent/ConcurrentSkipListSet.html" title="class in java.util.concurrent">ConcurrentSkipListSet</a>, <a href="../../java/util/concurrent/CopyOnWriteArraySet.html" title="class in java.util.concurrent">CopyOnWriteArraySet</a>, <a href="../../java/util/EnumSet.html" title="class in java.util">EnumSet</a>, <a href="../../java/util/HashSet.html" title="class in java.util">HashSet</a>, <a href="../../javax/print/attribute/standard/JobStateReasons.html" title="class in javax.print.attribute.standard">JobStateReasons</a>, <a href="../../java/util/LinkedHashSet.html" title="class in java.util">LinkedHashSet</a>, <a href="../../java/util/TreeSet.html" title="class in java.util">TreeSet</a>         </dd> </dl> <hr/> <br/><pre>public interface <span class="typeNameLabel">Set&lt;E&gt;</span>
extends <a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;E&gt;</pre><div class="block">A collection that contains no duplicate elements. More formally, sets contain no pair of elements <code>e1</code> and <code>e2</code> such that <code>e1.equals(e2)</code>, and at most one null element. As implied by its name, this interface models the mathematical <i>set</i> abstraction.<p>The <tt>Set</tt> interface places additional stipulations, beyond those inherited from the <tt>Collection</tt> interface, on the contracts of all constructors and on the contracts of the <tt>add</tt>, <tt>equals</tt> and <tt>hashCode</tt> methods. Declarations for other inherited methods are also included here for convenience. (The specifications accompanying these declarations have been tailored to the <tt>Set</tt> interface, but they do not contain any additional stipulations.)                                                            </p><p>The additional stipulation on constructors is, not surprisingly, that all constructors must create a set that contains no duplicate elements (as defined above).                      </p><p>Note: Great care must be exercised if mutable objects are used as set elements. The behavior of a set is not specified if the value of an object is changed in a manner that affects <tt>equals</tt> comparisons while the object is an element in the set. A special case of this prohibition is that it is not permissible for a set to contain itself as an element.                                                                  </p><p>Some set implementations have restrictions on the elements that they may contain. For example, some implementations prohibit null elements, and some have restrictions on the types of their elements. Attempting to add an ineligible element throws an unchecked exception, typically <tt>NullPointerException</tt> or <tt>ClassCastException</tt>. Attempting to query the presence of an ineligible element may throw an exception, or it may simply return false; some implementations will exhibit the former behavior and some will exhibit the latter. More generally, attempting an operation on an ineligible element whose completion would not result in the insertion of an ineligible element into the set may throw an exception or it may succeed, at the option of the implementation. Such exceptions are marked as "optional" in the specification for this interface.                                                                                                                            </p><p>This interface is a member of the <a href="http://download.oracle.com/javase/7/docs/technotes/guides/collections/index.html"> Java Collections Framework   </a>.       </p>                                      </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Collection.html" title="interface in java.util"><code>Collection</code></a>, <a href="../../java/util/List.html" title="interface in java.util"><code>List</code></a>, <a href="../../java/util/SortedSet.html" title="interface in java.util"><code>SortedSet</code></a>, <a href="../../java/util/HashSet.html" title="class in java.util"><code>HashSet</code></a>, <a href="../../java/util/TreeSet.html" title="class in java.util"><code>TreeSet</code></a>, <a href="../../java/util/AbstractSet.html" title="class in java.util"><code>AbstractSet</code></a>, <a href="../../java/util/Collections.html#singleton-T-"><code>Collections.singleton(java.lang.Object)</code></a>, <a href="../../java/util/Collections.html#EMPTY_SET"><code>Collections.EMPTY_SET</code></a>        </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:Set"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:size-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:size--"/><a name="size--"/><ul class="blockList"><li class="blockList"><h4>size</h4><pre>int size()</pre><div class="block">Returns the number of elements in this set (its cardinality). If this set contains more than <tt>Integer.MAX_VALUE</tt> elements, returns <tt>Integer.MAX_VALUE</tt>.                   </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#size--">size</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Set.html" title="type parameter in Set">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the number of elements in this set (its cardinality)        </dd>  </dl></li></ul> <a end_ctx_id="method:size--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:isEmpty-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:isEmpty--"/><a name="isEmpty--"/><ul class="blockList"><li class="blockList"><h4>isEmpty</h4><pre>boolean isEmpty()</pre><div class="block">Returns <tt>true</tt> if this set contains no elements.       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#isEmpty--">isEmpty</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Set.html" title="type parameter in Set">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this set contains no elements       </dd>  </dl></li></ul> <a end_ctx_id="method:isEmpty--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:contains-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:contains-java.lang.Object-"/><a name="contains-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>contains</h4><pre>boolean contains(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Returns <tt>true</tt> if this set contains the specified element. More formally, returns <tt>true</tt> if and only if this set contains an element <tt>e</tt> such that <tt>(o==null ? e==null : o.equals(e))</tt>.                         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#contains-java.lang.Object-">contains</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Set.html" title="type parameter in Set">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element whose presence in this set is to be tested            </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this set contains the specified element        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the type of the specified element is incompatible with this set (<a href="Collection.html#optional-restrictions">optional</a>)               </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null and this set does not permit null elements (<a href="Collection.html#optional-restrictions">optional</a>)                 </dd>    </dl></li></ul> <a end_ctx_id="method:contains-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:iterator-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:iterator--"/><a name="iterator--"/><ul class="blockList"><li class="blockList"><h4>iterator</h4><pre><a href="../../java/util/Iterator.html" title="interface in java.util">Iterator</a>&lt;<a href="../../java/util/Set.html" title="type parameter in Set">E</a>&gt; iterator()</pre><div class="block">Returns an iterator over the elements in this set. The elements are returned in no particular order (unless this set is an instance of some class that provides a guarantee).                             </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#iterator--">iterator</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Set.html" title="type parameter in Set">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/Iterable.html#iterator--">iterator</a></code> in interface <code><a href="../../java/lang/Iterable.html" title="interface in java.lang">Iterable</a>&lt;<a href="../../java/util/Set.html" title="type parameter in Set">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an iterator over the elements in this set       </dd>   </dl></li></ul> <a end_ctx_id="method:iterator--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toArray-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toArray--"/><a name="toArray--"/><ul class="blockList"><li class="blockList"><h4>toArray</h4><pre><a href="../../java/lang/Object.html" title="class in java.lang">Object</a>[] toArray()</pre><div class="block">Returns an array containing all of the elements in this set. If this set makes any guarantees as to what order its elements are returned by its iterator, this method must return the elements in the same order.<p>The returned array will be "safe" in that no references to it are maintained by this set. (In other words, this method must allocate a new array even if this set is backed by an array). The caller is thus free to modify the returned array.                                             </p><p>This method acts as bridge between array-based and collection-based APIs.         </p>                                     </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#toArray--">toArray</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Set.html" title="type parameter in Set">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an array containing all the elements in this set        </dd>  </dl></li></ul> <a name="toArray-java.lang.Object:A-"/><a end_ctx_id="method:toArray--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toArray-T:A- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toArray-T:A-"/><a name="toArray-T:A-"/><ul class="blockList"><li class="blockList"><h4>toArray</h4><pre>&lt;T&gt; T[] toArray(T[] a)</pre><div class="block">Returns an array containing all of the elements in this set; the runtime type of the returned array is that of the specified array. If the set fits in the specified array, it is returned therein. Otherwise, a new array is allocated with the runtime type of the specified array and the size of this set.<p>If this set fits in the specified array with room to spare (i.e., the array has more elements than this set), the element in the array immediately following the end of the set is set to <tt>null</tt>. (This is useful in determining the length of this set <i>only</i> if the caller knows that this set does not contain any null elements.)                                                            </p><p>If this set makes any guarantees as to what order its elements are returned by its iterator, this method must return the elements in the same order.                          </p><p>Like the <a href="../../java/util/Set.html#toArray--"><code>toArray()</code></a> method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.                                      </p><p>Suppose <tt>x</tt> is a set known to contain only strings. The following code can be used to dump the set into a newly allocated array of <tt>String</tt>:<pre>
     String[] y = x.toArray(new String[0]);</pre> Note that <tt>toArray(new Object[0]) </tt> is identical in function to <tt>toArray()</tt>.                                   </p>                                                       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#toArray-T:A-">toArray</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Set.html" title="type parameter in Set">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Type Parameters: </span>   </dt><dd> <code>T</code> - the runtime type of the array to contain the collection            </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>a</code> - the array into which the elements of this set are to be stored, if it is big enough; otherwise, a new array of the same runtime type is allocated for this purpose.                                  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an array containing all the elements in this set        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/ArrayStoreException.html" title="class in java.lang">ArrayStoreException</a></code> - if the runtime type of the specified array is not a supertype of the runtime type of every element in this set                        </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified array is null        </dd>     </dl></li></ul> <a name="add-java.lang.Object-"/><a end_ctx_id="method:toArray-T:A-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:add-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:add-E-"/><a name="add-E-"/><ul class="blockList"><li class="blockList"><h4>add</h4><pre>boolean add(<a href="../../java/util/Set.html" title="type parameter in Set">E</a> e)</pre><div class="block">Adds the specified element to this set if it is not already present (optional operation). More formally, adds the specified element <tt>e</tt> to this set if the set contains no element <tt>e2</tt> such that <tt>(e==null ? e2==null : e.equals(e2))</tt>. If this set already contains the element, the call leaves the set unchanged and returns <tt>false</tt>. In combination with the restriction on constructors, this ensures that sets never contain duplicate elements.<p>The stipulation above does not imply that sets must accept all elements; sets may refuse to add any particular element, including <tt>null</tt>, and throw an exception, as described in the specification for <a href="../../java/util/Collection.html#add-E-"><code>Collection.add</code></a>. Individual set implementations should clearly document any restrictions on the elements that they may contain.                                               </p>                                                                 </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#add-E-">add</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Set.html" title="type parameter in Set">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - element to be added to this set         </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this set did not already contain the specified element           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/UnsupportedOperationException.html" title="class in java.lang">UnsupportedOperationException</a></code> - if the <tt>add</tt> operation is not supported by this set            </dd><dd> <code><a href="../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of the specified element prevents it from being added to this set                 </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null and this set does not permit null elements                </dd><dd> <code><a href="../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if some property of the specified element prevents it from being added to this set                 </dd>    </dl></li></ul> <a end_ctx_id="method:add-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:remove-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:remove-java.lang.Object-"/><a name="remove-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>remove</h4><pre>boolean remove(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Removes the specified element from this set if it is present (optional operation). More formally, removes an element <tt>e</tt> such that <tt>(o==null ? e==null : o.equals(e))</tt>, if this set contains such an element. Returns <tt>true</tt> if this set contained the element (or equivalently, if this set changed as a result of the call). (This set will not contain the element once the call returns.)                                                           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#remove-java.lang.Object-">remove</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Set.html" title="type parameter in Set">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - object to be removed from this set, if present           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this set contained the specified element        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the type of the specified element is incompatible with this set (<a href="Collection.html#optional-restrictions">optional</a>)               </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null and this set does not permit null elements (<a href="Collection.html#optional-restrictions">optional</a>)                 </dd><dd> <code><a href="../../java/lang/UnsupportedOperationException.html" title="class in java.lang">UnsupportedOperationException</a></code> - if the <tt>remove</tt> operation is not supported by this set            </dd>    </dl></li></ul> <a end_ctx_id="method:remove-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:containsAll-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:containsAll-java.util.Collection-"/><a name="containsAll-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>containsAll</h4><pre>boolean containsAll(<a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;?&gt; c)</pre><div class="block">Returns <tt>true</tt> if this set contains all of the elements of the specified collection. If the specified collection is also a set, this method returns <tt>true</tt> if it is a <i>subset</i> of this set.                                 </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#containsAll-java.util.Collection-">containsAll</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Set.html" title="type parameter in Set">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - collection to be checked for containment in this set           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this set contains all of the elements of the specified collection             </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the types of one or more elements in the specified collection are incompatible with this set (<a href="Collection.html#optional-restrictions">optional</a>)                    </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified collection contains one or more null elements and this set does not permit null elements (<a href="Collection.html#optional-restrictions">optional</a>), or if the specified collection is null                            </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Set.html#contains-java.lang.Object-"><code>contains(Object)</code></a> </dd>     </dl></li></ul> <a end_ctx_id="method:containsAll-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:addAll-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:addAll-java.util.Collection-"/><a name="addAll-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>addAll</h4><pre>boolean addAll(<a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;? extends <a href="../../java/util/Set.html" title="type parameter in Set">E</a>&gt; c)</pre><div class="block">Adds all of the elements in the specified collection to this set if they're not already present (optional operation). If the specified collection is also a set, the <tt>addAll</tt> operation effectively modifies this set so that its value is the <i>union</i> of the two sets. The behavior of this operation is undefined if the specified collection is modified while the operation is in progress.                                                               </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#addAll-java.util.Collection-">addAll</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Set.html" title="type parameter in Set">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - collection containing elements to be added to this set           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this set changed as a result of the call           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/UnsupportedOperationException.html" title="class in java.lang">UnsupportedOperationException</a></code> - if the <tt>addAll</tt> operation is not supported by this set            </dd><dd> <code><a href="../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of an element of the specified collection prevents it from being added to this set                    </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified collection contains one or more null elements and this set does not permit null elements, or if the specified collection is null                           </dd><dd> <code><a href="../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if some property of an element of the specified collection prevents it from being added to this set                    </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Set.html#add-E-"><code>add(Object)</code></a> </dd>     </dl></li></ul> <a end_ctx_id="method:addAll-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:retainAll-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:retainAll-java.util.Collection-"/><a name="retainAll-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>retainAll</h4><pre>boolean retainAll(<a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;?&gt; c)</pre><div class="block">Retains only the elements in this set that are contained in the specified collection (optional operation). In other words, removes from this set all of its elements that are not contained in the specified collection. If the specified collection is also a set, this operation effectively modifies this set so that its value is the <i>intersection</i> of the two sets.                                                           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#retainAll-java.util.Collection-">retainAll</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Set.html" title="type parameter in Set">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - collection containing elements to be retained in this set           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this set changed as a result of the call           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/UnsupportedOperationException.html" title="class in java.lang">UnsupportedOperationException</a></code> - if the <tt>retainAll</tt> operation is not supported by this set            </dd><dd> <code><a href="../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of an element of this set is incompatible with the specified collection (<a href="Collection.html#optional-restrictions">optional</a>)                  </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if this set contains a null element and the specified collection does not permit null elements (<a href="Collection.html#optional-restrictions">optional</a>), or if the specified collection is null                          </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Set.html#remove-java.lang.Object-"><code>remove(Object)</code></a> </dd>     </dl></li></ul> <a end_ctx_id="method:retainAll-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:removeAll-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:removeAll-java.util.Collection-"/><a name="removeAll-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>removeAll</h4><pre>boolean removeAll(<a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;?&gt; c)</pre><div class="block">Removes from this set all of its elements that are contained in the specified collection (optional operation). If the specified collection is also a set, this operation effectively modifies this set so that its value is the <i>asymmetric set difference  </i> of the two sets.                                         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#removeAll-java.util.Collection-">removeAll</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Set.html" title="type parameter in Set">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - collection containing elements to be removed from this set           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this set changed as a result of the call           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/UnsupportedOperationException.html" title="class in java.lang">UnsupportedOperationException</a></code> - if the <tt>removeAll</tt> operation is not supported by this set            </dd><dd> <code><a href="../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of an element of this set is incompatible with the specified collection (<a href="Collection.html#optional-restrictions">optional</a>)                  </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if this set contains a null element and the specified collection does not permit null elements (<a href="Collection.html#optional-restrictions">optional</a>), or if the specified collection is null                          </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Set.html#remove-java.lang.Object-"><code>remove(Object)</code></a>, <a href="../../java/util/Set.html#contains-java.lang.Object-"><code>contains(Object)</code></a>  </dd>     </dl></li></ul> <a end_ctx_id="method:removeAll-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:clear-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:clear--"/><a name="clear--"/><ul class="blockList"><li class="blockList"><h4>clear</h4><pre>void clear()</pre><div class="block">Removes all of the elements from this set (optional operation). The set will be empty after this call returns.                  </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#clear--">clear</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Set.html" title="type parameter in Set">E</a>&gt;</code>  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/UnsupportedOperationException.html" title="class in java.lang">UnsupportedOperationException</a></code> - if the <tt>clear</tt> method is not supported by this set            </dd>  </dl></li></ul> <a end_ctx_id="method:clear--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:equals-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:equals-java.lang.Object-"/><a name="equals-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>equals</h4><pre>boolean equals(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Compares the specified object with this set for equality. Returns <tt>true</tt> if the specified object is also a set, the two sets have the same size, and every member of the specified set is contained in this set (or equivalently, every member of this set is contained in the specified set). This definition ensures that the equals method works properly across different implementations of the set interface.                                                                  </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#equals-java.lang.Object-">equals</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Set.html" title="type parameter in Set">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/lang/Object.html#equals-java.lang.Object-">equals</a></code> in class <code><a href="../../java/lang/Object.html" title="class in java.lang">Object</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - object to be compared for equality with this set           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if the specified object is equal to this set          </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/Object.html#hashCode--"><code>Object.hashCode()</code></a>, <a href="../../java/util/HashMap.html" title="class in java.util"><code>HashMap</code></a>  </dd>     </dl></li></ul> <a end_ctx_id="method:equals-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:hashCode-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:hashCode--"/><a name="hashCode--"/><ul class="blockList"><li class="blockList"><h4>hashCode</h4><pre>int hashCode()</pre><div class="block">Returns the hash code value for this set. The hash code of a set is defined to be the sum of the hash codes of the elements in the set, where the hash code of a <tt>null</tt> element is defined to be zero. This ensures that <tt>s1.equals(s2)</tt> implies that <tt>s1.hashCode()==s2.hashCode()</tt> for any two sets <tt>s1</tt> and <tt>s2</tt>, as required by the general contract of <a href="../../java/lang/Object.html#hashCode--"><code>Object.hashCode()</code></a>.                                                                </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#hashCode--">hashCode</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/Set.html" title="type parameter in Set">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/lang/Object.html#hashCode--">hashCode</a></code> in class <code><a href="../../java/lang/Object.html" title="class in java.lang">Object</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the hash code value for this set      </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/Object.html#equals-java.lang.Object-"><code>Object.equals(Object)</code></a>, <a href="../../java/util/Set.html#equals-java.lang.Object-"><code>equals(Object)</code></a>  </dd>    </dl></li></ul> <a end_ctx_id="method:hashCode--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:spliterator-- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:spliterator--"><span class="diff-html-added"/></a><a name="spliterator--"/><ul class="blockListLast"><li class="blockList"><h4><span class="diff-html-added">spliterator</span></h4><pre><span class="diff-html-added">default </span><a href="../../java/util/Spliterator.html" title="interface in java.util"><span class="diff-html-added">Spliterator</span></a><span class="diff-html-added">&lt;</span><a href="../../java/util/Set.html" title="type parameter in Set"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt; spliterator()</span></pre><div class="block"><span class="diff-html-added">Creates</span> <span class="diff-html-added">a</span> <code><span class="diff-html-added">Spliterator</span></code> <span class="diff-html-added">over</span> <span class="diff-html-added">the</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">in</span> <span class="diff-html-added">this</span> <span class="diff-html-added">set.</span><p><span class="diff-html-added">The</span> <code><span class="diff-html-added">Spliterator</span></code> <span class="diff-html-added">reports</span> <a href="../../java/util/Spliterator.html#DISTINCT"><code><span class="diff-html-added">Spliterator.DISTINCT</span></code></a><span class="diff-html-added">.</span> <span class="diff-html-added">Implementations</span> <span class="diff-html-added">should</span> <span class="diff-html-added">document</span> <span class="diff-html-added">the</span> <span class="diff-html-added">reporting</span> <span class="diff-html-added">of</span> <span class="diff-html-added">additional</span> <span class="diff-html-added">characteristic</span> <span class="diff-html-added">values.</span>            </p>        </div><dl> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../java/util/Collection.html#spliterator--"><span class="diff-html-added">spliterator</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../java/util/Collection.html" title="interface in java.util"><span class="diff-html-added">Collection</span></a><span class="diff-html-added">&lt;</span><a href="../../java/util/Set.html" title="type parameter in Set"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../java/lang/Iterable.html#spliterator--"><span class="diff-html-added">spliterator</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../java/lang/Iterable.html" title="interface in java.lang"><span class="diff-html-added">Iterable</span></a><span class="diff-html-added">&lt;</span><a href="../../java/util/Set.html" title="type parameter in Set"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Implementation</span> <span class="diff-html-added">Requirements:</span> </span>   </dt><dd><span class="diff-html-added">The</span> <span class="diff-html-added">default</span> <span class="diff-html-added">implementation</span> <span class="diff-html-added">creates</span> <span class="diff-html-added">a</span> <em><a href="Spliterator.html#binding"><span class="diff-html-added">late-binding</span></a></em> <span class="diff-html-added">spliterator</span> <span class="diff-html-added">from</span> <span class="diff-html-added">the</span> <span class="diff-html-added">set's</span> <code><span class="diff-html-added">Iterator</span></code><span class="diff-html-added">.</span> <span class="diff-html-added">The</span> <span class="diff-html-added">spliterator</span> <span class="diff-html-added">inherits</span> <span class="diff-html-added">the</span> <em><span class="diff-html-added">fail-fast</span></em> <span class="diff-html-added">properties</span> <span class="diff-html-added">of</span> <span class="diff-html-added">the</span> <span class="diff-html-added">set's</span> <span class="diff-html-added">iterator.</span><p> <span class="diff-html-added">The</span> <span class="diff-html-added">created</span> <code><span class="diff-html-added">Spliterator</span></code> <span class="diff-html-added">additionally</span> <span class="diff-html-added">reports</span> <a href="../../java/util/Spliterator.html#SIZED"><code><span class="diff-html-added">Spliterator.SIZED</span></code></a><span class="diff-html-added">.</span>      </p>                    </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Implementation</span> <span class="diff-html-added">Note:</span> </span>   </dt><dd><span class="diff-html-added">The</span> <span class="diff-html-added">created</span> <code><span class="diff-html-added">Spliterator</span></code> <span class="diff-html-added">additionally</span> <span class="diff-html-added">reports</span> <a href="../../java/util/Spliterator.html#SUBSIZED"><code><span class="diff-html-added">Spliterator.SUBSIZED</span></code></a><span class="diff-html-added">.</span>     </dd> <dt> <span class="returnLabel"><span class="diff-html-added">Returns:</span></span>   </dt><dd><span class="diff-html-added">a</span> <code><span class="diff-html-added">Spliterator</span></code> <span class="diff-html-added">over</span> <span class="diff-html-added">the</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">in</span> <span class="diff-html-added">this</span> <span class="diff-html-added">set</span>       </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Since:</span></span>   </dt><dd><span class="diff-html-added">1.8</span></dd>      </dl></li></ul> <a end_ctx_id="method:spliterator--"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table></diff></diffreport>