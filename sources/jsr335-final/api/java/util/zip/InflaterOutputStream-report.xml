<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:InflaterOutputStream [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:InflaterOutputStream"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../../java/io/Closeable.html" title="interface in java.io">Closeable</a>, <a href="../../../java/io/Flushable.html" title="interface in java.io">Flushable</a>, <a href="../../../java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a>   </dd> </dl> <hr/> <br/><pre>public class <span class="typeNameLabel">InflaterOutputStream</span>
extends <a href="../../../java/io/FilterOutputStream.html" title="class in java.io">FilterOutputStream</a></pre><div class="block">Implements an output stream filter for uncompressing data stored in the "deflate" compression format.             </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.6</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/util/zip/InflaterInputStream.html" title="class in java.util.zip"><code>InflaterInputStream</code></a>, <a href="../../../java/util/zip/DeflaterInputStream.html" title="class in java.util.zip"><code>DeflaterInputStream</code></a>, <a href="../../../java/util/zip/DeflaterOutputStream.html" title="class in java.util.zip"><code>DeflaterOutputStream</code></a>   </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:InflaterOutputStream"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:inf [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:inf"/><a name="inf"/><ul class="blockList"><li class="blockList"><h4>inf</h4><pre>protected final <a href="../../../java/util/zip/Inflater.html" title="class in java.util.zip">Inflater</a> inf</pre><div class="block">Decompressor for this stream.   </div></li></ul> <a end_ctx_id="field:inf"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:buf [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:buf"/><a name="buf"/><ul class="blockListLast"><li class="blockList"><h4>buf</h4><pre>protected final byte[] buf</pre><div class="block">Output buffer for writing uncompressed data.     </div></li></ul> <a end_ctx_id="field:buf"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:InflaterOutputStream-java.io.OutputStream- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:InflaterOutputStream-java.io.OutputStream-"/><a name="InflaterOutputStream-java.io.OutputStream-"/><ul class="blockList"><li class="blockList"><h4>InflaterOutputStream</h4><pre>public InflaterOutputStream(<a href="../../../java/io/OutputStream.html" title="class in java.io">OutputStream</a> out)</pre><div class="block">Creates a new output stream with a default decompressor and buffer size.           </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>out</code> - output stream to write the uncompressed data to          </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if <code>out</code> is null      </dd>  </dl></li></ul> <a end_ctx_id="constructor:InflaterOutputStream-java.io.OutputStream-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:InflaterOutputStream-java.io.OutputStream-java.util.zip.Inflater- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:InflaterOutputStream-java.io.OutputStream-java.util.zip.Inflater-"/><a name="InflaterOutputStream-java.io.OutputStream-java.util.zip.Inflater-"/><ul class="blockList"><li class="blockList"><h4>InflaterOutputStream</h4><pre>public InflaterOutputStream(<a href="../../../java/io/OutputStream.html" title="class in java.io">OutputStream</a> out,
                            <a href="../../../java/util/zip/Inflater.html" title="class in java.util.zip">Inflater</a> infl)</pre><div class="block">Creates a new output stream with the specified decompressor and a default buffer size.             </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>out</code> - output stream to write the uncompressed data to          </dd><dd> <code>infl</code> - decompressor ("inflater") for this stream       </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if <code>out</code> or <code>infl</code> is null        </dd>  </dl></li></ul> <a end_ctx_id="constructor:InflaterOutputStream-java.io.OutputStream-java.util.zip.Inflater-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:InflaterOutputStream-java.io.OutputStream-java.util.zip.Inflater-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:InflaterOutputStream-java.io.OutputStream-java.util.zip.Inflater-int-"/><a name="InflaterOutputStream-java.io.OutputStream-java.util.zip.Inflater-int-"/><ul class="blockListLast"><li class="blockList"><h4>InflaterOutputStream</h4><pre>public InflaterOutputStream(<a href="../../../java/io/OutputStream.html" title="class in java.io">OutputStream</a> out,
                            <a href="../../../java/util/zip/Inflater.html" title="class in java.util.zip">Inflater</a> infl,
                            int bufLen)</pre><div class="block">Creates a new output stream with the specified decompressor and buffer size.           </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>out</code> - output stream to write the uncompressed data to          </dd><dd> <code>infl</code> - decompressor ("inflater") for this stream       </dd><dd> <code>bufLen</code> - decompression buffer size     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if <code>bufLen &lt;= 0  </code>    </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if <code>out</code> or <code>infl</code> is null        </dd>  </dl></li></ul> <a end_ctx_id="constructor:InflaterOutputStream-java.io.OutputStream-java.util.zip.Inflater-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:close-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:close--"/><a name="close--"/><ul class="blockList"><li class="blockList"><h4>close</h4><pre>public void close()
           throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Writes any remaining uncompressed data to the output stream and closes the underlying output stream.              </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/io/Closeable.html#close--">close</a></code> in interface <code><a href="../../../java/io/Closeable.html" title="interface in java.io">Closeable</a></code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/lang/AutoCloseable.html#close--">close</a></code> in interface <code><a href="../../../java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a></code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/io/FilterOutputStream.html#close--">close</a></code> in class <code><a href="../../../java/io/FilterOutputStream.html" title="class in java.io">FilterOutputStream</a></code>  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs       </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/io/FilterOutputStream.html#flush--"><code>FilterOutputStream.flush()</code></a>, <a href="../../../java/io/FilterOutputStream.html#out"><code>FilterOutputStream.out</code></a>  </dd>     </dl></li></ul> <a end_ctx_id="method:close--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:flush-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:flush--"/><a name="flush--"/><ul class="blockList"><li class="blockList"><h4>flush</h4><pre>public void flush()
           throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Flushes this output stream, forcing any pending buffered output bytes to be written.            </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/io/Flushable.html#flush--">flush</a></code> in interface <code><a href="../../../java/io/Flushable.html" title="interface in java.io">Flushable</a></code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/io/FilterOutputStream.html#flush--">flush</a></code> in class <code><a href="../../../java/io/FilterOutputStream.html" title="class in java.io">FilterOutputStream</a></code>  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs or this stream is already closed             </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/io/FilterOutputStream.html#out"><code>FilterOutputStream.out</code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:flush--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:finish-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:finish--"/><a name="finish--"/><ul class="blockList"><li class="blockList"><h4>finish</h4><pre>public void finish()
            throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Finishes writing uncompressed data to the output stream without closing the underlying stream. Use this method when applying multiple filters in succession to the same output stream.                          </div><dl> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs or this stream is already closed             </dd> </dl></li></ul> <a end_ctx_id="method:finish--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:write-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:write-int-"/><a name="write-int-"/><ul class="blockList"><li class="blockList"><h4>write</h4><pre>public void write(int b)
           throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Writes a byte to the uncompressed output stream.       </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/io/FilterOutputStream.html#write-int-">write</a></code> in class <code><a href="../../../java/io/FilterOutputStream.html" title="class in java.io">FilterOutputStream</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>b</code> - a single byte of compressed data to decompress and write to the output stream                </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs or this stream is already closed             </dd><dd> <code><a href="../../../java/util/zip/ZipException.html" title="class in java.util.zip">ZipException</a></code> - if a compression (ZIP) format error occurs         </dd>   </dl></li></ul> <a end_ctx_id="method:write-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:write-byte:A-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:write-byte:A-int-int-"/><a name="write-byte:A-int-int-"/><ul class="blockListLast"><li class="blockList"><h4>write</h4><pre>public void write(byte[] b,
                  int off,
                  int len)
           throws <a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Writes an array of bytes to the uncompressed output stream.         </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/io/FilterOutputStream.html#write-byte:A-int-int-">write</a></code> in class <code><a href="../../../java/io/FilterOutputStream.html" title="class in java.io">FilterOutputStream</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>b</code> - buffer containing compressed data to decompress and write to the output stream              </dd><dd> <code>off</code> - starting offset of the compressed data within <code>b</code>          </dd><dd> <code>len</code> - number of bytes to decompress from <code>b</code>         </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if <code>off &lt; 0  </code>, or if <code>len &lt; 0  </code>, or if <code>len &gt; b.length - off    </code>          </dd><dd> <code><a href="../../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs or this stream is already closed             </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if <code>b</code> is null      </dd><dd> <code><a href="../../../java/util/zip/ZipException.html" title="class in java.util.zip">ZipException</a></code> - if a compression (ZIP) format error occurs         </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/io/FilterOutputStream.html#write-int-"><code>FilterOutputStream.write(int)</code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:write-byte:A-int-int-"/>  </td></tr></table></td></tr></table></diff></diffreport>