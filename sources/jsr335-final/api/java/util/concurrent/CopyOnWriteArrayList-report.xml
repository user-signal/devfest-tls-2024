<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:CopyOnWriteArrayList [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:CopyOnWriteArrayList"/><ul class="blockList"><li class="blockList"><dl> <dt> <span class="paramLabel">Type Parameters: </span>   </dt><dd> <code>E</code> - the type of elements held in this collection          </dd> </dl><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../../java/io/Serializable.html" title="interface in java.io">Serializable</a>, <a href="../../../java/lang/Cloneable.html" title="interface in java.lang">Cloneable</a>, <a href="../../../java/lang/Iterable.html" title="interface in java.lang">Iterable</a>&lt;E&gt;, <a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;E&gt;, <a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;E&gt;, <a href="../../../java/util/RandomAccess.html" title="interface in java.util">RandomAccess</a>      </dd> </dl> <hr/> <br/><pre>public class <span class="typeNameLabel">CopyOnWriteArrayList&lt;E&gt;</span>
extends <a href="../../../java/lang/Object.html" title="class in java.lang">Object</a>
implements <a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;E&gt;, <a href="../../../java/util/RandomAccess.html" title="interface in java.util">RandomAccess</a>, <a href="../../../java/lang/Cloneable.html" title="interface in java.lang">Cloneable</a>, <a href="../../../java/io/Serializable.html" title="interface in java.io">Serializable</a></pre><div class="block">A thread-safe variant of <a href="../../../java/util/ArrayList.html" title="class in java.util"><code>ArrayList</code></a> in which all mutative operations (<code>add</code>, <code>set</code>, and so on) are implemented by making a fresh copy of the underlying array.<p>This is ordinarily too costly, but may be <em>more</em> efficient than alternatives when traversal operations vastly outnumber mutations, and is useful when you cannot or don't want to synchronize traversals, yet need to preclude interference among concurrent threads. The "snapshot" style iterator method uses a reference to the state of the array at the point that the iterator was created. This array never changes during the lifetime of the iterator, so interference is impossible and the iterator is guaranteed not to throw <code>ConcurrentModificationException</code>. The iterator will not reflect additions, removals, or changes to the list since the iterator was created. Element-changing operations on iterators themselves (<code>remove</code>, <code>set</code>, and <code>add</code>) are not supported. These methods throw <code>UnsupportedOperationException</code>.                                                                                                                   </p><p>All elements are permitted, including <code>null</code>.     </p><p>Memory consistency effects: As with other concurrent collections, actions in a thread prior to placing an object into a <code>CopyOnWriteArrayList</code><a href="package-summary.html#MemoryVisibility"><i>happen-before</i></a> actions subsequent to the access or removal of that element from the <code>CopyOnWriteArrayList</code> in another thread.                                   </p><p>This class is a member of the <a href="http://download.oracle.com/javase/7/docs/technotes/guides/collections/index.html"> Java Collections Framework   </a>.       </p>                         </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../serialized-form.html#java.util.concurrent.CopyOnWriteArrayList">Serialized Form </a> </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:CopyOnWriteArrayList"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:CopyOnWriteArrayList-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:CopyOnWriteArrayList--"/><a name="CopyOnWriteArrayList--"/><ul class="blockList"><li class="blockList"><h4>CopyOnWriteArrayList</h4><pre>public CopyOnWriteArrayList()</pre><div class="block">Creates an empty list.   </div></li></ul> <a end_ctx_id="constructor:CopyOnWriteArrayList--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:CopyOnWriteArrayList-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:CopyOnWriteArrayList-java.util.Collection-"/><a name="CopyOnWriteArrayList-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>CopyOnWriteArrayList</h4><pre>public CopyOnWriteArrayList(<a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;? extends <a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt; c)</pre><div class="block">Creates a list containing the elements of the specified collection, in the order they are returned by the collection's iterator.                   </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - the collection of initially held elements        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified collection is null        </dd>  </dl></li></ul> <a name="CopyOnWriteArrayList-java.lang.Object:A-"/><a end_ctx_id="constructor:CopyOnWriteArrayList-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:CopyOnWriteArrayList-E:A- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:CopyOnWriteArrayList-E:A-"/><a name="CopyOnWriteArrayList-E:A-"/><ul class="blockListLast"><li class="blockList"><h4>CopyOnWriteArrayList</h4><pre>public CopyOnWriteArrayList(<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>[] toCopyIn)</pre><div class="block">Creates a list holding a copy of the given array.         </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>toCopyIn</code> - the array (a copy of this array is used as the internal array)               </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified array is null        </dd>  </dl></li></ul> <a end_ctx_id="constructor:CopyOnWriteArrayList-E:A-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:size-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:size--"/><a name="size--"/><ul class="blockList"><li class="blockList"><h4>size</h4><pre>public int size()</pre><div class="block">Returns the number of elements in this list.       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#size--">size</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#size--">size</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the number of elements in this list      </dd>   </dl></li></ul> <a end_ctx_id="method:size--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:isEmpty-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:isEmpty--"/><a name="isEmpty--"/><ul class="blockList"><li class="blockList"><h4>isEmpty</h4><pre>public boolean isEmpty()</pre><div class="block">Returns <code>true</code> if this list contains no elements.       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#isEmpty--">isEmpty</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#isEmpty--">isEmpty</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this list contains no elements       </dd>   </dl></li></ul> <a end_ctx_id="method:isEmpty--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:contains-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:contains-java.lang.Object-"/><a name="contains-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>contains</h4><pre>public boolean contains(<a href="../../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Returns <code>true</code> if this list contains the specified element. More formally, returns <code>true</code> if and only if this list contains at least one element <code>e</code> such that <tt>(o==null ? e==null : o.equals(e))</tt>.                           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#contains-java.lang.Object-">contains</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#contains-java.lang.Object-">contains</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element whose presence in this list is to be tested            </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this list contains the specified element        </dd>    </dl></li></ul> <a end_ctx_id="method:contains-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:indexOf-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:indexOf-java.lang.Object-"/><a name="indexOf-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>indexOf</h4><pre>public int indexOf(<a href="../../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Returns the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element. More formally, returns the lowest index <tt>i</tt> such that <tt>(o==null ? get(i)==null : o.equals(get(i)))</tt>, or -1 if there is no such index.                                         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#indexOf-java.lang.Object-">indexOf</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element to search for      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element                      </dd>   </dl></li></ul> <a name="indexOf-java.lang.Object-int-"/><a end_ctx_id="method:indexOf-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:indexOf-E-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:indexOf-E-int-"/><a name="indexOf-E-int-"/><ul class="blockList"><li class="blockList"><h4>indexOf</h4><pre>public int indexOf(<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a> e,
                   int index)</pre><div class="block">Returns the index of the first occurrence of the specified element in this list, searching forwards from <code>index</code>, or returns -1 if the element is not found. More formally, returns the lowest index <code>i</code> such that <tt>(i &gt;= index &amp;&amp; (e==null ? get(i)==null : e.equals(get(i))))</tt>, or -1 if there is no such index.                                            </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - element to search for      </dd><dd> <code>index</code> - index to start searching from       </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the index of the first occurrence of the element in this list at position <code>index</code> or later in the list; <code>-1</code> if the element is not found.                          </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if the specified index is negative        </dd>   </dl></li></ul> <a end_ctx_id="method:indexOf-E-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:lastIndexOf-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:lastIndexOf-java.lang.Object-"/><a name="lastIndexOf-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>lastIndexOf</h4><pre>public int lastIndexOf(<a href="../../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Returns the index of the last occurrence of the specified element in this list, or -1 if this list does not contain the element. More formally, returns the highest index <tt>i</tt> such that <tt>(o==null ? get(i)==null : o.equals(get(i)))</tt>, or -1 if there is no such index.                                         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#lastIndexOf-java.lang.Object-">lastIndexOf</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element to search for      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the index of the last occurrence of the specified element in this list, or -1 if this list does not contain the element                      </dd>   </dl></li></ul> <a name="lastIndexOf-java.lang.Object-int-"/><a end_ctx_id="method:lastIndexOf-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:lastIndexOf-E-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:lastIndexOf-E-int-"/><a name="lastIndexOf-E-int-"/><ul class="blockList"><li class="blockList"><h4>lastIndexOf</h4><pre>public int lastIndexOf(<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a> e,
                       int index)</pre><div class="block">Returns the index of the last occurrence of the specified element in this list, searching backwards from <code>index</code>, or returns -1 if the element is not found. More formally, returns the highest index <code>i</code> such that <tt>(i &lt;= index &amp;&amp; (e==null ? get(i)==null : e.equals(get(i))))</tt>, or -1 if there is no such index.                                            </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - element to search for      </dd><dd> <code>index</code> - index to start searching backwards from        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the index of the last occurrence of the element at position less than or equal to <code>index</code> in this list; -1 if the element is not found.                          </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if the specified index is greater than or equal to the current size of this list                  </dd>   </dl></li></ul> <a end_ctx_id="method:lastIndexOf-E-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:clone-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:clone--"/><a name="clone--"/><ul class="blockList"><li class="blockList"><h4>clone</h4><pre>public <a href="../../../java/lang/Object.html" title="class in java.lang">Object</a> clone()</pre><div class="block">Returns a shallow copy of this list. (The elements themselves are not copied.)            </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/lang/Object.html#clone--">clone</a></code> in class <code><a href="../../../java/lang/Object.html" title="class in java.lang">Object</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a clone of this list    </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/lang/Cloneable.html" title="interface in java.lang"><code>Cloneable</code></a> </dd>   </dl></li></ul> <a end_ctx_id="method:clone--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toArray-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toArray--"/><a name="toArray--"/><ul class="blockList"><li class="blockList"><h4>toArray</h4><pre>public <a href="../../../java/lang/Object.html" title="class in java.lang">Object</a>[] toArray()</pre><div class="block">Returns an array containing all of the elements in this list in proper sequence (from first to last element).<p>The returned array will be "safe" in that no references to it are maintained by this list. (In other words, this method must allocate a new array). The caller is thus free to modify the returned array.                                    </p><p>This method acts as bridge between array-based and collection-based APIs.         </p>                  </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#toArray--">toArray</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#toArray--">toArray</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an array containing all the elements in this list        </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/util/Arrays.html#asList-T...-"><code>Arrays.asList(Object[])</code></a> </dd>    </dl></li></ul> <a name="toArray-java.lang.Object:A-"/><a end_ctx_id="method:toArray--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toArray-T:A- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toArray-T:A-"/><a name="toArray-T:A-"/><ul class="blockList"><li class="blockList"><h4>toArray</h4><pre>public &lt;T&gt; T[] toArray(T[] a)</pre><div class="block">Returns an array containing all of the elements in this list in proper sequence (from first to last element); the runtime type of the returned array is that of the specified array. If the list fits in the specified array, it is returned therein. Otherwise, a new array is allocated with the runtime type of the specified array and the size of this list.<p>If this list fits in the specified array with room to spare (i.e., the array has more elements than this list), the element in the array immediately following the end of the list is set to <code>null</code>. (This is useful in determining the length of this list <i>only</i> if the caller knows that this list does not contain any null elements.)                                                            </p><p>Like the <a href="../../../java/util/concurrent/CopyOnWriteArrayList.html#toArray--"><code>toArray()</code></a> method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.                                      </p><p>Suppose <code>x</code> is a list known to contain only strings. The following code can be used to dump the list into a newly allocated array of <code>String</code>:<pre> 
<code> String[] y = x.toArray(new String[0]);</code></pre> Note that <code>toArray(new Object[0]) </code> is identical in function to <code>toArray()</code>.                                   </p>                                                               </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#toArray-T:A-">toArray</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#toArray-T:A-">toArray</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Type Parameters: </span>   </dt><dd> <code>T</code> - the runtime type of the array to contain the collection            </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>a</code> - the array into which the elements of the list are to be stored, if it is big enough; otherwise, a new array of the same runtime type is allocated for this purpose.                                  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an array containing all the elements in this list        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/ArrayStoreException.html" title="class in java.lang">ArrayStoreException</a></code> - if the runtime type of the specified array is not a supertype of the runtime type of every element in this list                        </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified array is null        </dd>      </dl></li></ul> <a end_ctx_id="method:toArray-T:A-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:get-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:get-int-"/><a name="get-int-"/><ul class="blockList"><li class="blockList"><h4>get</h4><pre>public <a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a> get(int index)</pre><div class="block">Returns the element at the specified position in this list.         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#get-int-">get</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - index of the element to return        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the element at the specified position in this list        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if the index is out of range (<tt>index &lt; 0 || index &gt;= size()      </tt>)          </dd>    </dl></li></ul> <a name="set-int-java.lang.Object-"/><a end_ctx_id="method:get-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:set-int-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:set-int-E-"/><a name="set-int-E-"/><ul class="blockList"><li class="blockList"><h4>set</h4><pre>public <a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a> set(int index,
             <a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a> element)</pre><div class="block">Replaces the element at the specified position in this list with the specified element.             </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#set-int-E-">set</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - index of the element to replace        </dd><dd> <code>element</code> - element to be stored at the specified position          </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the element previously at the specified position      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if the index is out of range (<tt>index &lt; 0 || index &gt;= size()      </tt>)          </dd>    </dl></li></ul> <a name="add-java.lang.Object-"/><a end_ctx_id="method:set-int-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:add-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:add-E-"/><a name="add-E-"/><ul class="blockList"><li class="blockList"><h4>add</h4><pre>public boolean add(<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a> e)</pre><div class="block">Appends the specified element to the end of this list.         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#add-E-">add</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#add-E-">add</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - element to be appended to this list         </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> (as specified by <a href="../../../java/util/Collection.html#add-E-"><code>Collection.add(E)</code></a>)     </dd>    </dl></li></ul> <a name="add-int-java.lang.Object-"/><a end_ctx_id="method:add-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:add-int-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:add-int-E-"/><a name="add-int-E-"/><ul class="blockList"><li class="blockList"><h4>add</h4><pre>public void add(int index,
                <a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a> element)</pre><div class="block">Inserts the specified element at the specified position in this list. Shifts the element currently at that position (if any) and any subsequent elements to the right (adds one to their indices).                               </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#add-int-E-">add</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - index at which the specified element is to be inserted            </dd><dd> <code>element</code> - element to be inserted      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if the index is out of range (<tt>index &lt; 0 || index &gt; size()      </tt>)          </dd>   </dl></li></ul> <a end_ctx_id="method:add-int-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:remove-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:remove-int-"/><a name="remove-int-"/><ul class="blockList"><li class="blockList"><h4>remove</h4><pre>public <a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a> remove(int index)</pre><div class="block">Removes the element at the specified position in this list. Shifts any subsequent elements to the left (subtracts one from their indices). Returns the element that was removed from the list.                              </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#remove-int-">remove</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - the index of the element to be removed          </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the element previously at the specified position      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if the index is out of range (<tt>index &lt; 0 || index &gt;= size()      </tt>)          </dd>    </dl></li></ul> <a end_ctx_id="method:remove-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:remove-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:remove-java.lang.Object-"/><a name="remove-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>remove</h4><pre>public boolean remove(<a href="../../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Removes the first occurrence of the specified element from this list, if it is present. If this list does not contain the element, it is unchanged. More formally, removes the element with the lowest index <code>i</code> such that <tt>(o==null ? get(i)==null : o.equals(get(i)))</tt> (if such an element exists). Returns <code>true</code> if this list contained the specified element (or equivalently, if this list changed as a result of the call).                                                                </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#remove-java.lang.Object-">remove</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#remove-java.lang.Object-">remove</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element to be removed from this list, if present           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this list contained the specified element        </dd>    </dl></li></ul> <a name="addIfAbsent-java.lang.Object-"/><a end_ctx_id="method:remove-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:addIfAbsent-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:addIfAbsent-E-"/><a name="addIfAbsent-E-"/><ul class="blockList"><li class="blockList"><h4>addIfAbsent</h4><pre>public boolean addIfAbsent(<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a> e)</pre><div class="block">Appends the element, if not present.     </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - element to be added to this list, if absent           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if the element was added      </dd>  </dl></li></ul> <a end_ctx_id="method:addIfAbsent-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:containsAll-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:containsAll-java.util.Collection-"/><a name="containsAll-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>containsAll</h4><pre>public boolean containsAll(<a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;?&gt; c)</pre><div class="block">Returns <code>true</code> if this list contains all of the elements of the specified collection.             </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#containsAll-java.util.Collection-">containsAll</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#containsAll-java.util.Collection-">containsAll</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - collection to be checked for containment in this list           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this list contains all of the elements of the specified collection             </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified collection is null        </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/util/concurrent/CopyOnWriteArrayList.html#contains-java.lang.Object-"><code>contains(Object)</code></a> </dd>      </dl></li></ul> <a end_ctx_id="method:containsAll-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:removeAll-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:removeAll-java.util.Collection-"/><a name="removeAll-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>removeAll</h4><pre>public boolean removeAll(<a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;?&gt; c)</pre><div class="block">Removes from this list all of its elements that are contained in the specified collection. This is a particularly expensive operation in this class because of the need for an internal temporary array.                                </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#removeAll-java.util.Collection-">removeAll</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#removeAll-java.util.Collection-">removeAll</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - collection containing elements to be removed from this list           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this list changed as a result of the call           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of an element of this list is incompatible with the specified collection (<a href="../Collection.html#optional-restrictions">optional</a>)                  </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if this list contains a null element and the specified collection does not permit null elements (<a href="../Collection.html#optional-restrictions">optional</a>), or if the specified collection is null                          </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/util/concurrent/CopyOnWriteArrayList.html#remove-java.lang.Object-"><code>remove(Object)</code></a> </dd>      </dl></li></ul> <a end_ctx_id="method:removeAll-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:retainAll-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:retainAll-java.util.Collection-"/><a name="retainAll-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>retainAll</h4><pre>public boolean retainAll(<a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;?&gt; c)</pre><div class="block">Retains only the elements in this list that are contained in the specified collection. In other words, removes from this list all of its elements that are not contained in the specified collection.                                </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#retainAll-java.util.Collection-">retainAll</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#retainAll-java.util.Collection-">retainAll</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - collection containing elements to be retained in this list           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this list changed as a result of the call           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of an element of this list is incompatible with the specified collection (<a href="../Collection.html#optional-restrictions">optional</a>)                  </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if this list contains a null element and the specified collection does not permit null elements (<a href="../Collection.html#optional-restrictions">optional</a>), or if the specified collection is null                          </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/util/concurrent/CopyOnWriteArrayList.html#remove-java.lang.Object-"><code>remove(Object)</code></a> </dd>      </dl></li></ul> <a end_ctx_id="method:retainAll-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:addAllAbsent-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:addAllAbsent-java.util.Collection-"/><a name="addAllAbsent-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>addAllAbsent</h4><pre>public int addAllAbsent(<a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;? extends <a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt; c)</pre><div class="block">Appends all of the elements in the specified collection that are not already contained in this list, to the end of this list, in the order that they are returned by the specified collection's iterator.                                  </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - collection containing elements to be added to this list           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the number of elements added    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified collection is null        </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/util/concurrent/CopyOnWriteArrayList.html#addIfAbsent-E-"><code>addIfAbsent(Object)</code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:addAllAbsent-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:clear-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:clear--"/><a name="clear--"/><ul class="blockList"><li class="blockList"><h4>clear</h4><pre>public void clear()</pre><div class="block">Removes all of the elements from this list. The list will be empty after this call returns.                </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#clear--">clear</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#clear--">clear</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd>  </dl></li></ul> <a end_ctx_id="method:clear--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:addAll-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:addAll-java.util.Collection-"/><a name="addAll-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>addAll</h4><pre>public boolean addAll(<a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;? extends <a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt; c)</pre><div class="block">Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.                          </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#addAll-java.util.Collection-">addAll</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#addAll-java.util.Collection-">addAll</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - collection containing elements to be added to this list           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this list changed as a result of the call           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified collection is null        </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/util/concurrent/CopyOnWriteArrayList.html#add-E-"><code>add(Object)</code></a> </dd>      </dl></li></ul> <a end_ctx_id="method:addAll-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:addAll-int-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:addAll-int-java.util.Collection-"/><a name="addAll-int-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>addAll</h4><pre>public boolean addAll(int index,
                      <a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;? extends <a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt; c)</pre><div class="block">Inserts all of the elements in the specified collection into this list, starting at the specified position. Shifts the element currently at that position (if any) and any subsequent elements to the right (increases their indices). The new elements will appear in this list in the order that they are returned by the specified collection's iterator.                                                       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#addAll-int-java.util.Collection-">addAll</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - index at which to insert the first element from the specified collection              </dd><dd> <code>c</code> - collection containing elements to be added to this list           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this list changed as a result of the call           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if the index is out of range (<tt>index &lt; 0 || index &gt; size()      </tt>)          </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified collection is null        </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/util/concurrent/CopyOnWriteArrayList.html#add-int-E-"><code>add(int,Object)</code></a> </dd>     </dl></li></ul> <a end_ctx_id="method:addAll-int-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:forEach-java.util.function.Consumer- [CHANGED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#EEEEEE" colspan="2"> <a start_ctx_id="method:forEach-java.util.function.Consumer-"/><a name="forEach-java.util.function.Consumer-"/><ul class="blockList"><li class="blockList"><h4>forEach</h4><pre>public void forEach(<a href="../../../java/util/function/Consumer.html" title="interface in java.util.function">Consumer</a>&lt;? super <a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt; action)</pre><div class="block"> <span class="descfrmTypeLabel"><span class="diff-html-added">Description</span> <span class="diff-html-added">copied</span> <span class="diff-html-added">from</span> <span class="diff-html-added">interface:</span> <code><a href="../../../java/lang/Iterable.html#forEach-java.util.function.Consumer-"><span class="diff-html-added">Iterable</span></a></code>   </span> </div><div class="block"><span class="diff-html-added">Performs</span> <span class="diff-html-added">the</span> <span class="diff-html-added">given</span> <span class="diff-html-added">action</span> <span class="diff-html-added">for</span> <span class="diff-html-added">each</span> <span class="diff-html-added">element</span> <span class="diff-html-added">of</span> <span class="diff-html-added">the</span> <code><span class="diff-html-added">Iterable</span></code> <span class="diff-html-added">until</span> <span class="diff-html-added">all</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">have</span> <span class="diff-html-added">been</span> <span class="diff-html-added">processed</span> <span class="diff-html-added">or</span> <span class="diff-html-added">the</span> <span class="diff-html-added">action</span> <span class="diff-html-added">throws</span> <span class="diff-html-added">an</span> <span class="diff-html-added">exception.</span> <span class="diff-html-added">Unless</span> <span class="diff-html-added">otherwise</span> <span class="diff-html-added">specified</span> <span class="diff-html-added">by</span> <span class="diff-html-added">the</span> <span class="diff-html-added">implementing</span> <span class="diff-html-added">class,</span> <span class="diff-html-added">actions</span> <span class="diff-html-added">are</span> <span class="diff-html-added">performed</span> <span class="diff-html-added">in</span> <span class="diff-html-added">the</span> <span class="diff-html-added">order</span> <span class="diff-html-added">of</span> <span class="diff-html-added">iteration</span> <span class="diff-html-added">(if</span> <span class="diff-html-added">an</span> <span class="diff-html-added">iteration</span> <span class="diff-html-added">order</span> <span class="diff-html-added">is</span> <span class="diff-html-added">specified).</span> <span class="diff-html-added">Exceptions</span> <span class="diff-html-added">thrown</span> <span class="diff-html-added">by</span> <span class="diff-html-added">the</span> <span class="diff-html-added">action</span> <span class="diff-html-added">are</span> <span class="diff-html-added">relayed</span> <span class="diff-html-added">to</span> <span class="diff-html-added">the</span> <span class="diff-html-added">caller.</span>                                                    </div><dl> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../../java/lang/Iterable.html#forEach-java.util.function.Consumer-"><span class="diff-html-added">forEach</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../../java/lang/Iterable.html" title="interface in java.lang"><span class="diff-html-added">Iterable</span></a><span class="diff-html-added">&lt;</span><a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="paramLabel"><span class="diff-html-added">Parameters:</span></span>   </dt><dd> <code><span class="diff-html-added">action</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">The</span> <span class="diff-html-added">action</span> <span class="diff-html-added">to</span> <span class="diff-html-added">be</span> <span class="diff-html-added">performed</span> <span class="diff-html-added">for</span> <span class="diff-html-added">each</span> <span class="diff-html-added">element</span>          </dd>  </dl></li></ul> <a end_ctx_id="method:forEach-java.util.function.Consumer-"/>  </td></tr><tr valign="top"><td bgcolor="#CCCCCC" colspan="1"> <a start_ctx_id="method:forEach-java.util.function.Consumer-"/><a name="forEach-java.util.function.Consumer-"/><ul class="blockList"><li class="blockList"><h4>forEach</h4><pre>public void forEach(<a href="../../../java/util/function/Consumer.html" title="interface in java.util.function">Consumer</a>&lt;? super <a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt; action)</pre></li></ul> <a end_ctx_id="method:forEach-java.util.function.Consumer-"/>  </td><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:forEach-java.util.function.Consumer-"/><a name="forEach-java.util.function.Consumer-"/><ul class="blockList"><li class="blockList"><h4>forEach</h4><pre>public void forEach(<a href="../../../java/util/function/Consumer.html" title="interface in java.util.function">Consumer</a>&lt;? super <a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt; action)</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../../java/lang/Iterable.html#forEach-java.util.function.Consumer-">Iterable</a></code>   </span> </div><div class="block">Performs the given action for each element of the <code>Iterable</code> until all elements have been processed or the action throws an exception. Unless otherwise specified by the implementing class, actions are performed in the order of iteration (if an iteration order is specified). Exceptions thrown by the action are relayed to the caller.                                                    </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/lang/Iterable.html#forEach-java.util.function.Consumer-">forEach</a></code> in interface <code><a href="../../../java/lang/Iterable.html" title="interface in java.lang">Iterable</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>action</code> - The action to be performed for each element          </dd>  </dl></li></ul> <a end_ctx_id="method:forEach-java.util.function.Consumer-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:removeIf-java.util.function.Predicate- [CHANGED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#EEEEEE" colspan="2"> <a start_ctx_id="method:removeIf-java.util.function.Predicate-"/><a name="removeIf-java.util.function.Predicate-"/><ul class="blockList"><li class="blockList"><h4>removeIf</h4><pre>public boolean removeIf(<a href="../../../java/util/function/Predicate.html" title="interface in java.util.function">Predicate</a>&lt;? super <a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt; filter)</pre><div class="block"> <span class="descfrmTypeLabel"><span class="diff-html-added">Description</span> <span class="diff-html-added">copied</span> <span class="diff-html-added">from</span> <span class="diff-html-added">interface:</span> <code><a href="../../../java/util/Collection.html#removeIf-java.util.function.Predicate-"><span class="diff-html-added">Collection</span></a></code>   </span> </div><div class="block"><span class="diff-html-added">Removes</span> <span class="diff-html-added">all</span> <span class="diff-html-added">of</span> <span class="diff-html-added">the</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">of</span> <span class="diff-html-added">this</span> <span class="diff-html-added">collection</span> <span class="diff-html-added">that</span> <span class="diff-html-added">satisfy</span> <span class="diff-html-added">the</span> <span class="diff-html-added">given</span> <span class="diff-html-added">predicate.</span> <span class="diff-html-added">Errors</span> <span class="diff-html-added">or</span> <span class="diff-html-added">runtime</span> <span class="diff-html-added">exceptions</span> <span class="diff-html-added">thrown</span> <span class="diff-html-added">during</span> <span class="diff-html-added">iteration</span> <span class="diff-html-added">or</span> <span class="diff-html-added">by</span> <span class="diff-html-added">the</span> <span class="diff-html-added">predicate</span> <span class="diff-html-added">are</span> <span class="diff-html-added">relayed</span> <span class="diff-html-added">to</span> <span class="diff-html-added">the</span> <span class="diff-html-added">caller.</span>                            </div><dl> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#removeIf-java.util.function.Predicate-"><span class="diff-html-added">removeIf</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../../java/util/Collection.html" title="interface in java.util"><span class="diff-html-added">Collection</span></a><span class="diff-html-added">&lt;</span><a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="paramLabel"><span class="diff-html-added">Parameters:</span></span>   </dt><dd> <code><span class="diff-html-added">filter</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">a</span> <span class="diff-html-added">predicate</span> <span class="diff-html-added">which</span> <span class="diff-html-added">returns</span> <code><span class="diff-html-added">true</span></code> <span class="diff-html-added">for</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">to</span> <span class="diff-html-added">be</span> <span class="diff-html-added">removed</span>            </dd> <dt> <span class="returnLabel"><span class="diff-html-added">Returns:</span></span>   </dt><dd> <code><span class="diff-html-added">true</span></code> <span class="diff-html-added">if</span> <span class="diff-html-added">any</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">were</span> <span class="diff-html-added">removed</span>      </dd>   </dl></li></ul> <a end_ctx_id="method:removeIf-java.util.function.Predicate-"/>  </td></tr><tr valign="top"><td bgcolor="#CCCCCC" colspan="1"> <a start_ctx_id="method:removeIf-java.util.function.Predicate-"/><a name="removeIf-java.util.function.Predicate-"/><ul class="blockList"><li class="blockList"><h4>removeIf</h4><pre>public boolean removeIf(<a href="../../../java/util/function/Predicate.html" title="interface in java.util.function">Predicate</a>&lt;? super <a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt; filter)</pre></li></ul> <a end_ctx_id="method:removeIf-java.util.function.Predicate-"/>  </td><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:removeIf-java.util.function.Predicate-"/><a name="removeIf-java.util.function.Predicate-"/><ul class="blockList"><li class="blockList"><h4>removeIf</h4><pre>public boolean removeIf(<a href="../../../java/util/function/Predicate.html" title="interface in java.util.function">Predicate</a>&lt;? super <a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt; filter)</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../../java/util/Collection.html#removeIf-java.util.function.Predicate-">Collection</a></code>   </span> </div><div class="block">Removes all of the elements of this collection that satisfy the given predicate. Errors or runtime exceptions thrown during iteration or by the predicate are relayed to the caller.                            </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#removeIf-java.util.function.Predicate-">removeIf</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>filter</code> - a predicate which returns <code>true</code> for elements to be removed            </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if any elements were removed      </dd>   </dl></li></ul> <a end_ctx_id="method:removeIf-java.util.function.Predicate-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:replaceAll-java.util.function.UnaryOperator- [CHANGED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#EEEEEE" colspan="2"> <a start_ctx_id="method:replaceAll-java.util.function.UnaryOperator-"/><a name="replaceAll-java.util.function.UnaryOperator-"/><ul class="blockList"><li class="blockList"><h4>replaceAll</h4><pre>public void replaceAll(<a href="../../../java/util/function/UnaryOperator.html" title="interface in java.util.function">UnaryOperator</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt; operator)</pre><div class="block"> <span class="descfrmTypeLabel"><span class="diff-html-added">Description</span> <span class="diff-html-added">copied</span> <span class="diff-html-added">from</span> <span class="diff-html-added">interface:</span> <code><a href="../../../java/util/List.html#replaceAll-java.util.function.UnaryOperator-"><span class="diff-html-added">List</span></a></code>   </span> </div><div class="block"><span class="diff-html-added">Replaces</span> <span class="diff-html-added">each</span> <span class="diff-html-added">element</span> <span class="diff-html-added">of</span> <span class="diff-html-added">this</span> <span class="diff-html-added">list</span> <span class="diff-html-added">with</span> <span class="diff-html-added">the</span> <span class="diff-html-added">result</span> <span class="diff-html-added">of</span> <span class="diff-html-added">applying</span> <span class="diff-html-added">the</span> <span class="diff-html-added">operator</span> <span class="diff-html-added">to</span> <span class="diff-html-added">that</span> <span class="diff-html-added">element.</span> <span class="diff-html-added">Errors</span> <span class="diff-html-added">or</span> <span class="diff-html-added">runtime</span> <span class="diff-html-added">exceptions</span> <span class="diff-html-added">thrown</span> <span class="diff-html-added">by</span> <span class="diff-html-added">the</span> <span class="diff-html-added">operator</span> <span class="diff-html-added">are</span> <span class="diff-html-added">relayed</span> <span class="diff-html-added">to</span> <span class="diff-html-added">the</span> <span class="diff-html-added">caller.</span>                            </div><dl> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../../java/util/List.html#replaceAll-java.util.function.UnaryOperator-"><span class="diff-html-added">replaceAll</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../../java/util/List.html" title="interface in java.util"><span class="diff-html-added">List</span></a><span class="diff-html-added">&lt;</span><a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="paramLabel"><span class="diff-html-added">Parameters:</span></span>   </dt><dd> <code><span class="diff-html-added">operator</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">the</span> <span class="diff-html-added">operator</span> <span class="diff-html-added">to</span> <span class="diff-html-added">apply</span> <span class="diff-html-added">to</span> <span class="diff-html-added">each</span> <span class="diff-html-added">element</span>         </dd>  </dl></li></ul> <a end_ctx_id="method:replaceAll-java.util.function.UnaryOperator-"/>  </td></tr><tr valign="top"><td bgcolor="#CCCCCC" colspan="1"> <a start_ctx_id="method:replaceAll-java.util.function.UnaryOperator-"/><a name="replaceAll-java.util.function.UnaryOperator-"/><ul class="blockList"><li class="blockList"><h4>replaceAll</h4><pre>public void replaceAll(<a href="../../../java/util/function/UnaryOperator.html" title="interface in java.util.function">UnaryOperator</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt; operator)</pre></li></ul> <a end_ctx_id="method:replaceAll-java.util.function.UnaryOperator-"/>  </td><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:replaceAll-java.util.function.UnaryOperator-"/><a name="replaceAll-java.util.function.UnaryOperator-"/><ul class="blockList"><li class="blockList"><h4>replaceAll</h4><pre>public void replaceAll(<a href="../../../java/util/function/UnaryOperator.html" title="interface in java.util.function">UnaryOperator</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt; operator)</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../../java/util/List.html#replaceAll-java.util.function.UnaryOperator-">List</a></code>   </span> </div><div class="block">Replaces each element of this list with the result of applying the operator to that element. Errors or runtime exceptions thrown by the operator are relayed to the caller.                            </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#replaceAll-java.util.function.UnaryOperator-">replaceAll</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>operator</code> - the operator to apply to each element         </dd>  </dl></li></ul> <a end_ctx_id="method:replaceAll-java.util.function.UnaryOperator-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:sort-java.util.Comparator- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:sort-java.util.Comparator-"/><a name="sort-java.util.Comparator-"/><ul class="blockList"><li class="blockList"><h4>sort</h4><pre>public void sort(<a href="../../../java/util/Comparator.html" title="interface in java.util">Comparator</a>&lt;? super <a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt; c)</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../../java/util/List.html#sort-java.util.Comparator-">List</a></code>   </span> </div><div class="block">Sorts this list using the supplied <code>Comparator</code> to compare elements.         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#sort-java.util.Comparator-">sort</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - the <code>Comparator</code> used to compare list elements. A <code>null</code> value indicates that the elements' <a href="../../../java/lang/Comparable.html" title="interface in java.lang">natural ordering </a> should be used                    </dd>  </dl></li></ul> <a end_ctx_id="method:sort-java.util.Comparator-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toString-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toString--"/><a name="toString--"/><ul class="blockList"><li class="blockList"><h4>toString</h4><pre>public <a href="../../../java/lang/String.html" title="class in java.lang">String</a> toString()</pre><div class="block">Returns a string representation of this list. The string representation consists of the string representations of the list's elements in the order they are returned by its iterator, enclosed in square brackets (<code>"[]"</code>). Adjacent elements are separated by the characters <code>", " </code> (comma and space). Elements are converted to strings as by <a href="../../../java/lang/String.html#valueOf-java.lang.Object-"><code>String.valueOf(Object)</code></a>.                                                   </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/lang/Object.html#toString--">toString</a></code> in class <code><a href="../../../java/lang/Object.html" title="class in java.lang">Object</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a string representation of this list     </dd>  </dl></li></ul> <a end_ctx_id="method:toString--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:equals-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:equals-java.lang.Object-"/><a name="equals-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>equals</h4><pre>public boolean equals(<a href="../../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Compares the specified object with this list for equality. Returns <code>true</code> if the specified object is the same object as this object, or if it is also a <a href="../../../java/util/List.html" title="interface in java.util"><code>List</code></a> and the sequence of elements returned by an <a href="../../../java/util/List.html#iterator--">iterator</a> over the specified list is the same as the sequence returned by an iterator over this list. The two sequences are considered to be the same if they have the same length and corresponding elements at the same position in the sequence are <em>equal</em>. Two elements <code>e1</code> and <code>e2</code> are considered <em>equal</em> if <code>(e1==null ? e2==null : e1.equals(e2))    </code>.                                                                                           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#equals-java.lang.Object-">equals</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#equals-java.lang.Object-">equals</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/lang/Object.html#equals-java.lang.Object-">equals</a></code> in class <code><a href="../../../java/lang/Object.html" title="class in java.lang">Object</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - the object to be compared for equality with this list            </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if the specified object is equal to this list          </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/lang/Object.html#hashCode--"><code>Object.hashCode()</code></a>, <a href="../../../java/util/HashMap.html" title="class in java.util"><code>HashMap</code></a>  </dd>      </dl></li></ul> <a end_ctx_id="method:equals-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:hashCode-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:hashCode--"/><a name="hashCode--"/><ul class="blockList"><li class="blockList"><h4>hashCode</h4><pre>public int hashCode()</pre><div class="block">Returns the hash code value for this list.<p>This implementation uses the definition in <a href="../../../java/util/List.html#hashCode--"><code>List.hashCode()</code></a>.      </p>       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#hashCode--">hashCode</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#hashCode--">hashCode</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/lang/Object.html#hashCode--">hashCode</a></code> in class <code><a href="../../../java/lang/Object.html" title="class in java.lang">Object</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the hash code value for this list      </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/lang/Object.html#equals-java.lang.Object-"><code>Object.equals(java.lang.Object)</code></a>, <a href="../../../java/lang/System.html#identityHashCode-java.lang.Object-"><code>System.identityHashCode(java.lang.Object)</code></a>  </dd>     </dl></li></ul> <a end_ctx_id="method:hashCode--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:iterator-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:iterator--"/><a name="iterator--"/><ul class="blockList"><li class="blockList"><h4>iterator</h4><pre>public <a href="../../../java/util/Iterator.html" title="interface in java.util">Iterator</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt; iterator()</pre><div class="block">Returns an iterator over the elements in this list in proper sequence.<p>The returned iterator provides a snapshot of the state of the list when the iterator was constructed. No synchronization is needed while traversing the iterator. The iterator does <em>NOT</em> support the <code>remove</code> method.                                </p>           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/lang/Iterable.html#iterator--">iterator</a></code> in interface <code><a href="../../../java/lang/Iterable.html" title="interface in java.lang">Iterable</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#iterator--">iterator</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#iterator--">iterator</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an iterator over the elements in this list in proper sequence          </dd>    </dl></li></ul> <a end_ctx_id="method:iterator--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:listIterator-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:listIterator--"/><a name="listIterator--"/><ul class="blockList"><li class="blockList"><h4>listIterator</h4><pre>public <a href="../../../java/util/ListIterator.html" title="interface in java.util">ListIterator</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt; listIterator()</pre><div class="block">Returns a list iterator over the elements in this list (in proper sequence).<p>The returned iterator provides a snapshot of the state of the list when the iterator was constructed. No synchronization is needed while traversing the iterator. The iterator does <em>NOT</em> support the <code>remove</code>, <code>set</code> or <code>add</code> methods.                                   </p>            </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#listIterator--">listIterator</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a list iterator over the elements in this list (in proper sequence)           </dd>  </dl></li></ul> <a end_ctx_id="method:listIterator--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:listIterator-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:listIterator-int-"/><a name="listIterator-int-"/><ul class="blockList"><li class="blockList"><h4>listIterator</h4><pre>public <a href="../../../java/util/ListIterator.html" title="interface in java.util">ListIterator</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt; listIterator(int index)</pre><div class="block">Returns a list iterator over the elements in this list (in proper sequence), starting at the specified position in the list. The specified index indicates the first element that would be returned by an initial call to <a href="../../../java/util/ListIterator.html#next--"><code>next</code></a>. An initial call to <a href="../../../java/util/ListIterator.html#previous--"><code>previous</code></a> would return the element with the specified index minus one.<p>The returned iterator provides a snapshot of the state of the list when the iterator was constructed. No synchronization is needed while traversing the iterator. The iterator does <em>NOT</em> support the <code>remove</code>, <code>set</code> or <code>add</code> methods.                                   </p>                                                    </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#listIterator-int-">listIterator</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>index</code> - index of the first element to be returned from the list iterator (by a call to <a href="../../../java/util/ListIterator.html#next--"><code>next</code></a>)                   </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a list iterator over the elements in this list (in proper sequence), starting at the specified position in the list                   </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - if the index is out of range (<code>index &lt; 0 || index &gt; size()      </code>)          </dd>    </dl></li></ul> <a end_ctx_id="method:listIterator-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:spliterator-- [CHANGED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#EEEEEE" colspan="2"> <a start_ctx_id="method:spliterator--"/><a name="spliterator--"/><ul class="blockList"><li class="blockList"><h4>spliterator</h4><pre>public <a href="../../../java/util/Spliterator.html" title="interface in java.util">Spliterator</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt; spliterator()</pre><div class="block">Returns a <a href="../../../java/util/Spliterator.html" title="interface in java.util"><code>Spliterator</code></a> over the elements in this list.<p>The <code>Spliterator</code> reports <a href="../../../java/util/Spliterator.html#IMMUTABLE"><code>Spliterator.IMMUTABLE</code></a>, <a href="../../../java/util/Spliterator.html#ORDERED"><code>Spliterator.ORDERED</code></a>, <a href="../../../java/util/Spliterator.html#SIZED"><code>Spliterator.SIZED</code></a>, and <a href="../../../java/util/Spliterator.html#SUBSIZED"><code>Spliterator.SUBSIZED</code></a>.       </p><p>The spliterator provides a snapshot of the state of the list when the spliterator was constructed. No synchronization is needed while operating on the spliterator.                        </p>        </div><dl> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../../java/lang/Iterable.html#spliterator--"><span class="diff-html-added">spliterator</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../../java/lang/Iterable.html" title="interface in java.lang"><span class="diff-html-added">Iterable</span></a><span class="diff-html-added">&lt;</span><a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#spliterator--"><span class="diff-html-added">spliterator</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../../java/util/Collection.html" title="interface in java.util"><span class="diff-html-added">Collection</span></a><span class="diff-html-added">&lt;</span><a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../../java/util/List.html#spliterator--"><span class="diff-html-added">spliterator</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../../java/util/List.html" title="interface in java.util"><span class="diff-html-added">List</span></a><span class="diff-html-added">&lt;</span><a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a <code>Spliterator</code> over the elements in this list       </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.8</dd>     </dl></li></ul> <a end_ctx_id="method:spliterator--"/>  </td></tr><tr valign="top"><td bgcolor="#CCCCCC" colspan="1"> <a start_ctx_id="method:spliterator--"/><a name="spliterator--"/><ul class="blockList"><li class="blockList"><h4>spliterator</h4><pre>public <a href="../../../java/util/Spliterator.html" title="interface in java.util">Spliterator</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt; spliterator()</pre><div class="block">Returns a <a href="../../../java/util/Spliterator.html" title="interface in java.util"><code>Spliterator</code></a> over the elements in this list.<p>The <code>Spliterator</code> reports <a href="../../../java/util/Spliterator.html#IMMUTABLE"><code>Spliterator.IMMUTABLE</code></a>, <a href="../../../java/util/Spliterator.html#ORDERED"><code>Spliterator.ORDERED</code></a>, <a href="../../../java/util/Spliterator.html#SIZED"><code>Spliterator.SIZED</code></a>, and <a href="../../../java/util/Spliterator.html#SUBSIZED"><code>Spliterator.SUBSIZED</code></a>.       </p><p>The spliterator provides a snapshot of the state of the list when the spliterator was constructed. No synchronization is needed while operating on the spliterator.                        </p>        </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a <code>Spliterator</code> over the elements in this list       </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.8</dd>  </dl></li></ul> <a end_ctx_id="method:spliterator--"/>  </td><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:spliterator--"/><a name="spliterator--"/><ul class="blockList"><li class="blockList"><h4>spliterator</h4><pre>public <a href="../../../java/util/Spliterator.html" title="interface in java.util">Spliterator</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt; spliterator()</pre><div class="block">Returns a <a href="../../../java/util/Spliterator.html" title="interface in java.util"><code>Spliterator</code></a> over the elements in this list.<p>The <code>Spliterator</code> reports <a href="../../../java/util/Spliterator.html#IMMUTABLE"><code>Spliterator.IMMUTABLE</code></a>, <a href="../../../java/util/Spliterator.html#ORDERED"><code>Spliterator.ORDERED</code></a>, <a href="../../../java/util/Spliterator.html#SIZED"><code>Spliterator.SIZED</code></a>, and <a href="../../../java/util/Spliterator.html#SUBSIZED"><code>Spliterator.SUBSIZED</code></a>.       </p><p>The spliterator provides a snapshot of the state of the list when the spliterator was constructed. No synchronization is needed while operating on the spliterator.                        </p>        </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/lang/Iterable.html#spliterator--">spliterator</a></code> in interface <code><a href="../../../java/lang/Iterable.html" title="interface in java.lang">Iterable</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#spliterator--">spliterator</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#spliterator--">spliterator</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a <code>Spliterator</code> over the elements in this list       </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.8</dd>     </dl></li></ul> <a end_ctx_id="method:spliterator--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:subList-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:subList-int-int-"/><a name="subList-int-int-"/><ul class="blockListLast"><li class="blockList"><h4>subList</h4><pre>public <a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt; subList(int fromIndex,
                       int toIndex)</pre><div class="block">Returns a view of the portion of this list between <code>fromIndex</code>, inclusive, and <code>toIndex</code>, exclusive. The returned list is backed by this list, so changes in the returned list are reflected in this list.<p>The semantics of the list returned by this method become undefined if the backing list (i.e., this list) is modified in any way other than via the returned list.                            </p>                                 </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/List.html#subList-int-int-">subList</a></code> in interface <code><a href="../../../java/util/List.html" title="interface in java.util">List</a>&lt;<a href="../../../java/util/concurrent/CopyOnWriteArrayList.html" title="type parameter in CopyOnWriteArrayList">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>fromIndex</code> - low endpoint (inclusive) of the subList        </dd><dd> <code>toIndex</code> - high endpoint (exclusive) of the subList        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a view of the specified range within this list        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - for an illegal endpoint index value (<tt>fromIndex &lt; 0 || toIndex &gt; size || fromIndex &gt; toIndex          </tt>)         </dd>    </dl></li></ul> <a end_ctx_id="method:subList-int-int-"/>  </td></tr></table></td></tr></table></diff></diffreport>