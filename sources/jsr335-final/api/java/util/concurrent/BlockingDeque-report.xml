<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:BlockingDeque [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:BlockingDeque"/><ul class="blockList"><li class="blockList"><dl> <dt> <span class="paramLabel">Type Parameters: </span>   </dt><dd> <code>E</code> - the type of elements held in this collection          </dd> </dl><dl> <dt>All Superinterfaces: </dt><dd> <a href="../../../java/util/concurrent/BlockingQueue.html" title="interface in java.util.concurrent">BlockingQueue</a>&lt;E&gt;, <a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;E&gt;, <a href="../../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;E&gt;, <a href="../../../java/lang/Iterable.html" title="interface in java.lang">Iterable</a>&lt;E&gt;, <a href="../../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;E&gt;     </dd> </dl><dl> <dt>All Known Implementing Classes:   </dt><dd> <a href="../../../java/util/concurrent/LinkedBlockingDeque.html" title="class in java.util.concurrent">LinkedBlockingDeque</a> </dd> </dl> <hr/> <br/><pre>public interface <span class="typeNameLabel">BlockingDeque&lt;E&gt;</span>
extends <a href="../../../java/util/concurrent/BlockingQueue.html" title="interface in java.util.concurrent">BlockingQueue</a>&lt;E&gt;, <a href="../../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;E&gt;</pre><div class="block">A <a href="../../../java/util/Deque.html" title="interface in java.util"><code>Deque</code></a> that additionally supports blocking operations that wait for the deque to become non-empty when retrieving an element, and wait for space to become available in the deque when storing an element.<p> <code>BlockingDeque</code> methods come in four forms, with different ways of handling operations that cannot be satisfied immediately, but may be satisfied at some point in the future: one throws an exception, the second returns a special value (either <code>null</code> or <code>false</code>, depending on the operation), the third blocks the current thread indefinitely until the operation can succeed, and the fourth blocks for only a given maximum time limit before giving up. These methods are summarized in the following table:<table border="" cellpadding="3" cellspacing="1"> <caption>Summary of BlockingDeque methods   </caption><tbody><tr><td align="CENTER" colspan="5"><b>First Element (Head)  </b></td></tr><tr><td/><td align="CENTER"><em>Throws exception </em></td><td align="CENTER"><em>Special value </em></td><td align="CENTER"><em>Blocks</em></td><td align="CENTER"><em>Times out </em></td></tr><tr><td><b>Insert</b></td><td><a href="../../../java/util/concurrent/BlockingDeque.html#addFirst-E-"><code>addFirst(e)</code></a></td><td><a href="../../../java/util/concurrent/BlockingDeque.html#offerFirst-E-"><code>offerFirst(e)</code></a></td><td><a href="../../../java/util/concurrent/BlockingDeque.html#putFirst-E-"><code>putFirst(e)</code></a></td><td><a href="../../../java/util/concurrent/BlockingDeque.html#offerFirst-E-long-java.util.concurrent.TimeUnit-"><code>offerFirst(e, time, unit)  </code></a></td></tr><tr><td><b>Remove</b></td><td><a href="../../../java/util/Deque.html#removeFirst--"><code>removeFirst()</code></a></td><td><a href="../../../java/util/concurrent/BlockingDeque.html#pollFirst-long-java.util.concurrent.TimeUnit-"><code>pollFirst()</code></a></td><td><a href="../../../java/util/concurrent/BlockingDeque.html#takeFirst--"><code>takeFirst()</code></a></td><td><a href="../../../java/util/concurrent/BlockingDeque.html#pollFirst-long-java.util.concurrent.TimeUnit-"><code>pollFirst(time, unit) </code></a></td></tr><tr><td><b>Examine</b></td><td><a href="../../../java/util/Deque.html#getFirst--"><code>getFirst()</code></a></td><td><a href="../../../java/util/Deque.html#peekFirst--"><code>peekFirst()</code></a></td><td><em>not applicable </em></td><td><em>not applicable </em></td></tr><tr><td align="CENTER" colspan="5"><b>Last Element (Tail)  </b></td></tr><tr><td/><td align="CENTER"><em>Throws exception </em></td><td align="CENTER"><em>Special value </em></td><td align="CENTER"><em>Blocks</em></td><td align="CENTER"><em>Times out </em></td></tr><tr><td><b>Insert</b></td><td><a href="../../../java/util/concurrent/BlockingDeque.html#addLast-E-"><code>addLast(e)</code></a></td><td><a href="../../../java/util/concurrent/BlockingDeque.html#offerLast-E-"><code>offerLast(e)</code></a></td><td><a href="../../../java/util/concurrent/BlockingDeque.html#putLast-E-"><code>putLast(e)</code></a></td><td><a href="../../../java/util/concurrent/BlockingDeque.html#offerLast-E-long-java.util.concurrent.TimeUnit-"><code>offerLast(e, time, unit)  </code></a></td></tr><tr><td><b>Remove</b></td><td><a href="../../../java/util/Deque.html#removeLast--"><code>removeLast()</code></a></td><td><a href="../../../java/util/Deque.html#pollLast--"><code>pollLast()</code></a></td><td><a href="../../../java/util/concurrent/BlockingDeque.html#takeLast--"><code>takeLast()</code></a></td><td><a href="../../../java/util/concurrent/BlockingDeque.html#pollLast-long-java.util.concurrent.TimeUnit-"><code>pollLast(time, unit) </code></a></td></tr><tr><td><b>Examine</b></td><td><a href="../../../java/util/Deque.html#getLast--"><code>getLast()</code></a></td><td><a href="../../../java/util/Deque.html#peekLast--"><code>peekLast()</code></a></td><td><em>not applicable </em></td><td><em>not applicable </em></td></tr></tbody> </table>                                                                               </p><p>Like any <a href="../../../java/util/concurrent/BlockingQueue.html" title="interface in java.util.concurrent"><code>BlockingQueue</code></a>, a <code>BlockingDeque</code> is thread safe, does not permit null elements, and may (or may not) be capacity-constrained.                   </p><p>A <code>BlockingDeque</code> implementation may be used directly as a FIFO <code>BlockingQueue</code>. The methods inherited from the <code>BlockingQueue</code> interface are precisely equivalent to <code>BlockingDeque</code> methods as indicated in the following table:<table border="" cellpadding="3" cellspacing="1"> <caption>Comparison of BlockingQueue and BlockingDeque methods     </caption><tbody><tr><td align="CENTER"><b><code>BlockingQueue</code> Method </b></td><td align="CENTER"><b>Equivalent <code>BlockingDeque</code> Method  </b></td></tr><tr><td align="CENTER" colspan="2"><b>Insert</b></td></tr><tr><td><a href="../../../java/util/concurrent/BlockingDeque.html#add-E-"><code>add(e)</code></a></td><td><a href="../../../java/util/concurrent/BlockingDeque.html#addLast-E-"><code>addLast(e)</code></a></td></tr><tr><td><a href="../../../java/util/concurrent/BlockingDeque.html#offer-E-"><code>offer(e)</code></a></td><td><a href="../../../java/util/concurrent/BlockingDeque.html#offerLast-E-"><code>offerLast(e)</code></a></td></tr><tr><td><a href="../../../java/util/concurrent/BlockingDeque.html#put-E-"><code>put(e)</code></a></td><td><a href="../../../java/util/concurrent/BlockingDeque.html#putLast-E-"><code>putLast(e)</code></a></td></tr><tr><td><a href="../../../java/util/concurrent/BlockingDeque.html#offer-E-long-java.util.concurrent.TimeUnit-"><code>offer(e, time, unit)  </code></a></td><td><a href="../../../java/util/concurrent/BlockingDeque.html#offerLast-E-long-java.util.concurrent.TimeUnit-"><code>offerLast(e, time, unit)  </code></a></td></tr><tr><td align="CENTER" colspan="2"><b>Remove</b></td></tr><tr><td><a href="../../../java/util/concurrent/BlockingDeque.html#remove--"><code>remove()</code></a></td><td><a href="../../../java/util/Deque.html#removeFirst--"><code>removeFirst()</code></a></td></tr><tr><td><a href="../../../java/util/concurrent/BlockingDeque.html#poll--"><code>poll()</code></a></td><td><a href="../../../java/util/Deque.html#pollFirst--"><code>pollFirst()</code></a></td></tr><tr><td><a href="../../../java/util/concurrent/BlockingDeque.html#take--"><code>take()</code></a></td><td><a href="../../../java/util/concurrent/BlockingDeque.html#takeFirst--"><code>takeFirst()</code></a></td></tr><tr><td><a href="../../../java/util/concurrent/BlockingDeque.html#poll-long-java.util.concurrent.TimeUnit-"><code>poll(time, unit) </code></a></td><td><a href="../../../java/util/concurrent/BlockingDeque.html#pollFirst-long-java.util.concurrent.TimeUnit-"><code>pollFirst(time, unit) </code></a></td></tr><tr><td align="CENTER" colspan="2"><b>Examine</b></td></tr><tr><td><a href="../../../java/util/concurrent/BlockingDeque.html#element--"><code>element()</code></a></td><td><a href="../../../java/util/Deque.html#getFirst--"><code>getFirst()</code></a></td></tr><tr><td><a href="../../../java/util/concurrent/BlockingDeque.html#peek--"><code>peek()</code></a></td><td><a href="../../../java/util/Deque.html#peekFirst--"><code>peekFirst()</code></a></td></tr></tbody> </table>                             </p><p>Memory consistency effects: As with other concurrent collections, actions in a thread prior to placing an object into a <code>BlockingDeque</code><a href="package-summary.html#MemoryVisibility"><i>happen-before</i></a> actions subsequent to the access or removal of that element from the <code>BlockingDeque</code> in another thread.                                   </p><p>This interface is a member of the <a href="http://download.oracle.com/javase/7/docs/technotes/guides/collections/index.html"> Java Collections Framework   </a>.       </p>                                </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.6</dd> </dl>  </li></ul> </div> <a end_ctx_id="class:BlockingDeque"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:addFirst-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><a start_ctx_id="method:addFirst-E-"/><a name="addFirst-E-"/><ul class="blockList"><li class="blockList"><h4>addFirst</h4><pre>void addFirst(<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a> e)</pre><div class="block">Inserts the specified element at the front of this deque if it is possible to do so immediately without violating capacity restrictions, throwing an <code>IllegalStateException</code> if no space is currently available. When using a capacity-restricted deque, it is generally preferable to use <a href="../../../java/util/concurrent/BlockingDeque.html#offerFirst-E-"><code>offerFirst</code></a>.                                          </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Deque.html#addFirst-E-">addFirst</a></code> in interface <code><a href="../../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IllegalStateException.html" title="class in java.lang">IllegalStateException</a></code> - if the element cannot be added at this time due to capacity restrictions               </dd><dd> <code><a href="../../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of the specified element prevents it from being added to this deque                 </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null        </dd><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if some property of the specified element prevents it from being added to this deque                 </dd>   </dl></li></ul> <a name="addLast-java.lang.Object-"/><a end_ctx_id="method:addFirst-E-"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:addLast-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:addLast-E-"/><a name="addLast-E-"/><ul class="blockList"><li class="blockList"><h4>addLast</h4><pre>void addLast(<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a> e)</pre><div class="block">Inserts the specified element at the end of this deque if it is possible to do so immediately without violating capacity restrictions, throwing an <code>IllegalStateException</code> if no space is currently available. When using a capacity-restricted deque, it is generally preferable to use <a href="../../../java/util/concurrent/BlockingDeque.html#offerLast-E-"><code>offerLast</code></a>.                                          </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Deque.html#addLast-E-">addLast</a></code> in interface <code><a href="../../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IllegalStateException.html" title="class in java.lang">IllegalStateException</a></code> - if the element cannot be added at this time due to capacity restrictions               </dd><dd> <code><a href="../../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of the specified element prevents it from being added to this deque                 </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null        </dd><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if some property of the specified element prevents it from being added to this deque                 </dd>   </dl></li></ul> <a name="offerFirst-java.lang.Object-"/><a end_ctx_id="method:addLast-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:offerFirst-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:offerFirst-E-"/><a name="offerFirst-E-"/><ul class="blockList"><li class="blockList"><h4>offerFirst</h4><pre>boolean offerFirst(<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a> e)</pre><div class="block">Inserts the specified element at the front of this deque if it is possible to do so immediately without violating capacity restrictions, returning <code>true</code> upon success and <code>false</code> if no space is currently available. When using a capacity-restricted deque, this method is generally preferable to the <a href="../../../java/util/concurrent/BlockingDeque.html#addFirst-E-"><code>addFirst</code></a> method, which can fail to insert an element only by throwing an exception.                                                           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Deque.html#offerFirst-E-">offerFirst</a></code> in interface <code><a href="../../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if the element was added to this deque, else <code>false</code>           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of the specified element prevents it from being added to this deque                 </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null        </dd><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if some property of the specified element prevents it from being added to this deque                 </dd>    </dl></li></ul> <a name="offerLast-java.lang.Object-"/><a end_ctx_id="method:offerFirst-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:offerLast-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:offerLast-E-"/><a name="offerLast-E-"/><ul class="blockList"><li class="blockList"><h4>offerLast</h4><pre>boolean offerLast(<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a> e)</pre><div class="block">Inserts the specified element at the end of this deque if it is possible to do so immediately without violating capacity restrictions, returning <code>true</code> upon success and <code>false</code> if no space is currently available. When using a capacity-restricted deque, this method is generally preferable to the <a href="../../../java/util/concurrent/BlockingDeque.html#addLast-E-"><code>addLast</code></a> method, which can fail to insert an element only by throwing an exception.                                                           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Deque.html#offerLast-E-">offerLast</a></code> in interface <code><a href="../../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if the element was added to this deque, else <code>false</code>           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of the specified element prevents it from being added to this deque                 </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null        </dd><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if some property of the specified element prevents it from being added to this deque                 </dd>    </dl></li></ul> <a name="putFirst-java.lang.Object-"/><a end_ctx_id="method:offerLast-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:putFirst-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:putFirst-E-"/><a name="putFirst-E-"/><ul class="blockList"><li class="blockList"><h4>putFirst</h4><pre>void putFirst(<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a> e)
       throws <a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></pre><div class="block">Inserts the specified element at the front of this deque, waiting if necessary for space to become available.                 </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></code> - if interrupted while waiting      </dd><dd> <code><a href="../../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of the specified element prevents it from being added to this deque                 </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null        </dd><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if some property of the specified element prevents it from being added to this deque                 </dd>  </dl></li></ul> <a name="putLast-java.lang.Object-"/><a end_ctx_id="method:putFirst-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:putLast-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:putLast-E-"/><a name="putLast-E-"/><ul class="blockList"><li class="blockList"><h4>putLast</h4><pre>void putLast(<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a> e)
      throws <a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></pre><div class="block">Inserts the specified element at the end of this deque, waiting if necessary for space to become available.                 </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></code> - if interrupted while waiting      </dd><dd> <code><a href="../../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of the specified element prevents it from being added to this deque                 </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null        </dd><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if some property of the specified element prevents it from being added to this deque                 </dd>  </dl></li></ul> <a name="offerFirst-java.lang.Object-long-java.util.concurrent.TimeUnit-"/><a end_ctx_id="method:putLast-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:offerFirst-E-long-java.util.concurrent.TimeUnit- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:offerFirst-E-long-java.util.concurrent.TimeUnit-"/><a name="offerFirst-E-long-java.util.concurrent.TimeUnit-"/><ul class="blockList"><li class="blockList"><h4>offerFirst</h4><pre>boolean offerFirst(<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a> e,
                   long timeout,
                   <a href="../../../java/util/concurrent/TimeUnit.html" title="enum in java.util.concurrent">TimeUnit</a> unit)
            throws <a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></pre><div class="block">Inserts the specified element at the front of this deque, waiting up to the specified wait time if necessary for space to become available.                       </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd><dd> <code>timeout</code> - how long to wait before giving up, in units of <code>unit</code>             </dd><dd> <code>unit</code> - a <code>TimeUnit</code> determining how to interpret the <code>timeout</code> parameter           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if successful, or <code>false</code> if the specified waiting time elapses before space is available               </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></code> - if interrupted while waiting      </dd><dd> <code><a href="../../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of the specified element prevents it from being added to this deque                 </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null        </dd><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if some property of the specified element prevents it from being added to this deque                 </dd>   </dl></li></ul> <a name="offerLast-java.lang.Object-long-java.util.concurrent.TimeUnit-"/><a end_ctx_id="method:offerFirst-E-long-java.util.concurrent.TimeUnit-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:offerLast-E-long-java.util.concurrent.TimeUnit- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:offerLast-E-long-java.util.concurrent.TimeUnit-"/><a name="offerLast-E-long-java.util.concurrent.TimeUnit-"/><ul class="blockList"><li class="blockList"><h4>offerLast</h4><pre>boolean offerLast(<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a> e,
                  long timeout,
                  <a href="../../../java/util/concurrent/TimeUnit.html" title="enum in java.util.concurrent">TimeUnit</a> unit)
           throws <a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></pre><div class="block">Inserts the specified element at the end of this deque, waiting up to the specified wait time if necessary for space to become available.                       </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd><dd> <code>timeout</code> - how long to wait before giving up, in units of <code>unit</code>             </dd><dd> <code>unit</code> - a <code>TimeUnit</code> determining how to interpret the <code>timeout</code> parameter           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if successful, or <code>false</code> if the specified waiting time elapses before space is available               </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></code> - if interrupted while waiting      </dd><dd> <code><a href="../../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of the specified element prevents it from being added to this deque                 </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null        </dd><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if some property of the specified element prevents it from being added to this deque                 </dd>   </dl></li></ul> <a end_ctx_id="method:offerLast-E-long-java.util.concurrent.TimeUnit-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:takeFirst-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:takeFirst--"/><a name="takeFirst--"/><ul class="blockList"><li class="blockList"><h4>takeFirst</h4><pre><a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a> takeFirst()
     throws <a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></pre><div class="block">Retrieves and removes the first element of this deque, waiting if necessary until an element becomes available.                </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of this deque    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></code> - if interrupted while waiting      </dd>  </dl></li></ul> <a end_ctx_id="method:takeFirst--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:takeLast-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:takeLast--"/><a name="takeLast--"/><ul class="blockList"><li class="blockList"><h4>takeLast</h4><pre><a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a> takeLast()
    throws <a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></pre><div class="block">Retrieves and removes the last element of this deque, waiting if necessary until an element becomes available.                </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the tail of this deque    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></code> - if interrupted while waiting      </dd>  </dl></li></ul> <a end_ctx_id="method:takeLast--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:pollFirst-long-java.util.concurrent.TimeUnit- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:pollFirst-long-java.util.concurrent.TimeUnit-"/><a name="pollFirst-long-java.util.concurrent.TimeUnit-"/><ul class="blockList"><li class="blockList"><h4>pollFirst</h4><pre><a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a> pollFirst(long timeout,
            <a href="../../../java/util/concurrent/TimeUnit.html" title="enum in java.util.concurrent">TimeUnit</a> unit)
     throws <a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></pre><div class="block">Retrieves and removes the first element of this deque, waiting up to the specified wait time if necessary for an element to become available.                       </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>timeout</code> - how long to wait before giving up, in units of <code>unit</code>             </dd><dd> <code>unit</code> - a <code>TimeUnit</code> determining how to interpret the <code>timeout</code> parameter           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of this deque, or <code>null</code> if the specified waiting time elapses before an element is available                 </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></code> - if interrupted while waiting      </dd>   </dl></li></ul> <a end_ctx_id="method:pollFirst-long-java.util.concurrent.TimeUnit-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:pollLast-long-java.util.concurrent.TimeUnit- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:pollLast-long-java.util.concurrent.TimeUnit-"/><a name="pollLast-long-java.util.concurrent.TimeUnit-"/><ul class="blockList"><li class="blockList"><h4>pollLast</h4><pre><a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a> pollLast(long timeout,
           <a href="../../../java/util/concurrent/TimeUnit.html" title="enum in java.util.concurrent">TimeUnit</a> unit)
    throws <a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></pre><div class="block">Retrieves and removes the last element of this deque, waiting up to the specified wait time if necessary for an element to become available.                       </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>timeout</code> - how long to wait before giving up, in units of <code>unit</code>             </dd><dd> <code>unit</code> - a <code>TimeUnit</code> determining how to interpret the <code>timeout</code> parameter           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the tail of this deque, or <code>null</code> if the specified waiting time elapses before an element is available                 </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></code> - if interrupted while waiting      </dd>   </dl></li></ul> <a end_ctx_id="method:pollLast-long-java.util.concurrent.TimeUnit-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:removeFirstOccurrence-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:removeFirstOccurrence-java.lang.Object-"/><a name="removeFirstOccurrence-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>removeFirstOccurrence</h4><pre>boolean removeFirstOccurrence(<a href="../../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Removes the first occurrence of the specified element from this deque. If the deque does not contain the element, it is unchanged. More formally, removes the first element <code>e</code> such that <code>o.equals(e)</code> (if such an element exists). Returns <code>true</code> if this deque contained the specified element (or equivalently, if this deque changed as a result of the call).                                                         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Deque.html#removeFirstOccurrence-java.lang.Object-">removeFirstOccurrence</a></code> in interface <code><a href="../../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element to be removed from this deque, if present           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if an element was removed as a result of this call            </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of the specified element is incompatible with this deque (<a href="../Collection.html#optional-restrictions">optional</a>)               </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null (<a href="../Collection.html#optional-restrictions">optional</a>)         </dd>    </dl></li></ul> <a end_ctx_id="method:removeFirstOccurrence-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:removeLastOccurrence-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:removeLastOccurrence-java.lang.Object-"/><a name="removeLastOccurrence-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>removeLastOccurrence</h4><pre>boolean removeLastOccurrence(<a href="../../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Removes the last occurrence of the specified element from this deque. If the deque does not contain the element, it is unchanged. More formally, removes the last element <code>e</code> such that <code>o.equals(e)</code> (if such an element exists). Returns <code>true</code> if this deque contained the specified element (or equivalently, if this deque changed as a result of the call).                                                         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Deque.html#removeLastOccurrence-java.lang.Object-">removeLastOccurrence</a></code> in interface <code><a href="../../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element to be removed from this deque, if present           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if an element was removed as a result of this call            </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of the specified element is incompatible with this deque (<a href="../Collection.html#optional-restrictions">optional</a>)               </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null (<a href="../Collection.html#optional-restrictions">optional</a>)         </dd>    </dl></li></ul> <a name="add-java.lang.Object-"/><a end_ctx_id="method:removeLastOccurrence-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:add-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:add-E-"/><a name="add-E-"/><ul class="blockList"><li class="blockList"><h4>add</h4><pre>boolean add(<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a> e)</pre><div class="block">Inserts the specified element into the queue represented by this deque (in other words, at the tail of this deque) if it is possible to do so immediately without violating capacity restrictions, returning <code>true</code> upon success and throwing an <code>IllegalStateException</code> if no space is currently available. When using a capacity-restricted deque, it is generally preferable to use <a href="../../../java/util/concurrent/BlockingDeque.html#offer-E-"><code>offer</code></a>.<p>This method is equivalent to <a href="../../../java/util/concurrent/BlockingDeque.html#addLast-E-"><code>addLast</code></a>.     </p>                                                         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/concurrent/BlockingQueue.html#add-E-">add</a></code> in interface <code><a href="../../../java/util/concurrent/BlockingQueue.html" title="interface in java.util.concurrent">BlockingQueue</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#add-E-">add</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Deque.html#add-E-">add</a></code> in interface <code><a href="../../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Queue.html#add-E-">add</a></code> in interface <code><a href="../../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> (as specified by <a href="../../../java/util/Collection.html#add-E-"><code>Collection.add(E)</code></a>)     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IllegalStateException.html" title="class in java.lang">IllegalStateException</a></code> - if the element cannot be added at this time due to capacity restrictions               </dd><dd> <code><a href="../../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of the specified element prevents it from being added to this deque                 </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null        </dd><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if some property of the specified element prevents it from being added to this deque                 </dd>       </dl></li></ul> <a name="offer-java.lang.Object-"/><a end_ctx_id="method:add-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:offer-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:offer-E-"/><a name="offer-E-"/><ul class="blockList"><li class="blockList"><h4>offer</h4><pre>boolean offer(<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a> e)</pre><div class="block">Inserts the specified element into the queue represented by this deque (in other words, at the tail of this deque) if it is possible to do so immediately without violating capacity restrictions, returning <code>true</code> upon success and <code>false</code> if no space is currently available. When using a capacity-restricted deque, this method is generally preferable to the <a href="../../../java/util/concurrent/BlockingDeque.html#add-E-"><code>add(E)</code></a> method, which can fail to insert an element only by throwing an exception.<p>This method is equivalent to <a href="../../../java/util/concurrent/BlockingDeque.html#offerLast-E-"><code>offerLast</code></a>.     </p>                                                                     </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/concurrent/BlockingQueue.html#offer-E-">offer</a></code> in interface <code><a href="../../../java/util/concurrent/BlockingQueue.html" title="interface in java.util.concurrent">BlockingQueue</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Deque.html#offer-E-">offer</a></code> in interface <code><a href="../../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Queue.html#offer-E-">offer</a></code> in interface <code><a href="../../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if the element was added to this queue, else <code>false</code>           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of the specified element prevents it from being added to this deque                 </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null        </dd><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if some property of the specified element prevents it from being added to this deque                 </dd>      </dl></li></ul> <a name="put-java.lang.Object-"/><a end_ctx_id="method:offer-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:put-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:put-E-"/><a name="put-E-"/><ul class="blockList"><li class="blockList"><h4>put</h4><pre>void put(<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a> e)
  throws <a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></pre><div class="block">Inserts the specified element into the queue represented by this deque (in other words, at the tail of this deque), waiting if necessary for space to become available.<p>This method is equivalent to <a href="../../../java/util/concurrent/BlockingDeque.html#putLast-E-"><code>putLast</code></a>.     </p>                           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/concurrent/BlockingQueue.html#put-E-">put</a></code> in interface <code><a href="../../../java/util/concurrent/BlockingQueue.html" title="interface in java.util.concurrent">BlockingQueue</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></code> - if interrupted while waiting      </dd><dd> <code><a href="../../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of the specified element prevents it from being added to this deque                 </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null        </dd><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if some property of the specified element prevents it from being added to this deque                 </dd>   </dl></li></ul> <a name="offer-java.lang.Object-long-java.util.concurrent.TimeUnit-"/><a end_ctx_id="method:put-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:offer-E-long-java.util.concurrent.TimeUnit- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:offer-E-long-java.util.concurrent.TimeUnit-"/><a name="offer-E-long-java.util.concurrent.TimeUnit-"/><ul class="blockList"><li class="blockList"><h4>offer</h4><pre>boolean offer(<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a> e,
              long timeout,
              <a href="../../../java/util/concurrent/TimeUnit.html" title="enum in java.util.concurrent">TimeUnit</a> unit)
       throws <a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></pre><div class="block">Inserts the specified element into the queue represented by this deque (in other words, at the tail of this deque), waiting up to the specified wait time if necessary for space to become available.<p>This method is equivalent to <a href="../../../java/util/concurrent/BlockingDeque.html#offerLast-E-long-java.util.concurrent.TimeUnit-"><code>offerLast</code></a>.     </p>                                 </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/concurrent/BlockingQueue.html#offer-E-long-java.util.concurrent.TimeUnit-">offer</a></code> in interface <code><a href="../../../java/util/concurrent/BlockingQueue.html" title="interface in java.util.concurrent">BlockingQueue</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd><dd> <code>timeout</code> - how long to wait before giving up, in units of <code>unit</code>             </dd><dd> <code>unit</code> - a <code>TimeUnit</code> determining how to interpret the <code>timeout</code> parameter           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if the element was added to this deque, else <code>false</code>           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></code> - if interrupted while waiting      </dd><dd> <code><a href="../../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of the specified element prevents it from being added to this deque                 </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null        </dd><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if some property of the specified element prevents it from being added to this deque                 </dd>    </dl></li></ul> <a end_ctx_id="method:offer-E-long-java.util.concurrent.TimeUnit-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:remove-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:remove--"/><a name="remove--"/><ul class="blockList"><li class="blockList"><h4>remove</h4><pre><a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a> remove()</pre><div class="block">Retrieves and removes the head of the queue represented by this deque (in other words, the first element of this deque). This method differs from <a href="../../../java/util/concurrent/BlockingDeque.html#poll--"><code>poll</code></a> only in that it throws an exception if this deque is empty.<p>This method is equivalent to <a href="../../../java/util/Deque.html#removeFirst--"><code>removeFirst</code></a>.     </p>                                     </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Deque.html#remove--">remove</a></code> in interface <code><a href="../../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Queue.html#remove--">remove</a></code> in interface <code><a href="../../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of the queue represented by this deque        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/util/NoSuchElementException.html" title="class in java.util">NoSuchElementException</a></code> - if this deque is empty       </dd>    </dl></li></ul> <a end_ctx_id="method:remove--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:poll-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:poll--"/><a name="poll--"/><ul class="blockList"><li class="blockList"><h4>poll</h4><pre><a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a> poll()</pre><div class="block">Retrieves and removes the head of the queue represented by this deque (in other words, the first element of this deque), or returns <code>null</code> if this deque is empty.<p>This method is equivalent to <a href="../../../java/util/Deque.html#pollFirst--"><code>Deque.pollFirst()</code></a>.     </p>                            </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Deque.html#poll--">poll</a></code> in interface <code><a href="../../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Queue.html#poll--">poll</a></code> in interface <code><a href="../../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of this deque, or <code>null</code> if this deque is empty           </dd>   </dl></li></ul> <a end_ctx_id="method:poll--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:take-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:take--"/><a name="take--"/><ul class="blockList"><li class="blockList"><h4>take</h4><pre><a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a> take()
throws <a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></pre><div class="block">Retrieves and removes the head of the queue represented by this deque (in other words, the first element of this deque), waiting if necessary until an element becomes available.<p>This method is equivalent to <a href="../../../java/util/concurrent/BlockingDeque.html#takeFirst--"><code>takeFirst</code></a>.     </p>                            </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/concurrent/BlockingQueue.html#take--">take</a></code> in interface <code><a href="../../../java/util/concurrent/BlockingQueue.html" title="interface in java.util.concurrent">BlockingQueue</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of this deque    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></code> - if interrupted while waiting      </dd>   </dl></li></ul> <a end_ctx_id="method:take--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:poll-long-java.util.concurrent.TimeUnit- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:poll-long-java.util.concurrent.TimeUnit-"/><a name="poll-long-java.util.concurrent.TimeUnit-"/><ul class="blockList"><li class="blockList"><h4>poll</h4><pre><a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a> poll(long timeout,
       <a href="../../../java/util/concurrent/TimeUnit.html" title="enum in java.util.concurrent">TimeUnit</a> unit)
throws <a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></pre><div class="block">Retrieves and removes the head of the queue represented by this deque (in other words, the first element of this deque), waiting up to the specified wait time if necessary for an element to become available.<p>This method is equivalent to <a href="../../../java/util/concurrent/BlockingDeque.html#pollFirst-long-java.util.concurrent.TimeUnit-"><code>pollFirst</code></a>.     </p>                                   </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/concurrent/BlockingQueue.html#poll-long-java.util.concurrent.TimeUnit-">poll</a></code> in interface <code><a href="../../../java/util/concurrent/BlockingQueue.html" title="interface in java.util.concurrent">BlockingQueue</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>timeout</code> - how long to wait before giving up, in units of <code>unit</code>             </dd><dd> <code>unit</code> - a <code>TimeUnit</code> determining how to interpret the <code>timeout</code> parameter           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of this deque, or <code>null</code> if the specified waiting time elapses before an element is available                 </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></code> - if interrupted while waiting      </dd>    </dl></li></ul> <a end_ctx_id="method:poll-long-java.util.concurrent.TimeUnit-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:element-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:element--"/><a name="element--"/><ul class="blockList"><li class="blockList"><h4>element</h4><pre><a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a> element()</pre><div class="block">Retrieves, but does not remove, the head of the queue represented by this deque (in other words, the first element of this deque). This method differs from <a href="../../../java/util/concurrent/BlockingDeque.html#peek--"><code>peek</code></a> only in that it throws an exception if this deque is empty.<p>This method is equivalent to <a href="../../../java/util/Deque.html#getFirst--"><code>getFirst</code></a>.     </p>                                       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Deque.html#element--">element</a></code> in interface <code><a href="../../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Queue.html#element--">element</a></code> in interface <code><a href="../../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of this deque    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/util/NoSuchElementException.html" title="class in java.util">NoSuchElementException</a></code> - if this deque is empty       </dd>    </dl></li></ul> <a end_ctx_id="method:element--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:peek-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:peek--"/><a name="peek--"/><ul class="blockList"><li class="blockList"><h4>peek</h4><pre><a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a> peek()</pre><div class="block">Retrieves, but does not remove, the head of the queue represented by this deque (in other words, the first element of this deque), or returns <code>null</code> if this deque is empty.<p>This method is equivalent to <a href="../../../java/util/Deque.html#peekFirst--"><code>peekFirst</code></a>.     </p>                              </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Deque.html#peek--">peek</a></code> in interface <code><a href="../../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Queue.html#peek--">peek</a></code> in interface <code><a href="../../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of this deque, or <code>null</code> if this deque is empty           </dd>   </dl></li></ul> <a end_ctx_id="method:peek--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:remove-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:remove-java.lang.Object-"/><a name="remove-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>remove</h4><pre>boolean remove(<a href="../../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Removes the first occurrence of the specified element from this deque. If the deque does not contain the element, it is unchanged. More formally, removes the first element <code>e</code> such that <code>o.equals(e)</code> (if such an element exists). Returns <code>true</code> if this deque contained the specified element (or equivalently, if this deque changed as a result of the call).<p>This method is equivalent to <a href="../../../java/util/concurrent/BlockingDeque.html#removeFirstOccurrence-java.lang.Object-"><code>removeFirstOccurrence</code></a>.     </p>                                                         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/concurrent/BlockingQueue.html#remove-java.lang.Object-">remove</a></code> in interface <code><a href="../../../java/util/concurrent/BlockingQueue.html" title="interface in java.util.concurrent">BlockingQueue</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#remove-java.lang.Object-">remove</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Deque.html#remove-java.lang.Object-">remove</a></code> in interface <code><a href="../../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element to be removed from this deque, if present           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this deque changed as a result of the call           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of the specified element is incompatible with this deque (<a href="../Collection.html#optional-restrictions">optional</a>)               </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null (<a href="../Collection.html#optional-restrictions">optional</a>)         </dd>      </dl></li></ul> <a end_ctx_id="method:remove-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:contains-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:contains-java.lang.Object-"/><a name="contains-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>contains</h4><pre>boolean contains(<a href="../../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Returns <code>true</code> if this deque contains the specified element. More formally, returns <code>true</code> if and only if this deque contains at least one element <code>e</code> such that <code>o.equals(e)</code>.                           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/concurrent/BlockingQueue.html#contains-java.lang.Object-">contains</a></code> in interface <code><a href="../../../java/util/concurrent/BlockingQueue.html" title="interface in java.util.concurrent">BlockingQueue</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#contains-java.lang.Object-">contains</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Deque.html#contains-java.lang.Object-">contains</a></code> in interface <code><a href="../../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - object to be checked for containment in this deque           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this deque contains the specified element        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of the specified element is incompatible with this deque (<a href="../Collection.html#optional-restrictions">optional</a>)               </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null (<a href="../Collection.html#optional-restrictions">optional</a>)         </dd>      </dl></li></ul> <a end_ctx_id="method:contains-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:size-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:size--"/><a name="size--"/><ul class="blockList"><li class="blockList"><h4>size</h4><pre>int size()</pre><div class="block">Returns the number of elements in this deque.       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#size--">size</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Deque.html#size--">size</a></code> in interface <code><a href="../../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the number of elements in this deque      </dd>   </dl></li></ul> <a end_ctx_id="method:size--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:iterator-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:iterator--"/><a name="iterator--"/><ul class="blockList"><li class="blockList"><h4>iterator</h4><pre><a href="../../../java/util/Iterator.html" title="interface in java.util">Iterator</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt; iterator()</pre><div class="block">Returns an iterator over the elements in this deque in proper sequence. The elements will be returned in order from first (head) to last (tail).                        </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#iterator--">iterator</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Deque.html#iterator--">iterator</a></code> in interface <code><a href="../../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/lang/Iterable.html#iterator--">iterator</a></code> in interface <code><a href="../../../java/lang/Iterable.html" title="interface in java.lang">Iterable</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an iterator over the elements in this deque in proper sequence          </dd>    </dl></li></ul> <a name="push-java.lang.Object-"/><a end_ctx_id="method:iterator--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:push-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:push-E-"/><a name="push-E-"/><ul class="blockListLast"><li class="blockList"><h4>push</h4><pre>void push(<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a> e)</pre><div class="block">Pushes an element onto the stack represented by this deque (in other words, at the head of this deque) if it is possible to do so immediately without violating capacity restrictions, throwing an <code>IllegalStateException</code> if no space is currently available.<p>This method is equivalent to <a href="../../../java/util/concurrent/BlockingDeque.html#addFirst-E-"><code>addFirst</code></a>.     </p>                                       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Deque.html#push-E-">push</a></code> in interface <code><a href="../../../java/util/Deque.html" title="interface in java.util">Deque</a>&lt;<a href="../../../java/util/concurrent/BlockingDeque.html" title="type parameter in BlockingDeque">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to push      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IllegalStateException.html" title="class in java.lang">IllegalStateException</a></code> - if the element cannot be added at this time due to capacity restrictions               </dd><dd> <code><a href="../../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of the specified element prevents it from being added to this deque                 </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null        </dd><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if some property of the specified element prevents it from being added to this deque                 </dd>   </dl></li></ul> <a end_ctx_id="method:push-E-"/>  </td></tr></table></td></tr></table></diff></diffreport>