<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:ForkJoinPool.ForkJoinWorkerThreadFactory [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:ForkJoinPool.ForkJoinWorkerThreadFactory"/><ul class="blockList"><li class="blockList"><dl> <dt>Enclosing class: </dt><dd> <a href="../../../java/util/concurrent/ForkJoinPool.html" title="class in java.util.concurrent">ForkJoinPool</a> </dd> </dl> <hr/> <br/><pre>public static interface <span class="typeNameLabel">ForkJoinPool.ForkJoinWorkerThreadFactory</span></pre><div class="block">Factory for creating new <a href="../../../java/util/concurrent/ForkJoinWorkerThread.html" title="class in java.util.concurrent"><code>ForkJoinWorkerThread</code></a>s. A <code>ForkJoinWorkerThreadFactory</code> must be defined and used for <code>ForkJoinWorkerThread</code> subclasses that extend base functionality or initialize threads with different contexts.                        </div>  </li></ul> </div> <a end_ctx_id="class:ForkJoinPool.ForkJoinWorkerThreadFactory"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:newThread-java.util.concurrent.ForkJoinPool- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:newThread-java.util.concurrent.ForkJoinPool-"/><a name="newThread-java.util.concurrent.ForkJoinPool-"/><ul class="blockListLast"><li class="blockList"><h4>newThread</h4><pre><a href="../../../java/util/concurrent/ForkJoinWorkerThread.html" title="class in java.util.concurrent">ForkJoinWorkerThread</a> newThread(<a href="../../../java/util/concurrent/ForkJoinPool.html" title="class in java.util.concurrent">ForkJoinPool</a> pool)</pre><div class="block">Returns a new worker thread operating in the given pool.         </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>pool</code> - the pool this thread works in        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the new worker thread   </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the pool is null       </dd>   </dl></li></ul> <a end_ctx_id="method:newThread-java.util.concurrent.ForkJoinPool-"/>  </td></tr></table></td></tr></table></diff></diffreport>