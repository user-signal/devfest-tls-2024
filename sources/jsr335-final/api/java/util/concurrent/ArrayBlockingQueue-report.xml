<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:ArrayBlockingQueue [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:ArrayBlockingQueue"/><ul class="blockList"><li class="blockList"><dl> <dt> <span class="paramLabel">Type Parameters: </span>   </dt><dd> <code>E</code> - the type of elements held in this collection          </dd> </dl><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../../java/io/Serializable.html" title="interface in java.io">Serializable</a>, <a href="../../../java/lang/Iterable.html" title="interface in java.lang">Iterable</a>&lt;E&gt;, <a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;E&gt;, <a href="../../../java/util/concurrent/BlockingQueue.html" title="interface in java.util.concurrent">BlockingQueue</a>&lt;E&gt;, <a href="../../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;E&gt;     </dd> </dl> <hr/> <br/><pre>public class <span class="typeNameLabel">ArrayBlockingQueue&lt;E&gt;</span>
extends <a href="../../../java/util/AbstractQueue.html" title="class in java.util">AbstractQueue</a>&lt;E&gt;
implements <a href="../../../java/util/concurrent/BlockingQueue.html" title="interface in java.util.concurrent">BlockingQueue</a>&lt;E&gt;, <a href="../../../java/io/Serializable.html" title="interface in java.io">Serializable</a></pre><div class="block">A bounded <a href="../../../java/util/concurrent/BlockingQueue.html" title="interface in java.util.concurrent">blocking queue </a> backed by an array. This queue orders elements FIFO (first-in-first-out). The <em>head</em> of the queue is that element that has been on the queue the longest time. The <em>tail</em> of the queue is that element that has been on the queue the shortest time. New elements are inserted at the tail of the queue, and the queue retrieval operations obtain elements at the head of the queue.<p>This is a classic "bounded buffer", in which a fixed-sized array holds elements inserted by producers and extracted by consumers. Once created, the capacity cannot be changed. Attempts to <code>put</code> an element into a full queue will result in the operation blocking; attempts to <code>take</code> an element from an empty queue will similarly block.                                                     </p><p>This class supports an optional fairness policy for ordering waiting producer and consumer threads. By default, this ordering is not guaranteed. However, a queue constructed with fairness set to <code>true</code> grants threads access in FIFO order. Fairness generally decreases throughput but reduces variability and avoids starvation.                                             </p><p>This class and its iterator implement all of the <em>optional</em> methods of the <a href="../../../java/util/Collection.html" title="interface in java.util"><code>Collection</code></a> and <a href="../../../java/util/Iterator.html" title="interface in java.util"><code>Iterator</code></a> interfaces.                </p><p>This class is a member of the <a href="http://download.oracle.com/javase/7/docs/technotes/guides/collections/index.html"> Java Collections Framework   </a>.       </p>                                                                     </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../serialized-form.html#java.util.concurrent.ArrayBlockingQueue">Serialized Form </a> </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:ArrayBlockingQueue"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:ArrayBlockingQueue-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:ArrayBlockingQueue-int-"/><a name="ArrayBlockingQueue-int-"/><ul class="blockList"><li class="blockList"><h4>ArrayBlockingQueue</h4><pre>public ArrayBlockingQueue(int capacity)</pre><div class="block">Creates an <code>ArrayBlockingQueue</code> with the given (fixed) capacity and default access policy.           </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>capacity</code> - the capacity of this queue       </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if <code>capacity &lt; 1  </code>    </dd>  </dl></li></ul> <a end_ctx_id="constructor:ArrayBlockingQueue-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:ArrayBlockingQueue-int-boolean- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:ArrayBlockingQueue-int-boolean-"/><a name="ArrayBlockingQueue-int-boolean-"/><ul class="blockList"><li class="blockList"><h4>ArrayBlockingQueue</h4><pre>public ArrayBlockingQueue(int capacity,
                          boolean fair)</pre><div class="block">Creates an <code>ArrayBlockingQueue</code> with the given (fixed) capacity and the specified access policy.            </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>capacity</code> - the capacity of this queue       </dd><dd> <code>fair</code> - if <code>true</code> then queue accesses for threads blocked on insertion or removal, are processed in FIFO order; if <code>false</code> the access order is unspecified.                          </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if <code>capacity &lt; 1  </code>    </dd>  </dl></li></ul> <a end_ctx_id="constructor:ArrayBlockingQueue-int-boolean-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:ArrayBlockingQueue-int-boolean-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:ArrayBlockingQueue-int-boolean-java.util.Collection-"/><a name="ArrayBlockingQueue-int-boolean-java.util.Collection-"/><ul class="blockListLast"><li class="blockList"><h4>ArrayBlockingQueue</h4><pre>public ArrayBlockingQueue(int capacity,
                          boolean fair,
                          <a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;? extends <a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt; c)</pre><div class="block">Creates an <code>ArrayBlockingQueue</code> with the given (fixed) capacity, the specified access policy and initially containing the elements of the given collection, added in traversal order of the collection's iterator.                            </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>capacity</code> - the capacity of this queue       </dd><dd> <code>fair</code> - if <code>true</code> then queue accesses for threads blocked on insertion or removal, are processed in FIFO order; if <code>false</code> the access order is unspecified.                          </dd><dd> <code>c</code> - the collection of elements to initially contain         </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if <code>capacity</code> is less than <code>c.size()</code>, or less than 1.            </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified collection or any of its elements are null             </dd>  </dl></li></ul> <a end_ctx_id="constructor:ArrayBlockingQueue-int-boolean-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:add-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><a start_ctx_id="method:add-E-"/><a name="add-E-"/><ul class="blockList"><li class="blockList"><h4>add</h4><pre>public boolean add(<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a> e)</pre><div class="block">Inserts the specified element at the tail of this queue if it is possible to do so immediately without exceeding the queue's capacity, returning <code>true</code> upon success and throwing an <code>IllegalStateException</code> if this queue is full.                                   </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#add-E-">add</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/concurrent/BlockingQueue.html#add-E-">add</a></code> in interface <code><a href="../../../java/util/concurrent/BlockingQueue.html" title="interface in java.util.concurrent">BlockingQueue</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Queue.html#add-E-">add</a></code> in interface <code><a href="../../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/util/AbstractQueue.html#add-E-">add</a></code> in class <code><a href="../../../java/util/AbstractQueue.html" title="class in java.util">AbstractQueue</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> (as specified by <a href="../../../java/util/Collection.html#add-E-"><code>Collection.add(E)</code></a>)     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IllegalStateException.html" title="class in java.lang">IllegalStateException</a></code> - if this queue is full       </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null        </dd>       </dl></li></ul> <a name="offer-java.lang.Object-"/><a end_ctx_id="method:add-E-"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:offer-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:offer-E-"/><a name="offer-E-"/><ul class="blockList"><li class="blockList"><h4>offer</h4><pre>public boolean offer(<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a> e)</pre><div class="block">Inserts the specified element at the tail of this queue if it is possible to do so immediately without exceeding the queue's capacity, returning <code>true</code> upon success and <code>false</code> if this queue is full. This method is generally preferable to method <a href="../../../java/util/concurrent/ArrayBlockingQueue.html#add-E-"><code>add(E)</code></a>, which can fail to insert an element only by throwing an exception.                                                     </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/concurrent/BlockingQueue.html#offer-E-">offer</a></code> in interface <code><a href="../../../java/util/concurrent/BlockingQueue.html" title="interface in java.util.concurrent">BlockingQueue</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Queue.html#offer-E-">offer</a></code> in interface <code><a href="../../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if the element was added to this queue, else <code>false</code>           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null        </dd>     </dl></li></ul> <a name="put-java.lang.Object-"/><a end_ctx_id="method:offer-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:put-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:put-E-"/><a name="put-E-"/><ul class="blockList"><li class="blockList"><h4>put</h4><pre>public void put(<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a> e)
         throws <a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></pre><div class="block">Inserts the specified element at the tail of this queue, waiting for space to become available if the queue is full.                    </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/concurrent/BlockingQueue.html#put-E-">put</a></code> in interface <code><a href="../../../java/util/concurrent/BlockingQueue.html" title="interface in java.util.concurrent">BlockingQueue</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></code> - if interrupted while waiting      </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null        </dd>   </dl></li></ul> <a name="offer-java.lang.Object-long-java.util.concurrent.TimeUnit-"/><a end_ctx_id="method:put-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:offer-E-long-java.util.concurrent.TimeUnit- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:offer-E-long-java.util.concurrent.TimeUnit-"/><a name="offer-E-long-java.util.concurrent.TimeUnit-"/><ul class="blockList"><li class="blockList"><h4>offer</h4><pre>public boolean offer(<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a> e,
                     long timeout,
                     <a href="../../../java/util/concurrent/TimeUnit.html" title="enum in java.util.concurrent">TimeUnit</a> unit)
              throws <a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></pre><div class="block">Inserts the specified element at the tail of this queue, waiting up to the specified wait time for space to become available if the queue is full.                          </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/concurrent/BlockingQueue.html#offer-E-long-java.util.concurrent.TimeUnit-">offer</a></code> in interface <code><a href="../../../java/util/concurrent/BlockingQueue.html" title="interface in java.util.concurrent">BlockingQueue</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd><dd> <code>timeout</code> - how long to wait before giving up, in units of <code>unit</code>             </dd><dd> <code>unit</code> - a <code>TimeUnit</code> determining how to interpret the <code>timeout</code> parameter           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if successful, or <code>false</code> if the specified waiting time elapses before space is available               </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></code> - if interrupted while waiting      </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null        </dd>    </dl></li></ul> <a end_ctx_id="method:offer-E-long-java.util.concurrent.TimeUnit-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:poll-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:poll--"/><a name="poll--"/><ul class="blockList"><li class="blockList"><h4>poll</h4><pre>public <a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a> poll()</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../../java/util/Queue.html#poll--">Queue</a></code>   </span> </div><div class="block">Retrieves and removes the head of this queue, or returns <code>null</code> if this queue is empty.               </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Queue.html#poll--">poll</a></code> in interface <code><a href="../../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of this queue, or <code>null</code> if this queue is empty           </dd>  </dl></li></ul> <a end_ctx_id="method:poll--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:take-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:take--"/><a name="take--"/><ul class="blockList"><li class="blockList"><h4>take</h4><pre>public <a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a> take()
       throws <a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../../java/util/concurrent/BlockingQueue.html#take--">BlockingQueue</a></code>   </span> </div><div class="block">Retrieves and removes the head of this queue, waiting if necessary until an element becomes available.               </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/concurrent/BlockingQueue.html#take--">take</a></code> in interface <code><a href="../../../java/util/concurrent/BlockingQueue.html" title="interface in java.util.concurrent">BlockingQueue</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of this queue    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></code> - if interrupted while waiting      </dd>   </dl></li></ul> <a end_ctx_id="method:take--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:poll-long-java.util.concurrent.TimeUnit- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:poll-long-java.util.concurrent.TimeUnit-"/><a name="poll-long-java.util.concurrent.TimeUnit-"/><ul class="blockList"><li class="blockList"><h4>poll</h4><pre>public <a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a> poll(long timeout,
              <a href="../../../java/util/concurrent/TimeUnit.html" title="enum in java.util.concurrent">TimeUnit</a> unit)
       throws <a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../../java/util/concurrent/BlockingQueue.html#poll-long-java.util.concurrent.TimeUnit-">BlockingQueue</a></code>   </span> </div><div class="block">Retrieves and removes the head of this queue, waiting up to the specified wait time if necessary for an element to become available.                      </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/concurrent/BlockingQueue.html#poll-long-java.util.concurrent.TimeUnit-">poll</a></code> in interface <code><a href="../../../java/util/concurrent/BlockingQueue.html" title="interface in java.util.concurrent">BlockingQueue</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>timeout</code> - how long to wait before giving up, in units of <code>unit</code>             </dd><dd> <code>unit</code> - a <code>TimeUnit</code> determining how to interpret the <code>timeout</code> parameter           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of this queue, or <code>null</code> if the specified waiting time elapses before an element is available                 </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/InterruptedException.html" title="class in java.lang">InterruptedException</a></code> - if interrupted while waiting      </dd>    </dl></li></ul> <a end_ctx_id="method:poll-long-java.util.concurrent.TimeUnit-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:peek-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:peek--"/><a name="peek--"/><ul class="blockList"><li class="blockList"><h4>peek</h4><pre>public <a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a> peek()</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../../java/util/Queue.html#peek--">Queue</a></code>   </span> </div><div class="block">Retrieves, but does not remove, the head of this queue, or returns <code>null</code> if this queue is empty.                 </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Queue.html#peek--">peek</a></code> in interface <code><a href="../../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of this queue, or <code>null</code> if this queue is empty           </dd>  </dl></li></ul> <a end_ctx_id="method:peek--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:size-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:size--"/><a name="size--"/><ul class="blockList"><li class="blockList"><h4>size</h4><pre>public int size()</pre><div class="block">Returns the number of elements in this queue.       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#size--">size</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/AbstractCollection.html#size--">size</a></code> in class <code><a href="../../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the number of elements in this queue      </dd>   </dl></li></ul> <a end_ctx_id="method:size--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:remainingCapacity-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:remainingCapacity--"/><a name="remainingCapacity--"/><ul class="blockList"><li class="blockList"><h4>remainingCapacity</h4><pre>public int remainingCapacity()</pre><div class="block">Returns the number of additional elements that this queue can ideally (in the absence of memory or resource constraints) accept without blocking. This is always equal to the initial capacity of this queue less the current <code>size</code> of this queue.<p>Note that you <em>cannot</em> always tell if an attempt to insert an element will succeed by inspecting <code>remainingCapacity</code> because it may be the case that another thread is about to insert or remove an element.                                  </p>                                       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/concurrent/BlockingQueue.html#remainingCapacity--">remainingCapacity</a></code> in interface <code><a href="../../../java/util/concurrent/BlockingQueue.html" title="interface in java.util.concurrent">BlockingQueue</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the remaining capacity  </dd>  </dl></li></ul> <a end_ctx_id="method:remainingCapacity--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:remove-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:remove-java.lang.Object-"/><a name="remove-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>remove</h4><pre>public boolean remove(<a href="../../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Removes a single instance of the specified element from this queue, if it is present. More formally, removes an element <code>e</code> such that <code>o.equals(e)</code>, if this queue contains one or more such elements. Returns <code>true</code> if this queue contained the specified element (or equivalently, if this queue changed as a result of the call).<p>Removal of interior elements in circular array based queues is an intrinsically slow and disruptive operation, so should be undertaken only in exceptional circumstances, ideally only when the queue is known not to be accessible by other threads.                                     </p>                                                     </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#remove-java.lang.Object-">remove</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/concurrent/BlockingQueue.html#remove-java.lang.Object-">remove</a></code> in interface <code><a href="../../../java/util/concurrent/BlockingQueue.html" title="interface in java.util.concurrent">BlockingQueue</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/util/AbstractCollection.html#remove-java.lang.Object-">remove</a></code> in class <code><a href="../../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element to be removed from this queue, if present           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this queue changed as a result of the call           </dd>     </dl></li></ul> <a end_ctx_id="method:remove-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:contains-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:contains-java.lang.Object-"/><a name="contains-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>contains</h4><pre>public boolean contains(<a href="../../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Returns <code>true</code> if this queue contains the specified element. More formally, returns <code>true</code> if and only if this queue contains at least one element <code>e</code> such that <code>o.equals(e)</code>.                           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#contains-java.lang.Object-">contains</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/concurrent/BlockingQueue.html#contains-java.lang.Object-">contains</a></code> in interface <code><a href="../../../java/util/concurrent/BlockingQueue.html" title="interface in java.util.concurrent">BlockingQueue</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/util/AbstractCollection.html#contains-java.lang.Object-">contains</a></code> in class <code><a href="../../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - object to be checked for containment in this queue           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this queue contains the specified element        </dd>     </dl></li></ul> <a end_ctx_id="method:contains-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toArray-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toArray--"/><a name="toArray--"/><ul class="blockList"><li class="blockList"><h4>toArray</h4><pre>public <a href="../../../java/lang/Object.html" title="class in java.lang">Object</a>[] toArray()</pre><div class="block">Returns an array containing all of the elements in this queue, in proper sequence.<p>The returned array will be "safe" in that no references to it are maintained by this queue. (In other words, this method must allocate a new array). The caller is thus free to modify the returned array.                                    </p><p>This method acts as bridge between array-based and collection-based APIs.         </p>             </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#toArray--">toArray</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/util/AbstractCollection.html#toArray--">toArray</a></code> in class <code><a href="../../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an array containing all of the elements in this queue         </dd>   </dl></li></ul> <a name="toArray-java.lang.Object:A-"/><a end_ctx_id="method:toArray--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toArray-T:A- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toArray-T:A-"/><a name="toArray-T:A-"/><ul class="blockList"><li class="blockList"><h4>toArray</h4><pre>public &lt;T&gt; T[] toArray(T[] a)</pre><div class="block">Returns an array containing all of the elements in this queue, in proper sequence; the runtime type of the returned array is that of the specified array. If the queue fits in the specified array, it is returned therein. Otherwise, a new array is allocated with the runtime type of the specified array and the size of this queue.<p>If this queue fits in the specified array with room to spare (i.e., the array has more elements than this queue), the element in the array immediately following the end of the queue is set to <code>null</code>.                                    </p><p>Like the <a href="../../../java/util/concurrent/ArrayBlockingQueue.html#toArray--"><code>toArray()</code></a> method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.                                      </p><p>Suppose <code>x</code> is a queue known to contain only strings. The following code can be used to dump the queue into a newly allocated array of <code>String</code>:<pre> 
<code> String[] y = x.toArray(new String[0]);</code></pre> Note that <code>toArray(new Object[0]) </code> is identical in function to <code>toArray()</code>.                                   </p>                                                          </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#toArray-T:A-">toArray</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/util/AbstractCollection.html#toArray-T:A-">toArray</a></code> in class <code><a href="../../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Type Parameters: </span>   </dt><dd> <code>T</code> - the runtime type of the array to contain the collection            </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>a</code> - the array into which the elements of the queue are to be stored, if it is big enough; otherwise, a new array of the same runtime type is allocated for this purpose                                  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an array containing all of the elements in this queue         </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/ArrayStoreException.html" title="class in java.lang">ArrayStoreException</a></code> - if the runtime type of the specified array is not a supertype of the runtime type of every element in this queue                        </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified array is null        </dd>      </dl></li></ul> <a end_ctx_id="method:toArray-T:A-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toString-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toString--"/><a name="toString--"/><ul class="blockList"><li class="blockList"><h4>toString</h4><pre>public <a href="../../../java/lang/String.html" title="class in java.lang">String</a> toString()</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from class: <code><a href="../../../java/util/AbstractCollection.html#toString--">AbstractCollection</a></code>   </span> </div><div class="block">Returns a string representation of this collection. The string representation consists of a list of the collection's elements in the order they are returned by its iterator, enclosed in square brackets (<tt>"[]"</tt>). Adjacent elements are separated by the characters <tt>", " </tt> (comma and space). Elements are converted to strings as by <a href="../../../java/lang/String.html#valueOf-java.lang.Object-"><code>String.valueOf(Object)</code></a>.                                                  </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/util/AbstractCollection.html#toString--">toString</a></code> in class <code><a href="../../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a string representation of this collection     </dd>  </dl></li></ul> <a end_ctx_id="method:toString--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:clear-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:clear--"/><a name="clear--"/><ul class="blockList"><li class="blockList"><h4>clear</h4><pre>public void clear()</pre><div class="block">Atomically removes all of the elements from this queue. The queue will be empty after this call returns.                 </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#clear--">clear</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/util/AbstractQueue.html#clear--">clear</a></code> in class <code><a href="../../../java/util/AbstractQueue.html" title="class in java.util">AbstractQueue</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd>  </dl></li></ul> <a end_ctx_id="method:clear--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:drainTo-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:drainTo-java.util.Collection-"/><a name="drainTo-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>drainTo</h4><pre>public int drainTo(<a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;? super <a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt; c)</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../../java/util/concurrent/BlockingQueue.html#drainTo-java.util.Collection-">BlockingQueue</a></code>   </span> </div><div class="block">Removes all available elements from this queue and adds them to the given collection. This operation may be more efficient than repeatedly polling this queue. A failure encountered while attempting to add elements to collection <code>c</code> may result in elements being in neither, either or both collections when the associated exception is thrown. Attempts to drain a queue to itself result in <code>IllegalArgumentException</code>. Further, the behavior of this operation is undefined if the specified collection is modified while the operation is in progress.                                                                                  </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/concurrent/BlockingQueue.html#drainTo-java.util.Collection-">drainTo</a></code> in interface <code><a href="../../../java/util/concurrent/BlockingQueue.html" title="interface in java.util.concurrent">BlockingQueue</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - the collection to transfer elements into        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the number of elements transferred    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/UnsupportedOperationException.html" title="class in java.lang">UnsupportedOperationException</a></code> - if addition of elements is not supported by the specified collection             </dd><dd> <code><a href="../../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of an element of this queue prevents it from being added to the specified collection                    </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified collection is null        </dd><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if the specified collection is this queue, or some property of an element of this queue prevents it from being added to the specified collection                           </dd>    </dl></li></ul> <a end_ctx_id="method:drainTo-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:drainTo-java.util.Collection-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:drainTo-java.util.Collection-int-"/><a name="drainTo-java.util.Collection-int-"/><ul class="blockList"><li class="blockList"><h4>drainTo</h4><pre>public int drainTo(<a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;? super <a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt; c,
                   int maxElements)</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../../java/util/concurrent/BlockingQueue.html#drainTo-java.util.Collection-int-">BlockingQueue</a></code>   </span> </div><div class="block">Removes at most the given number of available elements from this queue and adds them to the given collection. A failure encountered while attempting to add elements to collection <code>c</code> may result in elements being in neither, either or both collections when the associated exception is thrown. Attempts to drain a queue to itself result in <code>IllegalArgumentException</code>. Further, the behavior of this operation is undefined if the specified collection is modified while the operation is in progress.                                                                            </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/concurrent/BlockingQueue.html#drainTo-java.util.Collection-int-">drainTo</a></code> in interface <code><a href="../../../java/util/concurrent/BlockingQueue.html" title="interface in java.util.concurrent">BlockingQueue</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - the collection to transfer elements into        </dd><dd> <code>maxElements</code> - the maximum number of elements to transfer         </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the number of elements transferred    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/UnsupportedOperationException.html" title="class in java.lang">UnsupportedOperationException</a></code> - if addition of elements is not supported by the specified collection             </dd><dd> <code><a href="../../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of an element of this queue prevents it from being added to the specified collection                    </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified collection is null        </dd><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if the specified collection is this queue, or some property of an element of this queue prevents it from being added to the specified collection                           </dd>    </dl></li></ul> <a end_ctx_id="method:drainTo-java.util.Collection-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:iterator-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:iterator--"/><a name="iterator--"/><ul class="blockList"><li class="blockList"><h4>iterator</h4><pre>public <a href="../../../java/util/Iterator.html" title="interface in java.util">Iterator</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt; iterator()</pre><div class="block">Returns an iterator over the elements in this queue in proper sequence. The elements will be returned in order from first (head) to last (tail).<p>The returned iterator is <a href="package-summary.html#Weakly"><i>weakly consistent </i></a>.    </p>                        </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/lang/Iterable.html#iterator--">iterator</a></code> in interface <code><a href="../../../java/lang/Iterable.html" title="interface in java.lang">Iterable</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#iterator--">iterator</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/AbstractCollection.html#iterator--">iterator</a></code> in class <code><a href="../../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an iterator over the elements in this queue in proper sequence          </dd>    </dl></li></ul> <a end_ctx_id="method:iterator--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:spliterator-- [CHANGED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#EEEEEE" colspan="2"> <a start_ctx_id="method:spliterator--"/><a name="spliterator--"/><ul class="blockListLast"><li class="blockList"><h4>spliterator</h4><pre>public <a href="../../../java/util/Spliterator.html" title="interface in java.util">Spliterator</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt; spliterator()</pre><div class="block">Returns a <a href="../../../java/util/Spliterator.html" title="interface in java.util"><code>Spliterator</code></a> over the elements in this queue.<p>The returned spliterator is <a href="package-summary.html#Weakly"><i>weakly consistent </i></a>.    </p><p>The <code>Spliterator</code> reports <a href="../../../java/util/Spliterator.html#CONCURRENT"><code>Spliterator.CONCURRENT</code></a>, <a href="../../../java/util/Spliterator.html#ORDERED"><code>Spliterator.ORDERED</code></a>, and <a href="../../../java/util/Spliterator.html#NONNULL"><code>Spliterator.NONNULL</code></a>.      </p>        </div><dl> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../../java/lang/Iterable.html#spliterator--"><span class="diff-html-added">spliterator</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../../java/lang/Iterable.html" title="interface in java.lang"><span class="diff-html-added">Iterable</span></a><span class="diff-html-added">&lt;</span><a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#spliterator--"><span class="diff-html-added">spliterator</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../../java/util/Collection.html" title="interface in java.util"><span class="diff-html-added">Collection</span></a><span class="diff-html-added">&lt;</span><a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="simpleTagLabel">Implementation Note: </span>   </dt><dd>The <code>Spliterator</code> implements <code>trySplit</code> to permit limited parallelism.       </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a <code>Spliterator</code> over the elements in this queue       </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.8</dd>     </dl></li></ul> <a end_ctx_id="method:spliterator--"/>  </td></tr><tr valign="top"><td bgcolor="#CCCCCC" colspan="1"> <a start_ctx_id="method:spliterator--"/><a name="spliterator--"/><ul class="blockListLast"><li class="blockList"><h4>spliterator</h4><pre>public <a href="../../../java/util/Spliterator.html" title="interface in java.util">Spliterator</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt; spliterator()</pre><div class="block">Returns a <a href="../../../java/util/Spliterator.html" title="interface in java.util"><code>Spliterator</code></a> over the elements in this queue.<p>The returned spliterator is <a href="package-summary.html#Weakly"><i>weakly consistent </i></a>.    </p><p>The <code>Spliterator</code> reports <a href="../../../java/util/Spliterator.html#CONCURRENT"><code>Spliterator.CONCURRENT</code></a>, <a href="../../../java/util/Spliterator.html#ORDERED"><code>Spliterator.ORDERED</code></a>, and <a href="../../../java/util/Spliterator.html#NONNULL"><code>Spliterator.NONNULL</code></a>.      </p>        </div><dl> <dt> <span class="simpleTagLabel">Implementation Note: </span>   </dt><dd>The <code>Spliterator</code> implements <code>trySplit</code> to permit limited parallelism.       </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a <code>Spliterator</code> over the elements in this queue       </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.8</dd>   </dl></li></ul> <a end_ctx_id="method:spliterator--"/>  </td><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:spliterator--"/><a name="spliterator--"/><ul class="blockListLast"><li class="blockList"><h4>spliterator</h4><pre>public <a href="../../../java/util/Spliterator.html" title="interface in java.util">Spliterator</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt; spliterator()</pre><div class="block">Returns a <a href="../../../java/util/Spliterator.html" title="interface in java.util"><code>Spliterator</code></a> over the elements in this queue.<p>The returned spliterator is <a href="package-summary.html#Weakly"><i>weakly consistent </i></a>.    </p><p>The <code>Spliterator</code> reports <a href="../../../java/util/Spliterator.html#CONCURRENT"><code>Spliterator.CONCURRENT</code></a>, <a href="../../../java/util/Spliterator.html#ORDERED"><code>Spliterator.ORDERED</code></a>, and <a href="../../../java/util/Spliterator.html#NONNULL"><code>Spliterator.NONNULL</code></a>.      </p>        </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/lang/Iterable.html#spliterator--">spliterator</a></code> in interface <code><a href="../../../java/lang/Iterable.html" title="interface in java.lang">Iterable</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#spliterator--">spliterator</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/ArrayBlockingQueue.html" title="type parameter in ArrayBlockingQueue">E</a>&gt;</code>  </dd> <dt> <span class="simpleTagLabel">Implementation Note: </span>   </dt><dd>The <code>Spliterator</code> implements <code>trySplit</code> to permit limited parallelism.       </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a <code>Spliterator</code> over the elements in this queue       </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.8</dd>     </dl></li></ul> <a end_ctx_id="method:spliterator--"/>  </td></tr></table></td></tr></table></diff></diffreport>