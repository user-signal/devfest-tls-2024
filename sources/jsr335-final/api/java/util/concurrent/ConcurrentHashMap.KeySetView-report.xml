<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:ConcurrentHashMap.KeySetView [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:ConcurrentHashMap.KeySetView"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../../java/io/Serializable.html" title="interface in java.io">Serializable</a>, <a href="../../../java/lang/Iterable.html" title="interface in java.lang">Iterable</a>&lt;K&gt;, <a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;K&gt;, <a href="../../../java/util/Set.html" title="interface in java.util">Set</a>&lt;K&gt;    </dd> </dl><dl> <dt>Enclosing class: </dt><dd> <a href="../../../java/util/concurrent/ConcurrentHashMap.html" title="class in java.util.concurrent">ConcurrentHashMap</a>&lt;<a href="../../../java/util/concurrent/ConcurrentHashMap.html" title="type parameter in ConcurrentHashMap">K</a>,<a href="../../../java/util/concurrent/ConcurrentHashMap.html" title="type parameter in ConcurrentHashMap">V</a>&gt; </dd> </dl> <hr/> <br/><pre>public static class <span class="typeNameLabel">ConcurrentHashMap.KeySetView&lt;K,V&gt;</span>
extends <a href="../../../java/lang/Object.html" title="class in java.lang">Object</a>
implements <a href="../../../java/util/Set.html" title="interface in java.util">Set</a>&lt;K&gt;, <a href="../../../java/io/Serializable.html" title="interface in java.io">Serializable</a></pre><div class="block">A view of a ConcurrentHashMap as a <a href="../../../java/util/Set.html" title="interface in java.util"><code>Set</code></a> of keys, in which additions may optionally be enabled by mapping to a common value. This class cannot be directly instantiated. See <a href="../../../java/util/concurrent/ConcurrentHashMap.html#keySet--"><code>keySet()</code></a>, <a href="../../../java/util/concurrent/ConcurrentHashMap.html#keySet-V-"><code>keySet(V)</code></a>, <a href="../../../java/util/concurrent/ConcurrentHashMap.html#newKeySet--"><code>newKeySet()</code></a>, <a href="../../../java/util/concurrent/ConcurrentHashMap.html#newKeySet-int-"><code>newKeySet(int)</code></a>.                                 </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.8</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../serialized-form.html#java.util.concurrent.ConcurrentHashMap.KeySetView">Serialized Form </a> </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:ConcurrentHashMap.KeySetView"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getMappedValue-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getMappedValue--"/><a name="getMappedValue--"/><ul class="blockList"><li class="blockList"><h4>getMappedValue</h4><pre>public <a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">V</a> getMappedValue()</pre><div class="block">Returns the default mapped value for additions, or <code>null</code> if additions are not supported.             </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the default mapped value for additions, or <code>null</code> if not supported          </dd> </dl></li></ul> <a end_ctx_id="method:getMappedValue--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:contains-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:contains-java.lang.Object-"/><a name="contains-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>contains</h4><pre>public boolean contains(<a href="../../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Returns <tt>true</tt> if this collection contains the specified element. More formally, returns <tt>true</tt> if and only if this collection contains at least one element <tt>e</tt> such that <tt>(o==null ? e==null : o.equals(e))</tt>.                           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#contains-java.lang.Object-">contains</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Set.html#contains-java.lang.Object-">contains</a></code> in interface <code><a href="../../../java/util/Set.html" title="interface in java.util">Set</a>&lt;<a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element whose presence in this collection is to be tested            </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this collection contains the specified element        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified key is null        </dd>     </dl></li></ul> <a end_ctx_id="method:contains-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:remove-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:remove-java.lang.Object-"/><a name="remove-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>remove</h4><pre>public boolean remove(<a href="../../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Removes the key from this map view, by removing the key (and its corresponding value) from the backing map. This method does nothing if the key is not in the map.                              </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#remove-java.lang.Object-">remove</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Set.html#remove-java.lang.Object-">remove</a></code> in interface <code><a href="../../../java/util/Set.html" title="interface in java.util">Set</a>&lt;<a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - the key to be removed from the backing map           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if the backing map contained the specified key         </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified key is null        </dd>     </dl></li></ul> <a end_ctx_id="method:remove-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:iterator-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:iterator--"/><a name="iterator--"/><ul class="blockList"><li class="blockList"><h4>iterator</h4><pre>public <a href="../../../java/util/Iterator.html" title="interface in java.util">Iterator</a>&lt;<a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt; iterator()</pre><div class="block">Returns an iterator over the elements in this collection.<p>The returned iterator is <a href="package-summary.html#Weakly"><i>weakly consistent </i></a>.    </p>        </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/lang/Iterable.html#iterator--">iterator</a></code> in interface <code><a href="../../../java/lang/Iterable.html" title="interface in java.lang">Iterable</a>&lt;<a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#iterator--">iterator</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Set.html#iterator--">iterator</a></code> in interface <code><a href="../../../java/util/Set.html" title="interface in java.util">Set</a>&lt;<a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an iterator over the keys of the backing map        </dd>    </dl></li></ul> <a name="add-java.lang.Object-"/><a end_ctx_id="method:iterator--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:add-K- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:add-K-"/><a name="add-K-"/><ul class="blockList"><li class="blockList"><h4>add</h4><pre>public boolean add(<a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a> e)</pre><div class="block">Adds the specified key to this set view by mapping the key to the default mapped value in the backing map, if defined.                      </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#add-E-">add</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Set.html#add-E-">add</a></code> in interface <code><a href="../../../java/util/Set.html" title="interface in java.util">Set</a>&lt;<a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - key to be added      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this set changed as a result of the call           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified key is null        </dd><dd> <code><a href="../../../java/lang/UnsupportedOperationException.html" title="class in java.lang">UnsupportedOperationException</a></code> - if no default mapped value for additions was provided           </dd>     </dl></li></ul> <a end_ctx_id="method:add-K-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:addAll-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:addAll-java.util.Collection-"/><a name="addAll-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>addAll</h4><pre>public boolean addAll(<a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;? extends <a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt; c)</pre><div class="block">Adds all of the elements in the specified collection to this set, as if by calling <a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html#add-K-"><code>add(K)</code></a> on each one.                   </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#addAll-java.util.Collection-">addAll</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Set.html#addAll-java.util.Collection-">addAll</a></code> in interface <code><a href="../../../java/util/Set.html" title="interface in java.util">Set</a>&lt;<a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - the elements to be inserted into this set          </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this set changed as a result of the call           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the collection or any of its elements are <code>null</code>            </dd><dd> <code><a href="../../../java/lang/UnsupportedOperationException.html" title="class in java.lang">UnsupportedOperationException</a></code> - if no default mapped value for additions was provided           </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/util/Set.html#add-E-"><code>Set.add(Object)</code></a> </dd>      </dl></li></ul> <a end_ctx_id="method:addAll-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:hashCode-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:hashCode--"/><a name="hashCode--"/><ul class="blockList"><li class="blockList"><h4>hashCode</h4><pre>public int hashCode()</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from class: <code><a href="../../../java/lang/Object.html#hashCode--">Object</a></code>   </span> </div><div class="block">Returns a hash code value for the object. This method is supported for the benefit of hash tables such as those provided by <a href="../../../java/util/HashMap.html" title="class in java.util"><code>HashMap</code></a>.<p> The general contract of <code>hashCode</code> is:<ul><li>Whenever it is invoked on the same object more than once during an execution of a Java application, the <code>hashCode</code> method must consistently return the same integer, provided no information used in <code>equals</code> comparisons on the object is modified. This integer need not remain consistent from one execution of an application to another execution of the same application.                                                         </li><li>If two objects are equal according to the <code>equals(Object)</code> method, then calling the <code>hashCode</code> method on each of the two objects must produce the same integer result.                          </li><li>It is <em>not</em> required that if two objects are unequal according to the <a href="../../../java/lang/Object.html#equals-java.lang.Object-"><code>Object.equals(java.lang.Object)</code></a> method, then calling the <code>hashCode</code> method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables.                                                   </li></ul>      </p><p> As much as is reasonably practical, the hashCode method defined by class <code>Object</code> does return distinct integers for distinct objects. (This is typically implemented by converting the internal address of the object into an integer, but this implementation technique is not required by the Java™ programming language.)                                               </p>                       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#hashCode--">hashCode</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Set.html#hashCode--">hashCode</a></code> in interface <code><a href="../../../java/util/Set.html" title="interface in java.util">Set</a>&lt;<a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/lang/Object.html#hashCode--">hashCode</a></code> in class <code><a href="../../../java/lang/Object.html" title="class in java.lang">Object</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a hash code value for this object.      </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/lang/Object.html#equals-java.lang.Object-"><code>Object.equals(java.lang.Object)</code></a>, <a href="../../../java/lang/System.html#identityHashCode-java.lang.Object-"><code>System.identityHashCode(java.lang.Object)</code></a>  </dd>     </dl></li></ul> <a end_ctx_id="method:hashCode--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:equals-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:equals-java.lang.Object-"/><a name="equals-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>equals</h4><pre>public boolean equals(<a href="../../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from class: <code><a href="../../../java/lang/Object.html#equals-java.lang.Object-">Object</a></code>   </span> </div><div class="block">Indicates whether some other object is "equal to" this one.<p> The <code>equals</code> method implements an equivalence relation on non-null object references:<ul><li>It is <i>reflexive</i>: for any non-null reference value <code>x</code>, <code>x.equals(x)</code> should return <code>true</code>.            </li><li>It is <i>symmetric</i>: for any non-null reference values <code>x</code> and <code>y</code>, <code>x.equals(y)</code> should return <code>true</code> if and only if <code>y.equals(x)</code> returns <code>true</code>.                     </li><li>It is <i>transitive</i>: for any non-null reference values <code>x</code>, <code>y</code>, and <code>z</code>, if <code>x.equals(y)</code> returns <code>true</code> and <code>y.equals(z)</code> returns <code>true</code>, then <code>x.equals(z)</code> should return <code>true</code>.                        </li><li>It is <i>consistent</i>: for any non-null reference values <code>x</code> and <code>y</code>, multiple invocations of <code>x.equals(y)</code> consistently return <code>true</code> or consistently return <code>false</code>, provided no information used in <code>equals</code> comparisons on the objects is modified.                                 </li><li>For any non-null reference value <code>x</code>, <code>x.equals(null)</code> should return <code>false</code>.         </li></ul>           </p><p> The <code>equals</code> method for class <code>Object</code> implements the most discriminating possible equivalence relation on objects; that is, for any non-null reference values <code>x</code> and <code>y</code>, this method returns <code>true</code> if and only if <code>x</code> and <code>y</code> refer to the same object (<code>x == y  </code> has the value <code>true</code>).                                              </p><p> Note that it is generally necessary to override the <code>hashCode</code> method whenever this method is overridden, so as to maintain the general contract for the <code>hashCode</code> method, which states that equal objects must have equal hash codes.                                     </p>         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#equals-java.lang.Object-">equals</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Set.html#equals-java.lang.Object-">equals</a></code> in interface <code><a href="../../../java/util/Set.html" title="interface in java.util">Set</a>&lt;<a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/lang/Object.html#equals-java.lang.Object-">equals</a></code> in class <code><a href="../../../java/lang/Object.html" title="class in java.lang">Object</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - the reference object with which to compare.         </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this object is the same as the obj argument; <code>false</code> otherwise.             </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/lang/Object.html#hashCode--"><code>Object.hashCode()</code></a>, <a href="../../../java/util/HashMap.html" title="class in java.util"><code>HashMap</code></a>  </dd>      </dl></li></ul> <a end_ctx_id="method:equals-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:spliterator-- [CHANGED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#EEEEEE" colspan="2"> <a start_ctx_id="method:spliterator--"/><a name="spliterator--"/><ul class="blockList"><li class="blockList"><h4>spliterator</h4><pre>public <a href="../../../java/util/Spliterator.html" title="interface in java.util">Spliterator</a>&lt;<a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt; spliterator()</pre><div class="block"> <span class="descfrmTypeLabel"><span class="diff-html-added">Description</span> <span class="diff-html-added">copied</span> <span class="diff-html-added">from</span> <span class="diff-html-added">interface:</span> <code><a href="../../../java/util/Set.html#spliterator--"><span class="diff-html-added">Set</span></a></code>   </span> </div><div class="block"><span class="diff-html-added">Creates</span> <span class="diff-html-added">a</span> <code><span class="diff-html-added">Spliterator</span></code> <span class="diff-html-added">over</span> <span class="diff-html-added">the</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">in</span> <span class="diff-html-added">this</span> <span class="diff-html-added">set.</span><p><span class="diff-html-added">The</span> <code><span class="diff-html-added">Spliterator</span></code> <span class="diff-html-added">reports</span> <a href="../../../java/util/Spliterator.html#DISTINCT"><code><span class="diff-html-added">Spliterator.DISTINCT</span></code></a><span class="diff-html-added">.</span> <span class="diff-html-added">Implementations</span> <span class="diff-html-added">should</span> <span class="diff-html-added">document</span> <span class="diff-html-added">the</span> <span class="diff-html-added">reporting</span> <span class="diff-html-added">of</span> <span class="diff-html-added">additional</span> <span class="diff-html-added">characteristic</span> <span class="diff-html-added">values.</span>            </p>        </div><dl> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../../java/lang/Iterable.html#spliterator--"><span class="diff-html-added">spliterator</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../../java/lang/Iterable.html" title="interface in java.lang"><span class="diff-html-added">Iterable</span></a><span class="diff-html-added">&lt;</span><a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView"><span class="diff-html-added">K</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#spliterator--"><span class="diff-html-added">spliterator</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../../java/util/Collection.html" title="interface in java.util"><span class="diff-html-added">Collection</span></a><span class="diff-html-added">&lt;</span><a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView"><span class="diff-html-added">K</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../../java/util/Set.html#spliterator--"><span class="diff-html-added">spliterator</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../../java/util/Set.html" title="interface in java.util"><span class="diff-html-added">Set</span></a><span class="diff-html-added">&lt;</span><a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView"><span class="diff-html-added">K</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="returnLabel"><span class="diff-html-added">Returns:</span></span>   </dt><dd><span class="diff-html-added">a</span> <code><span class="diff-html-added">Spliterator</span></code> <span class="diff-html-added">over</span> <span class="diff-html-added">the</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">in</span> <span class="diff-html-added">this</span> <span class="diff-html-added">set</span>       </dd>    </dl></li></ul> <a end_ctx_id="method:spliterator--"/>  </td></tr><tr valign="top"><td bgcolor="#CCCCCC" colspan="1"> <a start_ctx_id="method:spliterator--"/><a name="spliterator--"/><ul class="blockList"><li class="blockList"><h4>spliterator</h4><pre>public <a href="../../../java/util/Spliterator.html" title="interface in java.util">Spliterator</a>&lt;<a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt; spliterator()</pre></li></ul> <a end_ctx_id="method:spliterator--"/>  </td><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:spliterator--"/><a name="spliterator--"/><ul class="blockList"><li class="blockList"><h4>spliterator</h4><pre>public <a href="../../../java/util/Spliterator.html" title="interface in java.util">Spliterator</a>&lt;<a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt; spliterator()</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../../java/util/Set.html#spliterator--">Set</a></code>   </span> </div><div class="block">Creates a <code>Spliterator</code> over the elements in this set.<p>The <code>Spliterator</code> reports <a href="../../../java/util/Spliterator.html#DISTINCT"><code>Spliterator.DISTINCT</code></a>. Implementations should document the reporting of additional characteristic values.            </p>        </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/lang/Iterable.html#spliterator--">spliterator</a></code> in interface <code><a href="../../../java/lang/Iterable.html" title="interface in java.lang">Iterable</a>&lt;<a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#spliterator--">spliterator</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Set.html#spliterator--">spliterator</a></code> in interface <code><a href="../../../java/util/Set.html" title="interface in java.util">Set</a>&lt;<a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a <code>Spliterator</code> over the elements in this set       </dd>    </dl></li></ul> <a end_ctx_id="method:spliterator--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:forEach-java.util.function.Consumer- [CHANGED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#EEEEEE" colspan="2"> <a start_ctx_id="method:forEach-java.util.function.Consumer-"/><a name="forEach-java.util.function.Consumer-"/><ul class="blockList"><li class="blockList"><h4>forEach</h4><pre>public void forEach(<a href="../../../java/util/function/Consumer.html" title="interface in java.util.function">Consumer</a>&lt;? super <a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt; action)</pre><div class="block"> <span class="descfrmTypeLabel"><span class="diff-html-added">Description</span> <span class="diff-html-added">copied</span> <span class="diff-html-added">from</span> <span class="diff-html-added">interface:</span> <code><a href="../../../java/lang/Iterable.html#forEach-java.util.function.Consumer-"><span class="diff-html-added">Iterable</span></a></code>   </span> </div><div class="block"><span class="diff-html-added">Performs</span> <span class="diff-html-added">the</span> <span class="diff-html-added">given</span> <span class="diff-html-added">action</span> <span class="diff-html-added">for</span> <span class="diff-html-added">each</span> <span class="diff-html-added">element</span> <span class="diff-html-added">of</span> <span class="diff-html-added">the</span> <code><span class="diff-html-added">Iterable</span></code> <span class="diff-html-added">until</span> <span class="diff-html-added">all</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">have</span> <span class="diff-html-added">been</span> <span class="diff-html-added">processed</span> <span class="diff-html-added">or</span> <span class="diff-html-added">the</span> <span class="diff-html-added">action</span> <span class="diff-html-added">throws</span> <span class="diff-html-added">an</span> <span class="diff-html-added">exception.</span> <span class="diff-html-added">Unless</span> <span class="diff-html-added">otherwise</span> <span class="diff-html-added">specified</span> <span class="diff-html-added">by</span> <span class="diff-html-added">the</span> <span class="diff-html-added">implementing</span> <span class="diff-html-added">class,</span> <span class="diff-html-added">actions</span> <span class="diff-html-added">are</span> <span class="diff-html-added">performed</span> <span class="diff-html-added">in</span> <span class="diff-html-added">the</span> <span class="diff-html-added">order</span> <span class="diff-html-added">of</span> <span class="diff-html-added">iteration</span> <span class="diff-html-added">(if</span> <span class="diff-html-added">an</span> <span class="diff-html-added">iteration</span> <span class="diff-html-added">order</span> <span class="diff-html-added">is</span> <span class="diff-html-added">specified).</span> <span class="diff-html-added">Exceptions</span> <span class="diff-html-added">thrown</span> <span class="diff-html-added">by</span> <span class="diff-html-added">the</span> <span class="diff-html-added">action</span> <span class="diff-html-added">are</span> <span class="diff-html-added">relayed</span> <span class="diff-html-added">to</span> <span class="diff-html-added">the</span> <span class="diff-html-added">caller.</span>                                                    </div><dl> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../../java/lang/Iterable.html#forEach-java.util.function.Consumer-"><span class="diff-html-added">forEach</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../../java/lang/Iterable.html" title="interface in java.lang"><span class="diff-html-added">Iterable</span></a><span class="diff-html-added">&lt;</span><a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView"><span class="diff-html-added">K</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="paramLabel"><span class="diff-html-added">Parameters:</span></span>   </dt><dd> <code><span class="diff-html-added">action</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">The</span> <span class="diff-html-added">action</span> <span class="diff-html-added">to</span> <span class="diff-html-added">be</span> <span class="diff-html-added">performed</span> <span class="diff-html-added">for</span> <span class="diff-html-added">each</span> <span class="diff-html-added">element</span>          </dd>  </dl></li></ul> <a end_ctx_id="method:forEach-java.util.function.Consumer-"/>  </td></tr><tr valign="top"><td bgcolor="#CCCCCC" colspan="1"> <a start_ctx_id="method:forEach-java.util.function.Consumer-"/><a name="forEach-java.util.function.Consumer-"/><ul class="blockList"><li class="blockList"><h4>forEach</h4><pre>public void forEach(<a href="../../../java/util/function/Consumer.html" title="interface in java.util.function">Consumer</a>&lt;? super <a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt; action)</pre></li></ul> <a end_ctx_id="method:forEach-java.util.function.Consumer-"/>  </td><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:forEach-java.util.function.Consumer-"/><a name="forEach-java.util.function.Consumer-"/><ul class="blockList"><li class="blockList"><h4>forEach</h4><pre>public void forEach(<a href="../../../java/util/function/Consumer.html" title="interface in java.util.function">Consumer</a>&lt;? super <a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt; action)</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../../java/lang/Iterable.html#forEach-java.util.function.Consumer-">Iterable</a></code>   </span> </div><div class="block">Performs the given action for each element of the <code>Iterable</code> until all elements have been processed or the action throws an exception. Unless otherwise specified by the implementing class, actions are performed in the order of iteration (if an iteration order is specified). Exceptions thrown by the action are relayed to the caller.                                                    </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/lang/Iterable.html#forEach-java.util.function.Consumer-">forEach</a></code> in interface <code><a href="../../../java/lang/Iterable.html" title="interface in java.lang">Iterable</a>&lt;<a href="../../../java/util/concurrent/ConcurrentHashMap.KeySetView.html" title="type parameter in ConcurrentHashMap.KeySetView">K</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>action</code> - The action to be performed for each element          </dd>  </dl></li></ul> <a end_ctx_id="method:forEach-java.util.function.Consumer-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getMap-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getMap--"/><a name="getMap--"/><ul class="blockList"><li class="blockList"><h4>getMap</h4><pre>public <a href="../../../java/util/concurrent/ConcurrentHashMap.html" title="class in java.util.concurrent">ConcurrentHashMap</a>&lt;K,V&gt; getMap()</pre><div class="block">Returns the map backing this view.     </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the map backing this view    </dd> </dl></li></ul> <a end_ctx_id="method:getMap--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:clear-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:clear--"/><a name="clear--"/><ul class="blockList"><li class="blockList"><h4>clear</h4><pre>public final void clear()</pre><div class="block">Removes all of the elements from this view, by removing all the mappings from the map backing this view.                  </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#clear--">clear</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;E&gt;</code>  </dd> </dl></li></ul> <a end_ctx_id="method:clear--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:size-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:size--"/><a name="size--"/><ul class="blockList"><li class="blockList"><h4>size</h4><pre>public final int size()</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../../java/util/Collection.html#size--">Collection</a></code>   </span> </div><div class="block">Returns the number of elements in this collection. If this collection contains more than <tt>Integer.MAX_VALUE</tt> elements, returns <tt>Integer.MAX_VALUE</tt>.                 </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#size--">size</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;E&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the number of elements in this collection      </dd>  </dl></li></ul> <a end_ctx_id="method:size--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:isEmpty-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:isEmpty--"/><a name="isEmpty--"/><ul class="blockList"><li class="blockList"><h4>isEmpty</h4><pre>public final boolean isEmpty()</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../../java/util/Collection.html#isEmpty--">Collection</a></code>   </span> </div><div class="block">Returns <tt>true</tt> if this collection contains no elements.       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#isEmpty--">isEmpty</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;E&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this collection contains no elements       </dd>  </dl></li></ul> <a end_ctx_id="method:isEmpty--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toArray-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toArray--"/><a name="toArray--"/><ul class="blockList"><li class="blockList"><h4>toArray</h4><pre>public final <a href="../../../java/lang/Object.html" title="class in java.lang">Object</a>[] toArray()</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../../java/util/Collection.html#toArray--">Collection</a></code>   </span> </div><div class="block">Returns an array containing all of the elements in this collection. If this collection makes any guarantees as to what order its elements are returned by its iterator, this method must return the elements in the same order.<p>The returned array will be "safe" in that no references to it are maintained by this collection. (In other words, this method must allocate a new array even if this collection is backed by an array). The caller is thus free to modify the returned array.                                             </p><p>This method acts as bridge between array-based and collection-based APIs.         </p>                                     </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#toArray--">toArray</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;E&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an array containing all of the elements in this collection         </dd>  </dl></li></ul> <a name="toArray-java.lang.Object:A-"/><a end_ctx_id="method:toArray--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toArray-T:A- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toArray-T:A-"/><a name="toArray-T:A-"/><ul class="blockList"><li class="blockList"><h4>toArray</h4><pre>public final &lt;T&gt; T[] toArray(T[] a)</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../../java/util/Collection.html#toArray-T:A-">Collection</a></code>   </span> </div><div class="block">Returns an array containing all of the elements in this collection; the runtime type of the returned array is that of the specified array. If the collection fits in the specified array, it is returned therein. Otherwise, a new array is allocated with the runtime type of the specified array and the size of this collection.<p>If this collection fits in the specified array with room to spare (i.e., the array has more elements than this collection), the element in the array immediately following the end of the collection is set to <tt>null</tt>. (This is useful in determining the length of this collection <i>only</i> if the caller knows that this collection does not contain any <tt>null</tt> elements.)                                                            </p><p>If this collection makes any guarantees as to what order its elements are returned by its iterator, this method must return the elements in the same order.                          </p><p>Like the <a href="../../../java/util/Collection.html#toArray--"><code>Collection.toArray()</code></a> method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.                                      </p><p>Suppose <tt>x</tt> is a collection known to contain only strings. The following code can be used to dump the collection into a newly allocated array of <tt>String</tt>:<pre>
     String[] y = x.toArray(new String[0]);</pre> Note that <tt>toArray(new Object[0]) </tt> is identical in function to <tt>toArray()</tt>.                                   </p>                                                       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#toArray-T:A-">toArray</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;E&gt;</code>  </dd> <dt> <span class="paramLabel">Type Parameters: </span>   </dt><dd> <code>T</code> - the runtime type of the array to contain the collection            </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>a</code> - the array into which the elements of this collection are to be stored, if it is big enough; otherwise, a new array of the same runtime type is allocated for this purpose.                                  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an array containing all of the elements in this collection         </dd>    </dl></li></ul> <a end_ctx_id="method:toArray-T:A-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toString-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toString--"/><a name="toString--"/><ul class="blockList"><li class="blockList"><h4>toString</h4><pre>public final <a href="../../../java/lang/String.html" title="class in java.lang">String</a> toString()</pre><div class="block">Returns a string representation of this collection. The string representation consists of the string representations of the collection's elements in the order they are returned by its iterator, enclosed in square brackets (<code>"[]"</code>). Adjacent elements are separated by the characters <code>", " </code> (comma and space). Elements are converted to strings as by <a href="../../../java/lang/String.html#valueOf-java.lang.Object-"><code>String.valueOf(Object)</code></a>.                                                   </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/lang/Object.html#toString--">toString</a></code> in class <code><a href="../../../java/lang/Object.html" title="class in java.lang">Object</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a string representation of this collection     </dd>  </dl></li></ul> <a end_ctx_id="method:toString--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:containsAll-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:containsAll-java.util.Collection-"/><a name="containsAll-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>containsAll</h4><pre>public final boolean containsAll(<a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;?&gt; c)</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../../java/util/Collection.html#containsAll-java.util.Collection-">Collection</a></code>   </span> </div><div class="block">Returns <tt>true</tt> if this collection contains all of the elements in the specified collection.             </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#containsAll-java.util.Collection-">containsAll</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;E&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - collection to be checked for containment in this collection           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this collection contains all of the elements in the specified collection             </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/util/Collection.html#contains-java.lang.Object-"><code>Collection.contains(Object)</code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:containsAll-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:removeAll-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:removeAll-java.util.Collection-"/><a name="removeAll-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>removeAll</h4><pre>public final boolean removeAll(<a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;?&gt; c)</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../../java/util/Collection.html#removeAll-java.util.Collection-">Collection</a></code>   </span> </div><div class="block">Removes all of this collection's elements that are also contained in the specified collection (optional operation). After this call returns, this collection will contain no elements in common with the specified collection.                               </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#removeAll-java.util.Collection-">removeAll</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;E&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - collection containing elements to be removed from this collection           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this collection changed as a result of the call           </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/util/Collection.html#remove-java.lang.Object-"><code>Collection.remove(Object)</code></a>, <a href="../../../java/util/Collection.html#contains-java.lang.Object-"><code>Collection.contains(Object)</code></a>  </dd>    </dl></li></ul> <a end_ctx_id="method:removeAll-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:retainAll-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:retainAll-java.util.Collection-"/><a name="retainAll-java.util.Collection-"/><ul class="blockListLast"><li class="blockList"><h4>retainAll</h4><pre>public final boolean retainAll(<a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;?&gt; c)</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../../java/util/Collection.html#retainAll-java.util.Collection-">Collection</a></code>   </span> </div><div class="block">Retains only the elements in this collection that are contained in the specified collection (optional operation). In other words, removes from this collection all of its elements that are not contained in the specified collection.                                  </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#retainAll-java.util.Collection-">retainAll</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;E&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - collection containing elements to be retained in this collection           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this collection changed as a result of the call           </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/util/Collection.html#remove-java.lang.Object-"><code>Collection.remove(Object)</code></a>, <a href="../../../java/util/Collection.html#contains-java.lang.Object-"><code>Collection.contains(Object)</code></a>  </dd>    </dl></li></ul> <a end_ctx_id="method:retainAll-java.util.Collection-"/>  </td></tr></table></td></tr></table></diff></diffreport>