<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:ConcurrentLinkedQueue [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:ConcurrentLinkedQueue"/><ul class="blockList"><li class="blockList"><dl> <dt> <span class="paramLabel">Type Parameters: </span>   </dt><dd> <code>E</code> - the type of elements held in this collection          </dd> </dl><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../../java/io/Serializable.html" title="interface in java.io">Serializable</a>, <a href="../../../java/lang/Iterable.html" title="interface in java.lang">Iterable</a>&lt;E&gt;, <a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;E&gt;, <a href="../../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;E&gt;    </dd> </dl> <hr/> <br/><pre>public class <span class="typeNameLabel">ConcurrentLinkedQueue&lt;E&gt;</span>
extends <a href="../../../java/util/AbstractQueue.html" title="class in java.util">AbstractQueue</a>&lt;E&gt;
implements <a href="../../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;E&gt;, <a href="../../../java/io/Serializable.html" title="interface in java.io">Serializable</a></pre><div class="block">An unbounded thread-safe <a href="../../../java/util/Queue.html" title="interface in java.util">queue</a> based on linked nodes. This queue orders elements FIFO (first-in-first-out). The <em>head</em> of the queue is that element that has been on the queue the longest time. The <em>tail</em> of the queue is that element that has been on the queue the shortest time. New elements are inserted at the tail of the queue, and the queue retrieval operations obtain elements at the head of the queue. A <code>ConcurrentLinkedQueue</code> is an appropriate choice when many threads will share access to a common collection. Like most other concurrent collection implementations, this class does not permit the use of <code>null</code> elements.<p>This implementation employs an efficient <em>non-blocking</em> algorithm based on one described in <a href="http://www.cs.rochester.edu/u/michael/PODC96.html"> Simple, Fast, and Practical Non-Blocking and Blocking Concurrent Queue Algorithms          </a> by Maged M. Michael and Michael L. Scott.                    </p><p>Iterators are <i>weakly consistent </i>, returning elements reflecting the state of the queue at some point at or since the creation of the iterator. They do <em>not</em> throw <a href="../../../java/util/ConcurrentModificationException.html" title="class in java.util"><code>ConcurrentModificationException</code></a>, and may proceed concurrently with other operations. Elements contained in the queue since the creation of the iterator will be returned exactly once.                                                 </p><p>Beware that, unlike in most collections, the <code>size</code> method is <em>NOT</em> a constant-time operation. Because of the asynchronous nature of these queues, determining the current number of elements requires a traversal of the elements, and so may report inaccurate results if this collection is modified during traversal. Additionally, the bulk operations <code>addAll</code>, <code>removeAll</code>, <code>retainAll</code>, <code>containsAll</code>, <code>equals</code>, and <code>toArray</code> are <em>not</em> guaranteed to be performed atomically. For example, an iterator operating concurrently with an <code>addAll</code> operation might view only some of the added elements.                                                                                  </p><p>This class and its iterator implement all of the <em>optional</em> methods of the <a href="../../../java/util/Queue.html" title="interface in java.util"><code>Queue</code></a> and <a href="../../../java/util/Iterator.html" title="interface in java.util"><code>Iterator</code></a> interfaces.                </p><p>Memory consistency effects: As with other concurrent collections, actions in a thread prior to placing an object into a <code>ConcurrentLinkedQueue</code><a href="package-summary.html#MemoryVisibility"><i>happen-before</i></a> actions subsequent to the access or removal of that element from the <code>ConcurrentLinkedQueue</code> in another thread.                                   </p><p>This class is a member of the <a href="http://download.oracle.com/javase/7/docs/technotes/guides/collections/index.html"> Java Collections Framework   </a>.       </p>                                                                                                      </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../serialized-form.html#java.util.concurrent.ConcurrentLinkedQueue">Serialized Form </a> </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:ConcurrentLinkedQueue"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:ConcurrentLinkedQueue-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:ConcurrentLinkedQueue--"/><a name="ConcurrentLinkedQueue--"/><ul class="blockList"><li class="blockList"><h4>ConcurrentLinkedQueue</h4><pre>public ConcurrentLinkedQueue()</pre><div class="block">Creates a <code>ConcurrentLinkedQueue</code> that is initially empty.      </div></li></ul> <a end_ctx_id="constructor:ConcurrentLinkedQueue--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:ConcurrentLinkedQueue-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:ConcurrentLinkedQueue-java.util.Collection-"/><a name="ConcurrentLinkedQueue-java.util.Collection-"/><ul class="blockListLast"><li class="blockList"><h4>ConcurrentLinkedQueue</h4><pre>public ConcurrentLinkedQueue(<a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;? extends <a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a>&gt; c)</pre><div class="block">Creates a <code>ConcurrentLinkedQueue</code> initially containing the elements of the given collection, added in traversal order of the collection's iterator.                  </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - the collection of elements to initially contain         </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified collection or any of its elements are null             </dd>  </dl></li></ul> <a end_ctx_id="constructor:ConcurrentLinkedQueue-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:add-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><a start_ctx_id="method:add-E-"/><a name="add-E-"/><ul class="blockList"><li class="blockList"><h4>add</h4><pre>public boolean add(<a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a> e)</pre><div class="block">Inserts the specified element at the tail of this queue. As the queue is unbounded, this method will never throw <a href="../../../java/lang/IllegalStateException.html" title="class in java.lang"><code>IllegalStateException</code></a> or return <code>false</code>.                       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#add-E-">add</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Queue.html#add-E-">add</a></code> in interface <code><a href="../../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/util/AbstractQueue.html#add-E-">add</a></code> in class <code><a href="../../../java/util/AbstractQueue.html" title="class in java.util">AbstractQueue</a>&lt;<a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> (as specified by <a href="../../../java/util/Collection.html#add-E-"><code>Collection.add(E)</code></a>)     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null        </dd>      </dl></li></ul> <a name="offer-java.lang.Object-"/><a end_ctx_id="method:add-E-"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:offer-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:offer-E-"/><a name="offer-E-"/><ul class="blockList"><li class="blockList"><h4>offer</h4><pre>public boolean offer(<a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a> e)</pre><div class="block">Inserts the specified element at the tail of this queue. As the queue is unbounded, this method will never return <code>false</code>.                    </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Queue.html#offer-E-">offer</a></code> in interface <code><a href="../../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> (as specified by <a href="../../../java/util/Queue.html#offer-E-"><code>Queue.offer(E)</code></a>)     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null        </dd>    </dl></li></ul> <a end_ctx_id="method:offer-E-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:poll-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:poll--"/><a name="poll--"/><ul class="blockList"><li class="blockList"><h4>poll</h4><pre>public <a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a> poll()</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../../java/util/Queue.html#poll--">Queue</a></code>   </span> </div><div class="block">Retrieves and removes the head of this queue, or returns <code>null</code> if this queue is empty.               </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Queue.html#poll--">poll</a></code> in interface <code><a href="../../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of this queue, or <code>null</code> if this queue is empty           </dd>  </dl></li></ul> <a end_ctx_id="method:poll--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:peek-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:peek--"/><a name="peek--"/><ul class="blockList"><li class="blockList"><h4>peek</h4><pre>public <a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a> peek()</pre><div class="block"> <span class="descfrmTypeLabel">Description copied from interface: <code><a href="../../../java/util/Queue.html#peek--">Queue</a></code>   </span> </div><div class="block">Retrieves, but does not remove, the head of this queue, or returns <code>null</code> if this queue is empty.                 </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Queue.html#peek--">peek</a></code> in interface <code><a href="../../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of this queue, or <code>null</code> if this queue is empty           </dd>  </dl></li></ul> <a end_ctx_id="method:peek--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:isEmpty-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:isEmpty--"/><a name="isEmpty--"/><ul class="blockList"><li class="blockList"><h4>isEmpty</h4><pre>public boolean isEmpty()</pre><div class="block">Returns <code>true</code> if this queue contains no elements.       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#isEmpty--">isEmpty</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/util/AbstractCollection.html#isEmpty--">isEmpty</a></code> in class <code><a href="../../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this queue contains no elements       </dd>   </dl></li></ul> <a end_ctx_id="method:isEmpty--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:size-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:size--"/><a name="size--"/><ul class="blockList"><li class="blockList"><h4>size</h4><pre>public int size()</pre><div class="block">Returns the number of elements in this queue. If this queue contains more than <code>Integer.MAX_VALUE</code> elements, returns <code>Integer.MAX_VALUE</code>.<p>Beware that, unlike in most collections, this method is <em>NOT</em> a constant-time operation. Because of the asynchronous nature of these queues, determining the current number of elements requires an O(n) traversal. Additionally, if elements are added or removed during execution of this method, the returned result may be inaccurate. Thus, this method is typically not very useful in concurrent applications.                                                           </p>                 </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#size--">size</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/AbstractCollection.html#size--">size</a></code> in class <code><a href="../../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the number of elements in this queue      </dd>   </dl></li></ul> <a end_ctx_id="method:size--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:contains-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:contains-java.lang.Object-"/><a name="contains-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>contains</h4><pre>public boolean contains(<a href="../../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Returns <code>true</code> if this queue contains the specified element. More formally, returns <code>true</code> if and only if this queue contains at least one element <code>e</code> such that <code>o.equals(e)</code>.                           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#contains-java.lang.Object-">contains</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/util/AbstractCollection.html#contains-java.lang.Object-">contains</a></code> in class <code><a href="../../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - object to be checked for containment in this queue           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this queue contains the specified element        </dd>    </dl></li></ul> <a end_ctx_id="method:contains-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:remove-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:remove-java.lang.Object-"/><a name="remove-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>remove</h4><pre>public boolean remove(<a href="../../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Removes a single instance of the specified element from this queue, if it is present. More formally, removes an element <code>e</code> such that <code>o.equals(e)</code>, if this queue contains one or more such elements. Returns <code>true</code> if this queue contained the specified element (or equivalently, if this queue changed as a result of the call).                                                     </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#remove-java.lang.Object-">remove</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/util/AbstractCollection.html#remove-java.lang.Object-">remove</a></code> in class <code><a href="../../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - element to be removed from this queue, if present           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this queue changed as a result of the call           </dd>    </dl></li></ul> <a end_ctx_id="method:remove-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:addAll-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:addAll-java.util.Collection-"/><a name="addAll-java.util.Collection-"/><ul class="blockList"><li class="blockList"><h4>addAll</h4><pre>public boolean addAll(<a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;? extends <a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a>&gt; c)</pre><div class="block">Appends all of the elements in the specified collection to the end of this queue, in the order that they are returned by the specified collection's iterator. Attempts to <code>addAll</code> of a queue to itself result in <code>IllegalArgumentException</code>.                                     </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#addAll-java.util.Collection-">addAll</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/util/AbstractQueue.html#addAll-java.util.Collection-">addAll</a></code> in class <code><a href="../../../java/util/AbstractQueue.html" title="class in java.util">AbstractQueue</a>&lt;<a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - the elements to be inserted into this queue          </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if this queue changed as a result of the call           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified collection or any of its elements are null             </dd><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if the collection is this queue        </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/util/AbstractQueue.html#add-E-"><code>AbstractQueue.add(Object)</code></a> </dd>      </dl></li></ul> <a end_ctx_id="method:addAll-java.util.Collection-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toArray-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toArray--"/><a name="toArray--"/><ul class="blockList"><li class="blockList"><h4>toArray</h4><pre>public <a href="../../../java/lang/Object.html" title="class in java.lang">Object</a>[] toArray()</pre><div class="block">Returns an array containing all of the elements in this queue, in proper sequence.<p>The returned array will be "safe" in that no references to it are maintained by this queue. (In other words, this method must allocate a new array). The caller is thus free to modify the returned array.                                    </p><p>This method acts as bridge between array-based and collection-based APIs.         </p>             </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#toArray--">toArray</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/util/AbstractCollection.html#toArray--">toArray</a></code> in class <code><a href="../../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an array containing all of the elements in this queue         </dd>   </dl></li></ul> <a name="toArray-java.lang.Object:A-"/><a end_ctx_id="method:toArray--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toArray-T:A- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toArray-T:A-"/><a name="toArray-T:A-"/><ul class="blockList"><li class="blockList"><h4>toArray</h4><pre>public &lt;T&gt; T[] toArray(T[] a)</pre><div class="block">Returns an array containing all of the elements in this queue, in proper sequence; the runtime type of the returned array is that of the specified array. If the queue fits in the specified array, it is returned therein. Otherwise, a new array is allocated with the runtime type of the specified array and the size of this queue.<p>If this queue fits in the specified array with room to spare (i.e., the array has more elements than this queue), the element in the array immediately following the end of the queue is set to <code>null</code>.                                    </p><p>Like the <a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html#toArray--"><code>toArray()</code></a> method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.                                      </p><p>Suppose <code>x</code> is a queue known to contain only strings. The following code can be used to dump the queue into a newly allocated array of <code>String</code>:<pre> 
<code> String[] y = x.toArray(new String[0]);</code></pre> Note that <code>toArray(new Object[0]) </code> is identical in function to <code>toArray()</code>.                                   </p>                                                          </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#toArray-T:A-">toArray</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../../java/util/AbstractCollection.html#toArray-T:A-">toArray</a></code> in class <code><a href="../../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Type Parameters: </span>   </dt><dd> <code>T</code> - the runtime type of the array to contain the collection            </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>a</code> - the array into which the elements of the queue are to be stored, if it is big enough; otherwise, a new array of the same runtime type is allocated for this purpose                                  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an array containing all of the elements in this queue         </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/ArrayStoreException.html" title="class in java.lang">ArrayStoreException</a></code> - if the runtime type of the specified array is not a supertype of the runtime type of every element in this queue                        </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified array is null        </dd>      </dl></li></ul> <a end_ctx_id="method:toArray-T:A-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:iterator-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:iterator--"/><a name="iterator--"/><ul class="blockList"><li class="blockList"><h4>iterator</h4><pre>public <a href="../../../java/util/Iterator.html" title="interface in java.util">Iterator</a>&lt;<a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a>&gt; iterator()</pre><div class="block">Returns an iterator over the elements in this queue in proper sequence. The elements will be returned in order from first (head) to last (tail).<p>The returned iterator is <a href="package-summary.html#Weakly"><i>weakly consistent </i></a>.    </p>                        </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/lang/Iterable.html#iterator--">iterator</a></code> in interface <code><a href="../../../java/lang/Iterable.html" title="interface in java.lang">Iterable</a>&lt;<a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#iterator--">iterator</a></code> in interface <code><a href="../../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../../java/util/AbstractCollection.html#iterator--">iterator</a></code> in class <code><a href="../../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an iterator over the elements in this queue in proper sequence          </dd>    </dl></li></ul> <a end_ctx_id="method:iterator--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:spliterator-- [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:spliterator--"><span class="diff-html-added"/></a><a name="spliterator--"/><ul class="blockListLast"><li class="blockList"><h4><span class="diff-html-added">spliterator</span></h4><pre><span class="diff-html-added">public </span><a href="../../../java/util/Spliterator.html" title="interface in java.util"><span class="diff-html-added">Spliterator</span></a><span class="diff-html-added">&lt;</span><a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt; spliterator()</span></pre><div class="block"><span class="diff-html-added">Returns</span> <span class="diff-html-added">a</span> <a href="../../../java/util/Spliterator.html" title="interface in java.util"><code><span class="diff-html-added">Spliterator</span></code></a> <span class="diff-html-added">over</span> <span class="diff-html-added">the</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">in</span> <span class="diff-html-added">this</span> <span class="diff-html-added">queue.</span><p><span class="diff-html-added">The</span> <span class="diff-html-added">returned</span> <span class="diff-html-added">spliterator</span> <span class="diff-html-added">is</span> <a href="package-summary.html#Weakly"><i><span class="diff-html-added">weakly</span> <span class="diff-html-added">consistent</span> </i></a><span class="diff-html-added">.</span>    </p><p><span class="diff-html-added">The</span> <code><span class="diff-html-added">Spliterator</span></code> <span class="diff-html-added">reports</span> <a href="../../../java/util/Spliterator.html#CONCURRENT"><code><span class="diff-html-added">Spliterator.CONCURRENT</span></code></a><span class="diff-html-added">,</span> <a href="../../../java/util/Spliterator.html#ORDERED"><code><span class="diff-html-added">Spliterator.ORDERED</span></code></a><span class="diff-html-added">,</span> <span class="diff-html-added">and</span> <a href="../../../java/util/Spliterator.html#NONNULL"><code><span class="diff-html-added">Spliterator.NONNULL</span></code></a><span class="diff-html-added">.</span>      </p>        </div><dl> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../../java/lang/Iterable.html#spliterator--"><span class="diff-html-added">spliterator</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../../java/lang/Iterable.html" title="interface in java.lang"><span class="diff-html-added">Iterable</span></a><span class="diff-html-added">&lt;</span><a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="overrideSpecifyLabel"><span class="diff-html-added">Specified</span> <span class="diff-html-added">by:</span> </span>   </dt><dd> <code><a href="../../../java/util/Collection.html#spliterator--"><span class="diff-html-added">spliterator</span></a></code><span class="diff-html-added"> in</span> <span class="diff-html-added">interface </span><code><a href="../../../java/util/Collection.html" title="interface in java.util"><span class="diff-html-added">Collection</span></a><span class="diff-html-added">&lt;</span><a href="../../../java/util/concurrent/ConcurrentLinkedQueue.html" title="type parameter in ConcurrentLinkedQueue"><span class="diff-html-added">E</span></a><span class="diff-html-added">&gt;</span></code>  </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Implementation</span> <span class="diff-html-added">Note:</span> </span>   </dt><dd><span class="diff-html-added">The</span> <code><span class="diff-html-added">Spliterator</span></code> <span class="diff-html-added">implements</span> <code><span class="diff-html-added">trySplit</span></code> <span class="diff-html-added">to</span> <span class="diff-html-added">permit</span> <span class="diff-html-added">limited</span> <span class="diff-html-added">parallelism.</span>       </dd> <dt> <span class="returnLabel"><span class="diff-html-added">Returns:</span></span>   </dt><dd><span class="diff-html-added">a</span> <code><span class="diff-html-added">Spliterator</span></code> <span class="diff-html-added">over</span> <span class="diff-html-added">the</span> <span class="diff-html-added">elements</span> <span class="diff-html-added">in</span> <span class="diff-html-added">this</span> <span class="diff-html-added">queue</span>       </dd> <dt> <span class="simpleTagLabel"><span class="diff-html-added">Since:</span></span>   </dt><dd><span class="diff-html-added">1.8</span></dd>     </dl></li></ul> <a end_ctx_id="method:spliterator--"><span class="diff-html-added"/></a>  </td></tr></table></td></tr></table></diff></diffreport>