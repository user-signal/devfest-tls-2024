<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:EnumMap [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:EnumMap"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>, <a href="../../java/lang/Cloneable.html" title="interface in java.lang">Cloneable</a>, <a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;K,V&gt;   </dd> </dl> <hr/> <br/><pre>public class <span class="typeNameLabel">EnumMap&lt;K extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;K&gt;,V&gt;</span>
extends <a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;K,V&gt;
implements <a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>, <a href="../../java/lang/Cloneable.html" title="interface in java.lang">Cloneable</a></pre><div class="block">A specialized <a href="../../java/util/Map.html" title="interface in java.util"><code>Map</code></a> implementation for use with enum type keys. All of the keys in an enum map must come from a single enum type that is specified, explicitly or implicitly, when the map is created. Enum maps are represented internally as arrays. This representation is extremely compact and efficient.<p>Enum maps are maintained in the <i>natural order </i> of their keys (the order in which the enum constants are declared). This is reflected in the iterators returned by the collections views (<a href="../../java/util/EnumMap.html#keySet--"><code>keySet()</code></a>, <a href="../../java/util/EnumMap.html#entrySet--"><code>entrySet()</code></a>, and <a href="../../java/util/EnumMap.html#values--"><code>values()</code></a>).                                 </p><p>Iterators returned by the collection views are <i>weakly consistent </i>: they will never throw <a href="../../java/util/ConcurrentModificationException.html" title="class in java.util"><code>ConcurrentModificationException</code></a> and they may or may not show the effects of any modifications to the map that occur while the iteration is in progress.                                   </p><p>Null keys are not permitted. Attempts to insert a null key will throw <a href="../../java/lang/NullPointerException.html" title="class in java.lang"><code>NullPointerException</code></a>. Attempts to test for the presence of a null key or to remove one will, however, function properly. Null values are permitted.                                   </p><p>Like most collection implementations <tt>EnumMap</tt> is not synchronized. If multiple threads access an enum map concurrently, and at least one of the threads modifies the map, it should be synchronized externally. This is typically accomplished by synchronizing on some object that naturally encapsulates the enum map. If no such object exists, the map should be "wrapped" using the <a href="../../java/util/Collections.html#synchronizedMap-java.util.Map-"><code>Collections.synchronizedMap(java.util.Map&lt;K, V&gt;) </code></a> method. This is best done at creation time, to prevent accidental unsynchronized access:<pre>
     Map&lt;EnumKey, V&gt; m
         = Collections.synchronizedMap(new EnumMap&lt;EnumKey, V&gt;(...));
 </pre>                                                                       </p><p>Implementation note: All basic operations execute in constant time. They are likely (though not guaranteed) to be faster than their <a href="../../java/util/HashMap.html" title="class in java.util"><code>HashMap</code></a> counterparts.                     </p><p>This class is a member of the <a href="http://download.oracle.com/javase/7/docs/technotes/guides/collections/index.html"> Java Collections Framework   </a>.       </p>                                                 </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/EnumSet.html" title="class in java.util"><code>EnumSet</code></a>, <a href="../../serialized-form.html#java.util.EnumMap">Serialized Form </a>  </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:EnumMap"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:EnumMap-java.lang.Class- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:EnumMap-java.lang.Class-"/><a name="EnumMap-java.lang.Class-"/><ul class="blockList"><li class="blockList"><h4>EnumMap</h4><pre>public EnumMap(<a href="../../java/lang/Class.html" title="class in java.lang">Class</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt; keyType)</pre><div class="block">Creates an empty enum map with the specified key type.         </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>keyType</code> - the class object of the key type for this enum map             </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if <tt>keyType</tt> is null      </dd>  </dl></li></ul> <a end_ctx_id="constructor:EnumMap-java.lang.Class-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:EnumMap-java.util.EnumMap- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:EnumMap-java.util.EnumMap-"/><a name="EnumMap-java.util.EnumMap-"/><ul class="blockList"><li class="blockList"><h4>EnumMap</h4><pre>public EnumMap(<a href="../../java/util/EnumMap.html" title="class in java.util">EnumMap</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>,? extends <a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt; m)</pre><div class="block">Creates an enum map with the same key type as the specified enum map, initially containing the same mappings (if any).                    </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>m</code> - the enum map from which to initialize this enum map            </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if <tt>m</tt> is null      </dd>  </dl></li></ul> <a end_ctx_id="constructor:EnumMap-java.util.EnumMap-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:EnumMap-java.util.Map- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:EnumMap-java.util.Map-"/><a name="EnumMap-java.util.Map-"/><ul class="blockListLast"><li class="blockList"><h4>EnumMap</h4><pre>public EnumMap(<a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>,? extends <a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt; m)</pre><div class="block">Creates an enum map initialized from the specified map. If the specified map is an <tt>EnumMap</tt> instance, this constructor behaves identically to <a href="../../java/util/EnumMap.html#EnumMap-java.util.EnumMap-"><code>EnumMap(EnumMap)</code></a>. Otherwise, the specified map must contain at least one mapping (in order to determine the new enum map's key type).                                          </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>m</code> - the map from which to initialize this enum map           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if <tt>m</tt> is not an <tt>EnumMap</tt> instance and contains no mappings             </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if <tt>m</tt> is null      </dd>  </dl></li></ul> <a end_ctx_id="constructor:EnumMap-java.util.Map-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:size-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:size--"/><a name="size--"/><ul class="blockList"><li class="blockList"><h4>size</h4><pre>public int size()</pre><div class="block">Returns the number of key-value mappings in this map.        </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#size--">size</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#size--">size</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the number of key-value mappings in this map       </dd>   </dl></li></ul> <a end_ctx_id="method:size--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:containsValue-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:containsValue-java.lang.Object-"/><a name="containsValue-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>containsValue</h4><pre>public boolean containsValue(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> value)</pre><div class="block">Returns <tt>true</tt> if this map maps one or more keys to the specified value.             </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#containsValue-java.lang.Object-">containsValue</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#containsValue-java.lang.Object-">containsValue</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>value</code> - the value whose presence in this map is to be tested             </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this map maps one or more keys to this value            </dd>    </dl></li></ul> <a end_ctx_id="method:containsValue-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:containsKey-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:containsKey-java.lang.Object-"/><a name="containsKey-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>containsKey</h4><pre>public boolean containsKey(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> key)</pre><div class="block">Returns <tt>true</tt> if this map contains a mapping for the specified key.           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#containsKey-java.lang.Object-">containsKey</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#containsKey-java.lang.Object-">containsKey</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>key</code> - the key whose presence in this map is to be tested             </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this map contains a mapping for the specified key           </dd>    </dl></li></ul> <a end_ctx_id="method:containsKey-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:get-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:get-java.lang.Object-"/><a name="get-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>get</h4><pre>public <a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a> get(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> key)</pre><div class="block">Returns the value to which the specified key is mapped, or <code>null</code> if this map contains no mapping for the key.<p>More formally, if this map contains a mapping from a key <code>k</code> to a value <code>v</code> such that <code>(key == k)  </code>, then this method returns <code>v</code>; otherwise it returns <code>null</code>. (There can be at most one such mapping.)                                   </p><p>A return value of <code>null</code> does not <i>necessarily</i> indicate that the map contains no mapping for the key; it's also possible that the map explicitly maps the key to <code>null</code>. The <a href="../../java/util/EnumMap.html#containsKey-java.lang.Object-"><code>containsKey</code></a> operation may be used to distinguish these two cases.                                        </p>                    </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#get-java.lang.Object-">get</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#get-java.lang.Object-">get</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>key</code> - the key whose associated value is to be returned           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the value to which the specified key is mapped, or <code>null</code> if this map contains no mapping for the key                   </dd>    </dl></li></ul> <a name="put-java.lang.Enum-java.lang.Object-"/><a end_ctx_id="method:get-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:put-K-V- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:put-K-V-"/><a name="put-K-V-"/><ul class="blockList"><li class="blockList"><h4>put</h4><pre>public <a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a> put(<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> key,
             <a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a> value)</pre><div class="block">Associates the specified value with the specified key in this map. If the map previously contained a mapping for this key, the old value is replaced.                         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#put-K-V-">put</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#put-K-V-">put</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>key</code> - the key with which the specified value is to be associated             </dd><dd> <code>value</code> - the value to be associated with the specified key           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the previous value associated with specified key, or <tt>null</tt> if there was no mapping for key. (A <tt>null</tt> return can also indicate that the map previously associated <tt>null</tt> with the specified key.)                               </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified key is null        </dd>     </dl></li></ul> <a end_ctx_id="method:put-K-V-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:remove-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:remove-java.lang.Object-"/><a name="remove-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>remove</h4><pre>public <a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a> remove(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> key)</pre><div class="block">Removes the mapping for this key from this map if present.          </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#remove-java.lang.Object-">remove</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#remove-java.lang.Object-">remove</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>key</code> - the key whose mapping is to be removed from the map             </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the previous value associated with specified key, or <tt>null</tt> if there was no entry for key. (A <tt>null</tt> return can also indicate that the map previously associated <tt>null</tt> with the specified key.)                               </dd>    </dl></li></ul> <a end_ctx_id="method:remove-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:putAll-java.util.Map- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:putAll-java.util.Map-"/><a name="putAll-java.util.Map-"/><ul class="blockList"><li class="blockList"><h4>putAll</h4><pre>public void putAll(<a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;? extends <a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>,? extends <a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt; m)</pre><div class="block">Copies all of the mappings from the specified map to this map. These mappings will replace any mappings that this map had for any of the keys currently in the specified map.                               </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#putAll-java.util.Map-">putAll</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#putAll-java.util.Map-">putAll</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>m</code> - the mappings to be stored in this map          </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - the specified map is null, or if one or more keys in the specified map are null                   </dd>    </dl></li></ul> <a end_ctx_id="method:putAll-java.util.Map-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:clear-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:clear--"/><a name="clear--"/><ul class="blockList"><li class="blockList"><h4>clear</h4><pre>public void clear()</pre><div class="block">Removes all mappings from this map.     </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#clear--">clear</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#clear--">clear</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd>  </dl></li></ul> <a end_ctx_id="method:clear--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:keySet-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:keySet--"/><a name="keySet--"/><ul class="blockList"><li class="blockList"><h4>keySet</h4><pre>public <a href="../../java/util/Set.html" title="interface in java.util">Set</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt; keySet()</pre><div class="block">Returns a <a href="../../java/util/Set.html" title="interface in java.util"><code>Set</code></a> view of the keys contained in this map. The returned set obeys the general contract outlined in <a href="../../java/util/Map.html#keySet--"><code>Map.keySet()</code></a>. The set's iterator will return the keys in their natural order (the order in which the enum constants are declared).                                        </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#keySet--">keySet</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#keySet--">keySet</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a set view of the keys contained in this enum map          </dd>   </dl></li></ul> <a end_ctx_id="method:keySet--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:values-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:values--"/><a name="values--"/><ul class="blockList"><li class="blockList"><h4>values</h4><pre>public <a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt; values()</pre><div class="block">Returns a <a href="../../java/util/Collection.html" title="interface in java.util"><code>Collection</code></a> view of the values contained in this map. The returned collection obeys the general contract outlined in <a href="../../java/util/Map.html#values--"><code>Map.values()</code></a>. The collection's iterator will return the values in the order their corresponding keys appear in map, which is their natural order (the order in which the enum constants are declared).                                                  </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#values--">values</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#values--">values</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a collection view of the values contained in this map         </dd>   </dl></li></ul> <a end_ctx_id="method:values--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:entrySet-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:entrySet--"/><a name="entrySet--"/><ul class="blockList"><li class="blockList"><h4>entrySet</h4><pre>public <a href="../../java/util/Set.html" title="interface in java.util">Set</a>&lt;<a href="../../java/util/Map.Entry.html" title="interface in java.util">Map.Entry</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;&gt; entrySet()</pre><div class="block">Returns a <a href="../../java/util/Set.html" title="interface in java.util"><code>Set</code></a> view of the mappings contained in this map. The returned set obeys the general contract outlined in <a href="../../java/util/Map.html#keySet--"><code>Map.keySet()</code></a>. The set's iterator will return the mappings in the order their keys appear in map, which is their natural order (the order in which the enum constants are declared).                                                 </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#entrySet--">entrySet</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#entrySet--">entrySet</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a set view of the mappings contained in this enum map          </dd>   </dl></li></ul> <a end_ctx_id="method:entrySet--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:equals-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:equals-java.lang.Object-"/><a name="equals-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>equals</h4><pre>public boolean equals(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> o)</pre><div class="block">Compares the specified object with this map for equality. Returns <tt>true</tt> if the given object is also a map and the two maps represent the same mappings, as specified in the <a href="../../java/util/Map.html#equals-java.lang.Object-"><code>Map.equals(Object)</code></a> contract.                                </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#equals-java.lang.Object-">equals</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#equals-java.lang.Object-">equals</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>o</code> - the object to be compared for equality with this map            </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if the specified object is equal to this map          </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/Object.html#hashCode--"><code>Object.hashCode()</code></a>, <a href="../../java/util/HashMap.html" title="class in java.util"><code>HashMap</code></a>  </dd>     </dl></li></ul> <a end_ctx_id="method:equals-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:hashCode-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:hashCode--"/><a name="hashCode--"/><ul class="blockList"><li class="blockList"><h4>hashCode</h4><pre>public int hashCode()</pre><div class="block">Returns the hash code value for this map. The hash code of a map is defined to be the sum of the hash codes of each entry in the map.                             </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Map.html#hashCode--">hashCode</a></code> in interface <code><a href="../../java/util/Map.html" title="interface in java.util">Map</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#hashCode--">hashCode</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the hash code value for this map      </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/Map.Entry.html#hashCode--"><code>Map.Entry.hashCode()</code></a>, <a href="../../java/lang/Object.html#equals-java.lang.Object-"><code>Object.equals(Object)</code></a>, <a href="../../java/util/Set.html#equals-java.lang.Object-"><code>Set.equals(Object)</code></a>   </dd>    </dl></li></ul> <a end_ctx_id="method:hashCode--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:clone-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:clone--"/><a name="clone--"/><ul class="blockListLast"><li class="blockList"><h4>clone</h4><pre>public <a href="../../java/util/EnumMap.html" title="class in java.util">EnumMap</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt; clone()</pre><div class="block">Returns a shallow copy of this enum map. (The values themselves are not cloned.             </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractMap.html#clone--">clone</a></code> in class <code><a href="../../java/util/AbstractMap.html" title="class in java.util">AbstractMap</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a> extends <a href="../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">K</a>&gt;,<a href="../../java/util/EnumMap.html" title="type parameter in EnumMap">V</a>&gt;  </code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>a shallow copy of this enum map      </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/Cloneable.html" title="interface in java.lang"><code>Cloneable</code></a> </dd>   </dl></li></ul> <a end_ctx_id="method:clone--"/>  </td></tr></table></td></tr></table></diff></diffreport>