<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:UUID [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:UUID"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>, <a href="../../java/lang/Comparable.html" title="interface in java.lang">Comparable</a>&lt;<a href="../../java/util/UUID.html" title="class in java.util">UUID</a>&gt;  </dd> </dl> <hr/> <br/><pre>public final class <span class="typeNameLabel">UUID</span>
extends <a href="../../java/lang/Object.html" title="class in java.lang">Object</a>
implements <a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>, <a href="../../java/lang/Comparable.html" title="interface in java.lang">Comparable</a>&lt;<a href="../../java/util/UUID.html" title="class in java.util">UUID</a>&gt;</pre><div class="block">A class that represents an immutable universally unique identifier (UUID). A UUID represents a 128-bit value.<p> There exist different variants of these global identifiers. The methods of this class are for manipulating the Leach-Salz variant, although the constructors allow the creation of any variant of UUID (described below).                                </p><p> The layout of a variant 2 (Leach-Salz) UUID is as follows: The most significant long consists of the following unsigned fields:<pre>
 0xFFFFFFFF00000000 time_low
 0x00000000FFFF0000 time_mid
 0x000000000000F000 version
 0x0000000000000FFF time_hi
 </pre> The least significant long consists of the following unsigned fields:<pre>
 0xC000000000000000 variant
 0x3FFF000000000000 clock_seq
 0x0000FFFFFFFFFFFF node
 </pre>                               </p><p> The variant field contains a value which identifies the layout of the <code>UUID</code>. The bit layout described above is valid only for a <code>UUID</code> with a variant value of 2, which indicates the Leach-Salz variant.                                   </p><p> The version field holds a value that describes the type of this <code>UUID</code>. There are four different basic types of UUIDs: time-based, DCE security, name-based, and randomly generated UUIDs. These types have a version value of 1, 2, 3 and 4, respectively.                                          </p><p> For more information including algorithms used to create <code>UUID</code>s, see <a href="http://www.ietf.org/rfc/rfc4122.txt"><i>RFC 4122: A Universally Unique IDentifier (UUID) URN Namespace       </i></a>, section 4.2 "Algorithms for Creating a Time-Based UUID".                   </p>               </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../serialized-form.html#java.util.UUID">Serialized Form </a> </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:UUID"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:UUID-long-long- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:UUID-long-long-"/><a name="UUID-long-long-"/><ul class="blockListLast"><li class="blockList"><h4>UUID</h4><pre>public UUID(long mostSigBits,
            long leastSigBits)</pre><div class="block">Constructs a new <code>UUID</code> using the specified data. <code>mostSigBits</code> is used for the most significant 64 bits of the <code>UUID</code> and <code>leastSigBits</code> becomes the least significant 64 bits of the <code>UUID</code>.                              </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>mostSigBits</code> - The most significant bits of the <code>UUID</code>         </dd><dd> <code>leastSigBits</code> - The least significant bits of the <code>UUID</code>         </dd> </dl></li></ul> <a end_ctx_id="constructor:UUID-long-long-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:randomUUID-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:randomUUID--"/><a name="randomUUID--"/><ul class="blockList"><li class="blockList"><h4>randomUUID</h4><pre>public static <a href="../../java/util/UUID.html" title="class in java.util">UUID</a> randomUUID()</pre><div class="block">Static factory to retrieve a type 4 (pseudo randomly generated) UUID. The <code>UUID</code> is generated using a cryptographically strong pseudo random number generator.                      </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>A randomly generated <code>UUID</code>   </dd> </dl></li></ul> <a end_ctx_id="method:randomUUID--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:nameUUIDFromBytes-byte:A- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:nameUUIDFromBytes-byte:A-"/><a name="nameUUIDFromBytes-byte:A-"/><ul class="blockList"><li class="blockList"><h4>nameUUIDFromBytes</h4><pre>public static <a href="../../java/util/UUID.html" title="class in java.util">UUID</a> nameUUIDFromBytes(byte[] name)</pre><div class="block">Static factory to retrieve a type 3 (name based) <code>UUID</code> based on the specified byte array.               </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>name</code> - A byte array to be used to construct a <code>UUID</code>            </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>A <code>UUID</code> generated from the specified array      </dd>  </dl></li></ul> <a end_ctx_id="method:nameUUIDFromBytes-byte:A-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:fromString-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:fromString-java.lang.String-"/><a name="fromString-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>fromString</h4><pre>public static <a href="../../java/util/UUID.html" title="class in java.util">UUID</a> fromString(<a href="../../java/lang/String.html" title="class in java.lang">String</a> name)</pre><div class="block">Creates a <code>UUID</code> from the string standard representation as described in the <a href="../../java/util/UUID.html#toString--"><code>toString()</code></a> method.             </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>name</code> - A string that specifies a <code>UUID</code>        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>A <code>UUID</code> with the specified value     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - If name does not conform to the string representation as described in <a href="../../java/util/UUID.html#toString--"><code>toString()</code></a>               </dd>   </dl></li></ul> <a end_ctx_id="method:fromString-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getLeastSignificantBits-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getLeastSignificantBits--"/><a name="getLeastSignificantBits--"/><ul class="blockList"><li class="blockList"><h4>getLeastSignificantBits</h4><pre>public long getLeastSignificantBits()</pre><div class="block">Returns the least significant 64 bits of this UUID's 128 bit value.           </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>The least significant 64 bits of this UUID's 128 bit value          </dd> </dl></li></ul> <a end_ctx_id="method:getLeastSignificantBits--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:getMostSignificantBits-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:getMostSignificantBits--"/><a name="getMostSignificantBits--"/><ul class="blockList"><li class="blockList"><h4>getMostSignificantBits</h4><pre>public long getMostSignificantBits()</pre><div class="block">Returns the most significant 64 bits of this UUID's 128 bit value.           </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>The most significant 64 bits of this UUID's 128 bit value          </dd> </dl></li></ul> <a end_ctx_id="method:getMostSignificantBits--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:version-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:version--"/><a name="version--"/><ul class="blockList"><li class="blockList"><h4>version</h4><pre>public int version()</pre><div class="block">The version number associated with this <code>UUID</code>. The version number describes how this <code>UUID</code> was generated. The version number has the following meaning:<ul><li>1 Time-based UUID  </li><li>2 DCE security UUID   </li><li>3 Name-based UUID  </li><li>4 Randomly generated UUID   </li></ul>                      </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>The version number of this <code>UUID</code>     </dd> </dl></li></ul> <a end_ctx_id="method:version--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:variant-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:variant--"/><a name="variant--"/><ul class="blockList"><li class="blockList"><h4>variant</h4><pre>public int variant()</pre><div class="block">The variant number associated with this <code>UUID</code>. The variant number describes the layout of the <code>UUID</code>. The variant number has the following meaning:<ul><li>0 Reserved for NCS backward compatibility     </li><li>2 <a href="http://www.ietf.org/rfc/rfc4122.txt">IETF RFC 4122</a> (Leach-Salz), used by this class      </li><li>6 Reserved, Microsoft Corporation backward compatibility     </li><li>7 Reserved for future definition    </li></ul>                      </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>The variant number of this <code>UUID</code>     </dd> </dl></li></ul> <a end_ctx_id="method:variant--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:timestamp-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:timestamp--"/><a name="timestamp--"/><ul class="blockList"><li class="blockList"><h4>timestamp</h4><pre>public long timestamp()</pre><div class="block">The timestamp value associated with this UUID.<p> The 60 bit timestamp value is constructed from the time_low, time_mid, and time_hi fields of this <code>UUID</code>. The resulting timestamp is measured in 100-nanosecond units since midnight, October 15, 1582 UTC.                               </p><p> The timestamp value is only meaningful in a time-based UUID, which has version type 1. If this <code>UUID</code> is not a time-based UUID then this method throws UnsupportedOperationException.                            </p>      </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>The timestamp of this <code>UUID</code>.    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/UnsupportedOperationException.html" title="class in java.lang">UnsupportedOperationException</a></code> - If this UUID is not a version 1 UUID           </dd>  </dl></li></ul> <a end_ctx_id="method:timestamp--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:clockSequence-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:clockSequence--"/><a name="clockSequence--"/><ul class="blockList"><li class="blockList"><h4>clockSequence</h4><pre>public int clockSequence()</pre><div class="block">The clock sequence value associated with this UUID.<p> The 14 bit clock sequence value is constructed from the clock sequence field of this UUID. The clock sequence field is used to guarantee temporal uniqueness in a time-based UUID.                              </p><p> The <code>clockSequence</code> value is only meaningful in a time-based UUID, which has version type 1. If this UUID is not a time-based UUID then this method throws UnsupportedOperationException.                            </p>       </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>The clock sequence of this <code>UUID</code>     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/UnsupportedOperationException.html" title="class in java.lang">UnsupportedOperationException</a></code> - If this UUID is not a version 1 UUID           </dd>  </dl></li></ul> <a end_ctx_id="method:clockSequence--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:node-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:node--"/><a name="node--"/><ul class="blockList"><li class="blockList"><h4>node</h4><pre>public long node()</pre><div class="block">The node value associated with this UUID.<p> The 48 bit node value is constructed from the node field of this UUID. This field is intended to hold the IEEE 802 address of the machine that generated this UUID to guarantee spatial uniqueness.                                   </p><p> The node value is only meaningful in a time-based UUID, which has version type 1. If this UUID is not a time-based UUID then this method throws UnsupportedOperationException.                            </p>      </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>The node value of this <code>UUID</code>     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/UnsupportedOperationException.html" title="class in java.lang">UnsupportedOperationException</a></code> - If this UUID is not a version 1 UUID           </dd>  </dl></li></ul> <a end_ctx_id="method:node--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:toString-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:toString--"/><a name="toString--"/><ul class="blockList"><li class="blockList"><h4>toString</h4><pre>public <a href="../../java/lang/String.html" title="class in java.lang">String</a> toString()</pre><div class="block">Returns a <code>String</code> object representing this <code>UUID</code>.<p> The UUID string representation is as described by this BNF:          </p><blockquote><pre>
 
<code>
 UUID                   = &lt;time_low&gt; "-" &lt;time_mid&gt; "-"
                          &lt;time_high_and_version&gt; "-"
                          &lt;variant_and_sequence&gt; "-"
                          &lt;node&gt;
 time_low               = 4*&lt;hexOctet&gt;
 time_mid               = 2*&lt;hexOctet&gt;
 time_high_and_version  = 2*&lt;hexOctet&gt;
 variant_and_sequence   = 2*&lt;hexOctet&gt;
 node                   = 6*&lt;hexOctet&gt;
 hexOctet               = &lt;hexDigit&gt;&lt;hexDigit&gt;
 hexDigit               =
       "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"
       | "a" | "b" | "c" | "d" | "e" | "f"
       | "A" | "B" | "C" | "D" | "E" | "F"
 </code></pre></blockquote>      </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/lang/Object.html#toString--">toString</a></code> in class <code><a href="../../java/lang/Object.html" title="class in java.lang">Object</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>A string representation of this <code>UUID</code>     </dd>  </dl></li></ul> <a end_ctx_id="method:toString--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:hashCode-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:hashCode--"/><a name="hashCode--"/><ul class="blockList"><li class="blockList"><h4>hashCode</h4><pre>public int hashCode()</pre><div class="block">Returns a hash code for this <code>UUID</code>.      </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/lang/Object.html#hashCode--">hashCode</a></code> in class <code><a href="../../java/lang/Object.html" title="class in java.lang">Object</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>A hash code value for this <code>UUID</code>      </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/Object.html#equals-java.lang.Object-"><code>Object.equals(java.lang.Object)</code></a>, <a href="../../java/lang/System.html#identityHashCode-java.lang.Object-"><code>System.identityHashCode(java.lang.Object)</code></a>  </dd>   </dl></li></ul> <a end_ctx_id="method:hashCode--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:equals-java.lang.Object- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:equals-java.lang.Object-"/><a name="equals-java.lang.Object-"/><ul class="blockList"><li class="blockList"><h4>equals</h4><pre>public boolean equals(<a href="../../java/lang/Object.html" title="class in java.lang">Object</a> obj)</pre><div class="block">Compares this object to the specified object. The result is <code>true</code> if and only if the argument is not <code>null</code>, is a <code>UUID</code> object, has the same variant, and contains the same value, bit for bit, as this <code>UUID</code>.                                      </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/lang/Object.html#equals-java.lang.Object-">equals</a></code> in class <code><a href="../../java/lang/Object.html" title="class in java.lang">Object</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>obj</code> - The object to be compared       </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <code>true</code> if the objects are the same; <code>false</code> otherwise         </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/lang/Object.html#hashCode--"><code>Object.hashCode()</code></a>, <a href="../../java/util/HashMap.html" title="class in java.util"><code>HashMap</code></a>  </dd>    </dl></li></ul> <a end_ctx_id="method:equals-java.lang.Object-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:compareTo-java.util.UUID- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:compareTo-java.util.UUID-"/><a name="compareTo-java.util.UUID-"/><ul class="blockListLast"><li class="blockList"><h4>compareTo</h4><pre>public int compareTo(<a href="../../java/util/UUID.html" title="class in java.util">UUID</a> val)</pre><div class="block">Compares this UUID with the specified UUID.<p> The first of two UUIDs is greater than the second if the most significant field in which the UUIDs differ is greater for the first UUID.                          </p>      </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/Comparable.html#compareTo-T-">compareTo</a></code> in interface <code><a href="../../java/lang/Comparable.html" title="interface in java.lang">Comparable</a>&lt;<a href="../../java/util/UUID.html" title="class in java.util">UUID</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>val</code> - <code>UUID</code> to which this <code>UUID</code> is to be compared           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>-1, 0 or 1 as this <code>UUID</code> is less than, equal to, or greater than <code>val</code>               </dd>   </dl></li></ul> <a end_ctx_id="method:compareTo-java.util.UUID-"/>  </td></tr></table></td></tr></table></diff></diffreport>