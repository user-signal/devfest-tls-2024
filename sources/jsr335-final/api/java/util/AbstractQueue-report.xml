<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:AbstractQueue [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:AbstractQueue"/><ul class="blockList"><li class="blockList"><dl> <dt> <span class="paramLabel">Type Parameters: </span>   </dt><dd> <code>E</code> - the type of elements held in this collection          </dd> </dl><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../java/lang/Iterable.html" title="interface in java.lang">Iterable</a>&lt;E&gt;, <a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;E&gt;, <a href="../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;E&gt;   </dd> </dl><dl> <dt>Direct Known Subclasses:  </dt><dd> <a href="../../java/util/concurrent/ArrayBlockingQueue.html" title="class in java.util.concurrent">ArrayBlockingQueue</a>, <a href="../../java/util/concurrent/ConcurrentLinkedQueue.html" title="class in java.util.concurrent">ConcurrentLinkedQueue</a>, <a href="../../java/util/concurrent/DelayQueue.html" title="class in java.util.concurrent">DelayQueue</a>, <a href="../../java/util/concurrent/LinkedBlockingDeque.html" title="class in java.util.concurrent">LinkedBlockingDeque</a>, <a href="../../java/util/concurrent/LinkedBlockingQueue.html" title="class in java.util.concurrent">LinkedBlockingQueue</a>, <a href="../../java/util/concurrent/LinkedTransferQueue.html" title="class in java.util.concurrent">LinkedTransferQueue</a>, <a href="../../java/util/concurrent/PriorityBlockingQueue.html" title="class in java.util.concurrent">PriorityBlockingQueue</a>, <a href="../../java/util/PriorityQueue.html" title="class in java.util">PriorityQueue</a>, <a href="../../java/util/concurrent/SynchronousQueue.html" title="class in java.util.concurrent">SynchronousQueue</a>         </dd> </dl> <hr/> <br/><pre>public abstract class <span class="typeNameLabel">AbstractQueue&lt;E&gt;</span>
extends <a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;E&gt;
implements <a href="../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;E&gt;</pre><div class="block">This class provides skeletal implementations of some <a href="../../java/util/Queue.html" title="interface in java.util"><code>Queue</code></a> operations. The implementations in this class are appropriate when the base implementation does <em>not</em> allow <tt>null</tt> elements. Methods <a href="../../java/util/AbstractQueue.html#add-E-"><code>add</code></a>, <a href="../../java/util/AbstractQueue.html#remove--"><code>remove</code></a>, and <a href="../../java/util/AbstractQueue.html#element--"><code>element</code></a> are based on <a href="../../java/util/Queue.html#offer-E-"><code>offer</code></a>, <a href="../../java/util/Queue.html#poll--"><code>poll</code></a>, and <a href="../../java/util/Queue.html#peek--"><code>peek</code></a>, respectively, but throw exceptions instead of indicating failure via <tt>false</tt> or <tt>null</tt> returns.<p>A <tt>Queue</tt> implementation that extends this class must minimally define a method <a href="../../java/util/Queue.html#offer-E-"><code>Queue.offer(E)</code></a> which does not permit insertion of <tt>null</tt> elements, along with methods <a href="../../java/util/Queue.html#peek--"><code>Queue.peek()</code></a>, <a href="../../java/util/Queue.html#poll--"><code>Queue.poll()</code></a>, <a href="../../java/util/Collection.html#size--"><code>Collection.size()</code></a>, and <a href="../../java/util/Collection.html#iterator--"><code>Collection.iterator()</code></a>. Typically, additional methods will be overridden as well. If these requirements cannot be met, consider instead subclassing <a href="../../java/util/AbstractCollection.html" title="class in java.util"><code>AbstractCollection</code></a>.                                              </p><p>This class is a member of the <a href="http://download.oracle.com/javase/7/docs/technotes/guides/collections/index.html"> Java Collections Framework   </a>.       </p>                                                 </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.5</dd> </dl>  </li></ul> </div> <a end_ctx_id="class:AbstractQueue"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:AbstractQueue-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:AbstractQueue--"/><a name="AbstractQueue--"/><ul class="blockListLast"><li class="blockList"><h4>AbstractQueue</h4><pre>protected AbstractQueue()</pre><div class="block">Constructor for use by subclasses.    </div></li></ul> <a end_ctx_id="constructor:AbstractQueue--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:add-E- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><a start_ctx_id="method:add-E-"/><a name="add-E-"/><ul class="blockList"><li class="blockList"><h4>add</h4><pre>public boolean add(<a href="../../java/util/AbstractQueue.html" title="type parameter in AbstractQueue">E</a> e)</pre><div class="block">Inserts the specified element into this queue if it is possible to do so immediately without violating capacity restrictions, returning <tt>true</tt> upon success and throwing an <tt>IllegalStateException</tt> if no space is currently available.<p>This implementation returns <tt>true</tt> if <tt>offer</tt> succeeds, else throws an <tt>IllegalStateException</tt>.          </p>                                </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#add-E-">add</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/AbstractQueue.html" title="type parameter in AbstractQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Queue.html#add-E-">add</a></code> in interface <code><a href="../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../java/util/AbstractQueue.html" title="type parameter in AbstractQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#add-E-">add</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/AbstractQueue.html" title="type parameter in AbstractQueue">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>e</code> - the element to add      </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> (as specified by <a href="../../java/util/Collection.html#add-E-"><code>Collection.add(E)</code></a>)     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IllegalStateException.html" title="class in java.lang">IllegalStateException</a></code> - if the element cannot be added at this time due to capacity restrictions               </dd><dd> <code><a href="../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of the specified element prevents it from being added to this queue                 </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified element is null and this queue does not permit null elements                </dd><dd> <code><a href="../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if some property of this element prevents it from being added to this queue                </dd>      </dl></li></ul> <a end_ctx_id="method:add-E-"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:remove-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:remove--"/><a name="remove--"/><ul class="blockList"><li class="blockList"><h4>remove</h4><pre>public <a href="../../java/util/AbstractQueue.html" title="type parameter in AbstractQueue">E</a> remove()</pre><div class="block">Retrieves and removes the head of this queue. This method differs from <a href="../../java/util/Queue.html#poll--"><code>poll</code></a> only in that it throws an exception if this queue is empty.<p>This implementation returns the result of <tt>poll</tt> unless the queue is empty.           </p>                        </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Queue.html#remove--">remove</a></code> in interface <code><a href="../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../java/util/AbstractQueue.html" title="type parameter in AbstractQueue">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of this queue    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/util/NoSuchElementException.html" title="class in java.util">NoSuchElementException</a></code> - if this queue is empty       </dd>   </dl></li></ul> <a end_ctx_id="method:remove--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:element-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:element--"/><a name="element--"/><ul class="blockList"><li class="blockList"><h4>element</h4><pre>public <a href="../../java/util/AbstractQueue.html" title="type parameter in AbstractQueue">E</a> element()</pre><div class="block">Retrieves, but does not remove, the head of this queue. This method differs from <a href="../../java/util/Queue.html#peek--"><code>peek</code></a> only in that it throws an exception if this queue is empty.<p>This implementation returns the result of <tt>peek</tt> unless the queue is empty.           </p>                          </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Queue.html#element--">element</a></code> in interface <code><a href="../../java/util/Queue.html" title="interface in java.util">Queue</a>&lt;<a href="../../java/util/AbstractQueue.html" title="type parameter in AbstractQueue">E</a>&gt;</code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the head of this queue    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/util/NoSuchElementException.html" title="class in java.util">NoSuchElementException</a></code> - if this queue is empty       </dd>   </dl></li></ul> <a end_ctx_id="method:element--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:clear-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:clear--"/><a name="clear--"/><ul class="blockList"><li class="blockList"><h4>clear</h4><pre>public void clear()</pre><div class="block">Removes all of the elements from this queue. The queue will be empty after this call returns.<p>This implementation repeatedly invokes <a href="../../java/util/Queue.html#poll--"><code>poll</code></a> until it returns <tt>null</tt>.        </p>                </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#clear--">clear</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/AbstractQueue.html" title="type parameter in AbstractQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#clear--">clear</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/AbstractQueue.html" title="type parameter in AbstractQueue">E</a>&gt;</code>  </dd>  </dl></li></ul> <a end_ctx_id="method:clear--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:addAll-java.util.Collection- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:addAll-java.util.Collection-"/><a name="addAll-java.util.Collection-"/><ul class="blockListLast"><li class="blockList"><h4>addAll</h4><pre>public boolean addAll(<a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;? extends <a href="../../java/util/AbstractQueue.html" title="type parameter in AbstractQueue">E</a>&gt; c)</pre><div class="block">Adds all of the elements in the specified collection to this queue. Attempts to addAll of a queue to itself result in <tt>IllegalArgumentException</tt>. Further, the behavior of this operation is undefined if the specified collection is modified while the operation is in progress.<p>This implementation iterates over the specified collection, and adds each element returned by the iterator to this queue, in turn. A runtime exception encountered while trying to add an element (including, in particular, a <tt>null</tt> element) may result in only some of the elements having been successfully added when the associated exception is thrown.                                                     </p>                                          </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/util/Collection.html#addAll-java.util.Collection-">addAll</a></code> in interface <code><a href="../../java/util/Collection.html" title="interface in java.util">Collection</a>&lt;<a href="../../java/util/AbstractQueue.html" title="type parameter in AbstractQueue">E</a>&gt;</code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/util/AbstractCollection.html#addAll-java.util.Collection-">addAll</a></code> in class <code><a href="../../java/util/AbstractCollection.html" title="class in java.util">AbstractCollection</a>&lt;<a href="../../java/util/AbstractQueue.html" title="type parameter in AbstractQueue">E</a>&gt;</code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>c</code> - collection containing elements to be added to this queue           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd> <tt>true</tt> if this queue changed as a result of the call           </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/ClassCastException.html" title="class in java.lang">ClassCastException</a></code> - if the class of an element of the specified collection prevents it from being added to this queue                    </dd><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the specified collection contains a null element and this queue does not permit null elements, or if the specified collection is null                         </dd><dd> <code><a href="../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if some property of an element of the specified collection prevents it from being added to this queue, or if the specified collection is this queue                            </dd><dd> <code><a href="../../java/lang/IllegalStateException.html" title="class in java.lang">IllegalStateException</a></code> - if not all the elements can be added at this time due to insertion restrictions                 </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/util/AbstractQueue.html#add-E-"><code>add(Object)</code></a> </dd>      </dl></li></ul> <a end_ctx_id="method:addAll-java.util.Collection-"/>  </td></tr></table></td></tr></table></diff></diffreport>