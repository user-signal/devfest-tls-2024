<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:FileWriter [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:FileWriter"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../java/io/Closeable.html" title="interface in java.io">Closeable</a>, <a href="../../java/io/Flushable.html" title="interface in java.io">Flushable</a>, <a href="../../java/lang/Appendable.html" title="interface in java.lang">Appendable</a>, <a href="../../java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a>    </dd> </dl> <hr/> <br/><pre>public class <span class="typeNameLabel">FileWriter</span>
extends <a href="../../java/io/OutputStreamWriter.html" title="class in java.io">OutputStreamWriter</a></pre><div class="block">Convenience class for writing character files. The constructors of this class assume that the default character encoding and the default byte-buffer size are acceptable. To specify these values yourself, construct an OutputStreamWriter on a FileOutputStream.<p>Whether or not a file is available or may be created depends upon the underlying platform. Some platforms, in particular, allow a file to be opened for writing by only one <tt>FileWriter</tt> (or other file-writing object) at a time. In such situations the constructors in this class will fail if the file involved is already open.                                                       </p><p> <code>FileWriter</code> is meant for writing streams of characters. For writing streams of raw bytes, consider using a <code>FileOutputStream</code>.                  </p>                                  </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>JDK1.1</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/OutputStreamWriter.html" title="class in java.io"><code>OutputStreamWriter</code></a>, <a href="../../java/io/FileOutputStream.html" title="class in java.io"><code>FileOutputStream</code></a>  </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:FileWriter"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:FileWriter-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:FileWriter-java.lang.String-"/><a name="FileWriter-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>FileWriter</h4><pre>public FileWriter(<a href="../../java/lang/String.html" title="class in java.lang">String</a> fileName)
           throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Constructs a FileWriter object given a file name.       </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>fileName</code> - String The system-dependent filename.      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if the named file exists but is a directory rather than a regular file, does not exist but cannot be created, or cannot be opened for any other reason                               </dd>  </dl></li></ul> <a end_ctx_id="constructor:FileWriter-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:FileWriter-java.lang.String-boolean- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:FileWriter-java.lang.String-boolean-"/><a name="FileWriter-java.lang.String-boolean-"/><ul class="blockList"><li class="blockList"><h4>FileWriter</h4><pre>public FileWriter(<a href="../../java/lang/String.html" title="class in java.lang">String</a> fileName,
                  boolean append)
           throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Constructs a FileWriter object given a file name with a boolean indicating whether or not to append the data written.                   </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>fileName</code> - String The system-dependent filename.      </dd><dd> <code>append</code> - boolean if <code>true</code>, then data will be written to the end of the file rather than the beginning.                    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if the named file exists but is a directory rather than a regular file, does not exist but cannot be created, or cannot be opened for any other reason                               </dd>  </dl></li></ul> <a end_ctx_id="constructor:FileWriter-java.lang.String-boolean-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:FileWriter-java.io.File- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:FileWriter-java.io.File-"/><a name="FileWriter-java.io.File-"/><ul class="blockList"><li class="blockList"><h4>FileWriter</h4><pre>public FileWriter(<a href="../../java/io/File.html" title="class in java.io">File</a> file)
           throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Constructs a FileWriter object given a File object.       </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>file</code> - a File object to write to.        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if the file exists but is a directory rather than a regular file, does not exist but cannot be created, or cannot be opened for any other reason                              </dd>  </dl></li></ul> <a end_ctx_id="constructor:FileWriter-java.io.File-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:FileWriter-java.io.File-boolean- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:FileWriter-java.io.File-boolean-"/><a name="FileWriter-java.io.File-boolean-"/><ul class="blockList"><li class="blockList"><h4>FileWriter</h4><pre>public FileWriter(<a href="../../java/io/File.html" title="class in java.io">File</a> file,
                  boolean append)
           throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Constructs a FileWriter object given a File object. If the second argument is <code>true</code>, then bytes will be written to the end of the file rather than the beginning.                            </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>file</code> - a File object to write to        </dd><dd> <code>append</code> - if <code>true</code>, then bytes will be written to the end of the file rather than the beginning                   </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if the file exists but is a directory rather than a regular file, does not exist but cannot be created, or cannot be opened for any other reason                              </dd> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.4</dd>   </dl></li></ul> <a end_ctx_id="constructor:FileWriter-java.io.File-boolean-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:FileWriter-java.io.FileDescriptor- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:FileWriter-java.io.FileDescriptor-"/><a name="FileWriter-java.io.FileDescriptor-"/><ul class="blockListLast"><li class="blockList"><h4>FileWriter</h4><pre>public FileWriter(<a href="../../java/io/FileDescriptor.html" title="class in java.io">FileDescriptor</a> fd)</pre><div class="block">Constructs a FileWriter object associated with a file descriptor.        </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>fd</code> - FileDescriptor object to write to.       </dd> </dl></li></ul> <a end_ctx_id="constructor:FileWriter-java.io.FileDescriptor-"/>  </td></tr></table></td></tr></table></diff></diffreport>