<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:DataOutputStream [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:DataOutputStream"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../java/io/Closeable.html" title="interface in java.io">Closeable</a>, <a href="../../java/io/DataOutput.html" title="interface in java.io">DataOutput</a>, <a href="../../java/io/Flushable.html" title="interface in java.io">Flushable</a>, <a href="../../java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a>    </dd> </dl> <hr/> <br/><pre>public class <span class="typeNameLabel">DataOutputStream</span>
extends <a href="../../java/io/FilterOutputStream.html" title="class in java.io">FilterOutputStream</a>
implements <a href="../../java/io/DataOutput.html" title="interface in java.io">DataOutput</a></pre><div class="block">A data output stream lets an application write primitive Java data types to an output stream in a portable way. An application can then use a data input stream to read the data back in.                                  </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>JDK1.0</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/DataInputStream.html" title="class in java.io"><code>DataInputStream</code></a> </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:DataOutputStream"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:written [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:written"/><a name="written"/><ul class="blockListLast"><li class="blockList"><h4>written</h4><pre>protected int written</pre><div class="block">The number of bytes written to the data output stream so far. If this counter overflows, it will be wrapped to Integer.MAX_VALUE.                     </div></li></ul> <a end_ctx_id="field:written"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:DataOutputStream-java.io.OutputStream- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:DataOutputStream-java.io.OutputStream-"/><a name="DataOutputStream-java.io.OutputStream-"/><ul class="blockListLast"><li class="blockList"><h4>DataOutputStream</h4><pre>public DataOutputStream(<a href="../../java/io/OutputStream.html" title="class in java.io">OutputStream</a> out)</pre><div class="block">Creates a new data output stream to write data to the specified underlying output stream. The counter <code>written</code> is set to zero.                     </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>out</code> - the underlying output stream, to be saved for later use.            </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/FilterOutputStream.html#out"><code>FilterOutputStream.out</code></a> </dd>  </dl></li></ul> <a end_ctx_id="constructor:DataOutputStream-java.io.OutputStream-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:write-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:write-int-"/><a name="write-int-"/><ul class="blockList"><li class="blockList"><h4>write</h4><pre>public void write(int b)
           throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Writes the specified byte (the low eight bits of the argument <code>b</code>) to the underlying output stream. If no exception is thrown, the counter <code>written</code> is incremented by <code>1</code>.<p> Implements the <code>write</code> method of <code>OutputStream</code>.      </p>                            </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/DataOutput.html#write-int-">write</a></code> in interface <code><a href="../../java/io/DataOutput.html" title="interface in java.io">DataOutput</a></code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/FilterOutputStream.html#write-int-">write</a></code> in class <code><a href="../../java/io/FilterOutputStream.html" title="class in java.io">FilterOutputStream</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>b</code> - the <code>byte</code> to be written.       </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs.       </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/FilterOutputStream.html#out"><code>FilterOutputStream.out</code></a> </dd>     </dl></li></ul> <a end_ctx_id="method:write-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:write-byte:A-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:write-byte:A-int-int-"/><a name="write-byte:A-int-int-"/><ul class="blockList"><li class="blockList"><h4>write</h4><pre>public void write(byte[] b,
                  int off,
                  int len)
           throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Writes <code>len</code> bytes from the specified byte array starting at offset <code>off</code> to the underlying output stream. If no exception is thrown, the counter <code>written</code> is incremented by <code>len</code>.                            </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/DataOutput.html#write-byte:A-int-int-">write</a></code> in interface <code><a href="../../java/io/DataOutput.html" title="interface in java.io">DataOutput</a></code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/FilterOutputStream.html#write-byte:A-int-int-">write</a></code> in class <code><a href="../../java/io/FilterOutputStream.html" title="class in java.io">FilterOutputStream</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>b</code> - the data.    </dd><dd> <code>off</code> - the start offset in the data.        </dd><dd> <code>len</code> - the number of bytes to write.        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs.       </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/FilterOutputStream.html#out"><code>FilterOutputStream.out</code></a> </dd>     </dl></li></ul> <a end_ctx_id="method:write-byte:A-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:flush-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:flush--"/><a name="flush--"/><ul class="blockList"><li class="blockList"><h4>flush</h4><pre>public void flush()
           throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Flushes this data output stream. This forces any buffered output bytes to be written out to the stream.<p> The <code>flush</code> method of <code>DataOutputStream</code> calls the <code>flush</code> method of its underlying output stream.              </p>                 </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/Flushable.html#flush--">flush</a></code> in interface <code><a href="../../java/io/Flushable.html" title="interface in java.io">Flushable</a></code>  </dd> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/FilterOutputStream.html#flush--">flush</a></code> in class <code><a href="../../java/io/FilterOutputStream.html" title="class in java.io">FilterOutputStream</a></code>  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs.       </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/FilterOutputStream.html#out"><code>FilterOutputStream.out</code></a>, <a href="../../java/io/OutputStream.html#flush--"><code>OutputStream.flush()</code></a>  </dd>    </dl></li></ul> <a end_ctx_id="method:flush--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:writeBoolean-boolean- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:writeBoolean-boolean-"/><a name="writeBoolean-boolean-"/><ul class="blockList"><li class="blockList"><h4>writeBoolean</h4><pre>public final void writeBoolean(boolean v)
                        throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Writes a <code>boolean</code> to the underlying output stream as a 1-byte value. The value <code>true</code> is written out as the value <code>(byte)1</code>; the value <code>false</code> is written out as the value <code>(byte)0</code>. If no exception is thrown, the counter <code>written</code> is incremented by <code>1</code>.                                           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/DataOutput.html#writeBoolean-boolean-">writeBoolean</a></code> in interface <code><a href="../../java/io/DataOutput.html" title="interface in java.io">DataOutput</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>v</code> - a <code>boolean</code> value to be written.        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs.       </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/FilterOutputStream.html#out"><code>FilterOutputStream.out</code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:writeBoolean-boolean-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:writeByte-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:writeByte-int-"/><a name="writeByte-int-"/><ul class="blockList"><li class="blockList"><h4>writeByte</h4><pre>public final void writeByte(int v)
                     throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Writes out a <code>byte</code> to the underlying output stream as a 1-byte value. If no exception is thrown, the counter <code>written</code> is incremented by <code>1</code>.                        </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/DataOutput.html#writeByte-int-">writeByte</a></code> in interface <code><a href="../../java/io/DataOutput.html" title="interface in java.io">DataOutput</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>v</code> - a <code>byte</code> value to be written.        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs.       </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/FilterOutputStream.html#out"><code>FilterOutputStream.out</code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:writeByte-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:writeShort-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:writeShort-int-"/><a name="writeShort-int-"/><ul class="blockList"><li class="blockList"><h4>writeShort</h4><pre>public final void writeShort(int v)
                      throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Writes a <code>short</code> to the underlying output stream as two bytes, high byte first. If no exception is thrown, the counter <code>written</code> is incremented by <code>2</code>.                         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/DataOutput.html#writeShort-int-">writeShort</a></code> in interface <code><a href="../../java/io/DataOutput.html" title="interface in java.io">DataOutput</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>v</code> - a <code>short</code> to be written.       </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs.       </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/FilterOutputStream.html#out"><code>FilterOutputStream.out</code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:writeShort-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:writeChar-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:writeChar-int-"/><a name="writeChar-int-"/><ul class="blockList"><li class="blockList"><h4>writeChar</h4><pre>public final void writeChar(int v)
                     throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Writes a <code>char</code> to the underlying output stream as a 2-byte value, high byte first. If no exception is thrown, the counter <code>written</code> is incremented by <code>2</code>.                          </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/DataOutput.html#writeChar-int-">writeChar</a></code> in interface <code><a href="../../java/io/DataOutput.html" title="interface in java.io">DataOutput</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>v</code> - a <code>char</code> value to be written.        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs.       </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/FilterOutputStream.html#out"><code>FilterOutputStream.out</code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:writeChar-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:writeInt-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:writeInt-int-"/><a name="writeInt-int-"/><ul class="blockList"><li class="blockList"><h4>writeInt</h4><pre>public final void writeInt(int v)
                    throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Writes an <code>int</code> to the underlying output stream as four bytes, high byte first. If no exception is thrown, the counter <code>written</code> is incremented by <code>4</code>.                         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/DataOutput.html#writeInt-int-">writeInt</a></code> in interface <code><a href="../../java/io/DataOutput.html" title="interface in java.io">DataOutput</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>v</code> - an <code>int</code> to be written.       </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs.       </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/FilterOutputStream.html#out"><code>FilterOutputStream.out</code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:writeInt-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:writeLong-long- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:writeLong-long-"/><a name="writeLong-long-"/><ul class="blockList"><li class="blockList"><h4>writeLong</h4><pre>public final void writeLong(long v)
                     throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Writes a <code>long</code> to the underlying output stream as eight bytes, high byte first. In no exception is thrown, the counter <code>written</code> is incremented by <code>8</code>.                         </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/DataOutput.html#writeLong-long-">writeLong</a></code> in interface <code><a href="../../java/io/DataOutput.html" title="interface in java.io">DataOutput</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>v</code> - a <code>long</code> to be written.       </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs.       </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/FilterOutputStream.html#out"><code>FilterOutputStream.out</code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:writeLong-long-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:writeFloat-float- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:writeFloat-float-"/><a name="writeFloat-float-"/><ul class="blockList"><li class="blockList"><h4>writeFloat</h4><pre>public final void writeFloat(float v)
                      throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Converts the float argument to an <code>int</code> using the <code>floatToIntBits</code> method in class <code>Float</code>, and then writes that <code>int</code> value to the underlying output stream as a 4-byte quantity, high byte first. If no exception is thrown, the counter <code>written</code> is incremented by <code>4</code>.                                           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/DataOutput.html#writeFloat-float-">writeFloat</a></code> in interface <code><a href="../../java/io/DataOutput.html" title="interface in java.io">DataOutput</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>v</code> - a <code>float</code> value to be written.        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs.       </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/FilterOutputStream.html#out"><code>FilterOutputStream.out</code></a>, <a href="../../java/lang/Float.html#floatToIntBits-float-"><code>Float.floatToIntBits(float)</code></a>  </dd>    </dl></li></ul> <a end_ctx_id="method:writeFloat-float-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:writeDouble-double- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:writeDouble-double-"/><a name="writeDouble-double-"/><ul class="blockList"><li class="blockList"><h4>writeDouble</h4><pre>public final void writeDouble(double v)
                       throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Converts the double argument to a <code>long</code> using the <code>doubleToLongBits</code> method in class <code>Double</code>, and then writes that <code>long</code> value to the underlying output stream as an 8-byte quantity, high byte first. If no exception is thrown, the counter <code>written</code> is incremented by <code>8</code>.                                           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/DataOutput.html#writeDouble-double-">writeDouble</a></code> in interface <code><a href="../../java/io/DataOutput.html" title="interface in java.io">DataOutput</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>v</code> - a <code>double</code> value to be written.        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs.       </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/FilterOutputStream.html#out"><code>FilterOutputStream.out</code></a>, <a href="../../java/lang/Double.html#doubleToLongBits-double-"><code>Double.doubleToLongBits(double)</code></a>  </dd>    </dl></li></ul> <a end_ctx_id="method:writeDouble-double-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:writeBytes-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:writeBytes-java.lang.String-"/><a name="writeBytes-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>writeBytes</h4><pre>public final void writeBytes(<a href="../../java/lang/String.html" title="class in java.lang">String</a> s)
                      throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Writes out the string to the underlying output stream as a sequence of bytes. Each character in the string is written out, in sequence, by discarding its high eight bits. If no exception is thrown, the counter <code>written</code> is incremented by the length of <code>s</code>.                                            </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/DataOutput.html#writeBytes-java.lang.String-">writeBytes</a></code> in interface <code><a href="../../java/io/DataOutput.html" title="interface in java.io">DataOutput</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>s</code> - a string of bytes to be written.         </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs.       </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/FilterOutputStream.html#out"><code>FilterOutputStream.out</code></a> </dd>    </dl></li></ul> <a end_ctx_id="method:writeBytes-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:writeChars-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:writeChars-java.lang.String-"/><a name="writeChars-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>writeChars</h4><pre>public final void writeChars(<a href="../../java/lang/String.html" title="class in java.lang">String</a> s)
                      throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Writes a string to the underlying output stream as a sequence of characters. Each character is written to the data output stream as if by the <code>writeChar</code> method. If no exception is thrown, the counter <code>written</code> is incremented by twice the length of <code>s</code>.                                           </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/DataOutput.html#writeChars-java.lang.String-">writeChars</a></code> in interface <code><a href="../../java/io/DataOutput.html" title="interface in java.io">DataOutput</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>s</code> - a <code>String</code> value to be written.        </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs.       </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/DataOutputStream.html#writeChar-int-"><code>writeChar(int)</code></a>, <a href="../../java/io/FilterOutputStream.html#out"><code>FilterOutputStream.out</code></a>  </dd>    </dl></li></ul> <a end_ctx_id="method:writeChars-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:writeUTF-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:writeUTF-java.lang.String-"/><a name="writeUTF-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>writeUTF</h4><pre>public final void writeUTF(<a href="../../java/lang/String.html" title="class in java.lang">String</a> str)
                    throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Writes a string to the underlying output stream using <a href="DataInput.html#modified-utf-8">modified UTF-8 </a> encoding in a machine-independent manner.<p> First, two bytes are written to the output stream as if by the <code>writeShort</code> method giving the number of bytes to follow. This value is the number of bytes actually written out, not the length of the string. Following the length, each character of the string is output, in sequence, using the modified UTF-8 encoding for the character. If no exception is thrown, the counter <code>written</code> is incremented by the total number of bytes written to the output stream. This will be at least two plus the length of <code>str</code>, and at most two plus thrice the length of <code>str</code>.                                                                                                    </p>              </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/DataOutput.html#writeUTF-java.lang.String-">writeUTF</a></code> in interface <code><a href="../../java/io/DataOutput.html" title="interface in java.io">DataOutput</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>str</code> - a string to be written.       </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs.       </dd>   </dl></li></ul> <a end_ctx_id="method:writeUTF-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:size-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:size--"/><a name="size--"/><ul class="blockListLast"><li class="blockList"><h4>size</h4><pre>public final int size()</pre><div class="block">Returns the current value of the counter <code>written</code>, the number of bytes written to this data output stream so far. If the counter overflows, it will be wrapped to Integer.MAX_VALUE.                             </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the value of the <code>written</code> field.     </dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/io/DataOutputStream.html#written"><code>written</code></a> </dd>  </dl></li></ul> <a end_ctx_id="method:size--"/>  </td></tr></table></td></tr></table></diff></diffreport>