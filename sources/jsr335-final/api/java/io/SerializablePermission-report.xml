<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:SerializablePermission [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:SerializablePermission"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../java/io/Serializable.html" title="interface in java.io">Serializable</a>, <a href="../../java/security/Guard.html" title="interface in java.security">Guard</a>  </dd> </dl> <hr/> <br/><pre>public final class <span class="typeNameLabel">SerializablePermission</span>
extends <a href="../../java/security/BasicPermission.html" title="class in java.security">BasicPermission</a></pre><div class="block">This class is for Serializable permissions. A SerializablePermission contains a name (also referred to as a "target name") but no actions list; you either have the named permission or you don't.<p> The target name is the name of the Serializable permission (see below).            </p><p> The following table lists all the possible SerializablePermission target names, and for each provides a description of what the permission allows and a discussion of the risks of granting code the permission.<table border="1" cellpadding="5" summary="Permission target name, what the permission allows, and associated risks"><tbody><tr><th>Permission Target Name  </th><th>What the Permission Allows   </th><th>Risks of Allowing this Permission    </th></tr><tr><td>enableSubclassImplementation</td><td>Subclass implementation of ObjectOutputStream or ObjectInputStream to override the default serialization or deserialization, respectively, of objects               </td><td>Code can use this to serialize or deserialize classes in a purposefully malfeasant manner. For example, during serialization, malicious code can use this to purposefully store confidential private field data in a way easily accessible to attackers. Or, during deserialization it could, for example, deserialize a class with all its private fields zeroed out.                                                     </td></tr><tr><td>enableSubstitution</td><td>Substitution of one object for another during serialization or deserialization         </td><td>This is dangerous because malicious code can replace the actual object with one which has incorrect or malignant data.                  </td></tr></tbody></table>                                </p>                              </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.2</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../java/security/BasicPermission.html" title="class in java.security"><code>BasicPermission</code></a>, <a href="../../java/security/Permission.html" title="class in java.security"><code>Permission</code></a>, <a href="../../java/security/Permissions.html" title="class in java.security"><code>Permissions</code></a>, <a href="../../java/security/PermissionCollection.html" title="class in java.security"><code>PermissionCollection</code></a>, <a href="../../java/lang/SecurityManager.html" title="class in java.lang"><code>SecurityManager</code></a>, <a href="../../serialized-form.html#java.io.SerializablePermission">Serialized Form </a>      </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:SerializablePermission"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:SerializablePermission-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:SerializablePermission-java.lang.String-"/><a name="SerializablePermission-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>SerializablePermission</h4><pre>public SerializablePermission(<a href="../../java/lang/String.html" title="class in java.lang">String</a> name)</pre><div class="block">Creates a new SerializablePermission with the specified name. The name is the symbolic name of the SerializablePermission, such as "enableSubstitution", etc.                    </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>name</code> - the name of the SerializablePermission.       </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if <code>name</code> is <code>null</code>.      </dd><dd> <code><a href="../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if <code>name</code> is empty.      </dd>  </dl></li></ul> <a end_ctx_id="constructor:SerializablePermission-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:SerializablePermission-java.lang.String-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:SerializablePermission-java.lang.String-java.lang.String-"/><a name="SerializablePermission-java.lang.String-java.lang.String-"/><ul class="blockListLast"><li class="blockList"><h4>SerializablePermission</h4><pre>public SerializablePermission(<a href="../../java/lang/String.html" title="class in java.lang">String</a> name,
                              <a href="../../java/lang/String.html" title="class in java.lang">String</a> actions)</pre><div class="block">Creates a new SerializablePermission object with the specified name. The name is the symbolic name of the SerializablePermission, and the actions String is currently unused and should be null.                            </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>name</code> - the name of the SerializablePermission.       </dd><dd> <code>actions</code> - currently unused and must be set to null          </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if <code>name</code> is <code>null</code>.      </dd><dd> <code><a href="../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if <code>name</code> is empty.      </dd>  </dl></li></ul> <a end_ctx_id="constructor:SerializablePermission-java.lang.String-java.lang.String-"/>  </td></tr></table></td></tr></table></diff></diffreport>