<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:CharArrayReader [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:CharArrayReader"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../java/io/Closeable.html" title="interface in java.io">Closeable</a>, <a href="../../java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a>, <a href="../../java/lang/Readable.html" title="interface in java.lang">Readable</a>   </dd> </dl> <hr/> <br/><pre>public class <span class="typeNameLabel">CharArrayReader</span>
extends <a href="../../java/io/Reader.html" title="class in java.io">Reader</a></pre><div class="block">This class implements a character buffer that can be used as a character-input stream.             </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>JDK1.1</dd> </dl>  </li></ul> </div> <a end_ctx_id="class:CharArrayReader"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:buf [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:buf"/><a name="buf"/><ul class="blockList"><li class="blockList"><h4>buf</h4><pre>protected char[] buf</pre><div class="block">The character buffer.  </div></li></ul> <a end_ctx_id="field:buf"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:pos [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:pos"/><a name="pos"/><ul class="blockList"><li class="blockList"><h4>pos</h4><pre>protected int pos</pre><div class="block">The current buffer position.   </div></li></ul> <a end_ctx_id="field:pos"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:markedPos [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:markedPos"/><a name="markedPos"/><ul class="blockList"><li class="blockList"><h4>markedPos</h4><pre>protected int markedPos</pre><div class="block">The position of mark in buffer.     </div></li></ul> <a end_ctx_id="field:markedPos"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:count [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:count"/><a name="count"/><ul class="blockListLast"><li class="blockList"><h4>count</h4><pre>protected int count</pre><div class="block">The index of the end of this buffer. There is not valid data at or beyond this index.                 </div></li></ul> <a end_ctx_id="field:count"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:CharArrayReader-char:A- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:CharArrayReader-char:A-"/><a name="CharArrayReader-char:A-"/><ul class="blockList"><li class="blockList"><h4>CharArrayReader</h4><pre>public CharArrayReader(char[] buf)</pre><div class="block">Creates a CharArrayReader from the specified array of chars.        </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>buf</code> - Input buffer (not copied)      </dd> </dl></li></ul> <a end_ctx_id="constructor:CharArrayReader-char:A-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:CharArrayReader-char:A-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:CharArrayReader-char:A-int-int-"/><a name="CharArrayReader-char:A-int-int-"/><ul class="blockListLast"><li class="blockList"><h4>CharArrayReader</h4><pre>public CharArrayReader(char[] buf,
                       int offset,
                       int length)</pre><div class="block">Creates a CharArrayReader from the specified array of chars.<p> The resulting reader will start reading at the given <tt>offset</tt>. The total number of <tt>char</tt> values that can be read from this reader will be either <tt>length</tt> or <tt>buf.length-offset</tt>, whichever is smaller.                                </p>        </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>buf</code> - Input buffer (not copied)      </dd><dd> <code>offset</code> - Offset of the first char to read         </dd><dd> <code>length</code> - Number of chars to read       </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - If <tt>offset</tt> is negative or greater than <tt>buf.length</tt>, or if <tt>length</tt> is negative, or if the sum of these two values is negative.                         </dd>  </dl></li></ul> <a end_ctx_id="constructor:CharArrayReader-char:A-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:read-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:read--"/><a name="read--"/><ul class="blockList"><li class="blockList"><h4>read</h4><pre>public int read()
         throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Reads a single character.   </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/Reader.html#read--">read</a></code> in class <code><a href="../../java/io/Reader.html" title="class in java.io">Reader</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>The character read, as an integer in the range 0 to 65535 (<tt>0x00-0xffff</tt>), or -1 if the end of the stream has been reached                       </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - If an I/O error occurs       </dd>   </dl></li></ul> <a end_ctx_id="method:read--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:read-char:A-int-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:read-char:A-int-int-"/><a name="read-char:A-int-int-"/><ul class="blockList"><li class="blockList"><h4>read</h4><pre>public int read(char[] b,
                int off,
                int len)
         throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Reads characters into a portion of an array.       </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/Reader.html#read-char:A-int-int-">read</a></code> in class <code><a href="../../java/io/Reader.html" title="class in java.io">Reader</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>b</code> - Destination buffer    </dd><dd> <code>off</code> - Offset at which to start storing characters         </dd><dd> <code>len</code> - Maximum number of characters to read        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>The actual number of characters read, or -1 if the end of the stream has been reached                </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - If an I/O error occurs       </dd>    </dl></li></ul> <a end_ctx_id="method:read-char:A-int-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:skip-long- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:skip-long-"/><a name="skip-long-"/><ul class="blockList"><li class="blockList"><h4>skip</h4><pre>public long skip(long n)
          throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Skips characters. Returns the number of characters that were skipped.<p>The <code>n</code> parameter may be negative, even though the <code>skip</code> method of the <a href="../../java/io/Reader.html" title="class in java.io"><code>Reader</code></a> superclass throws an exception in this case. If <code>n</code> is negative, then this method does nothing and returns <code>0</code>.                                </p>         </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/Reader.html#skip-long-">skip</a></code> in class <code><a href="../../java/io/Reader.html" title="class in java.io">Reader</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>n</code> - The number of characters to skip        </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>The number of characters actually skipped     </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - If the stream is closed, or an I/O error occurs            </dd>    </dl></li></ul> <a end_ctx_id="method:skip-long-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:ready-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:ready--"/><a name="ready--"/><ul class="blockList"><li class="blockList"><h4>ready</h4><pre>public boolean ready()
              throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Tells whether this stream is ready to be read. Character-array readers are always ready to be read.                </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/Reader.html#ready--">ready</a></code> in class <code><a href="../../java/io/Reader.html" title="class in java.io">Reader</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>True if the next read() is guaranteed not to block for input, false otherwise. Note that returning false does not guarantee that the next read will block.                          </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - If an I/O error occurs       </dd>   </dl></li></ul> <a end_ctx_id="method:ready--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:markSupported-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:markSupported--"/><a name="markSupported--"/><ul class="blockList"><li class="blockList"><h4>markSupported</h4><pre>public boolean markSupported()</pre><div class="block">Tells whether this stream supports the mark() operation, which it does.          </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/Reader.html#markSupported--">markSupported</a></code> in class <code><a href="../../java/io/Reader.html" title="class in java.io">Reader</a></code>  </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>true if and only if this stream supports the mark operation.          </dd>  </dl></li></ul> <a end_ctx_id="method:markSupported--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:mark-int- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:mark-int-"/><a name="mark-int-"/><ul class="blockList"><li class="blockList"><h4>mark</h4><pre>public void mark(int readAheadLimit)
          throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Marks the present position in the stream. Subsequent calls to reset() will reposition the stream to this point.                 </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/Reader.html#mark-int-">mark</a></code> in class <code><a href="../../java/io/Reader.html" title="class in java.io">Reader</a></code>  </dd> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>readAheadLimit</code> - Limit on the number of characters that may be read while still preserving the mark. Because the stream's input comes from a character array, there is no actual limit; hence this argument is ignored.                                    </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - If an I/O error occurs       </dd>   </dl></li></ul> <a end_ctx_id="method:mark-int-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:reset-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:reset--"/><a name="reset--"/><ul class="blockList"><li class="blockList"><h4>reset</h4><pre>public void reset()
           throws <a href="../../java/io/IOException.html" title="class in java.io">IOException</a></pre><div class="block">Resets the stream to the most recent mark, or to the beginning if it has never been marked.                 </div><dl> <dt> <span class="overrideSpecifyLabel">Overrides:</span>   </dt><dd> <code><a href="../../java/io/Reader.html#reset--">reset</a></code> in class <code><a href="../../java/io/Reader.html" title="class in java.io">Reader</a></code>  </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code> - If an I/O error occurs       </dd>  </dl></li></ul> <a end_ctx_id="method:reset--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:close-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:close--"/><a name="close--"/><ul class="blockListLast"><li class="blockList"><h4>close</h4><pre>public void close()</pre><div class="block">Closes the stream and releases any system resources associated with it. Once the stream has been closed, further read(), ready(), mark(), reset(), or skip() invocations will throw an IOException. Closing a previously closed stream has no effect.                                    </div><dl> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/Closeable.html#close--">close</a></code> in interface <code><a href="../../java/io/Closeable.html" title="interface in java.io">Closeable</a></code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/lang/AutoCloseable.html#close--">close</a></code> in interface <code><a href="../../java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a></code>  </dd> <dt> <span class="overrideSpecifyLabel">Specified by: </span>   </dt><dd> <code><a href="../../java/io/Reader.html#close--">close</a></code> in class <code><a href="../../java/io/Reader.html" title="class in java.io">Reader</a></code>  </dd>   </dl></li></ul> <a end_ctx_id="method:close--"/>  </td></tr></table></td></tr></table></diff></diffreport>