<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:StandardOpenOption [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:StandardOpenOption"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../../java/io/Serializable.html" title="interface in java.io">Serializable</a>, <a href="../../../java/lang/Comparable.html" title="interface in java.lang">Comparable</a>&lt;<a href="../../../java/nio/file/StandardOpenOption.html" title="enum in java.nio.file">StandardOpenOption</a>&gt;, <a href="../../../java/nio/file/OpenOption.html" title="interface in java.nio.file">OpenOption</a>   </dd> </dl> <hr/> <br/><pre>public enum <span class="typeNameLabel">StandardOpenOption</span>
extends <a href="../../../java/lang/Enum.html" title="class in java.lang">Enum</a>&lt;<a href="../../../java/nio/file/StandardOpenOption.html" title="enum in java.nio.file">StandardOpenOption</a>&gt;
implements <a href="../../../java/nio/file/OpenOption.html" title="interface in java.nio.file">OpenOption</a></pre><div class="block">Defines the standard open options.    </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.7</dd> </dl>  </li></ul> </div> <a end_ctx_id="class:StandardOpenOption"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:READ [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:READ"/><a name="READ"/><ul class="blockList"><li class="blockList"><h4>READ</h4><pre>public static final <a href="../../../java/nio/file/StandardOpenOption.html" title="enum in java.nio.file">StandardOpenOption</a> READ</pre><div class="block">Open for read access.   </div></li></ul> <a end_ctx_id="field:READ"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:WRITE [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:WRITE"/><a name="WRITE"/><ul class="blockList"><li class="blockList"><h4>WRITE</h4><pre>public static final <a href="../../../java/nio/file/StandardOpenOption.html" title="enum in java.nio.file">StandardOpenOption</a> WRITE</pre><div class="block">Open for write access.   </div></li></ul> <a end_ctx_id="field:WRITE"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:APPEND [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:APPEND"/><a name="APPEND"/><ul class="blockList"><li class="blockList"><h4>APPEND</h4><pre>public static final <a href="../../../java/nio/file/StandardOpenOption.html" title="enum in java.nio.file">StandardOpenOption</a> APPEND</pre><div class="block">If the file is opened for <a href="../../../java/nio/file/StandardOpenOption.html#WRITE"><code>WRITE</code></a> access then bytes will be written to the end of the file rather than the beginning.<p> If the file is opened for write access by other programs, then it is file system specific if writing to the end of the file is atomic.                           </p>                      </div></li></ul> <a end_ctx_id="field:APPEND"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:TRUNCATE_EXISTING [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:TRUNCATE_EXISTING"/><a name="TRUNCATE_EXISTING"/><ul class="blockList"><li class="blockList"><h4>TRUNCATE_EXISTING</h4><pre>public static final <a href="../../../java/nio/file/StandardOpenOption.html" title="enum in java.nio.file">StandardOpenOption</a> TRUNCATE_EXISTING</pre><div class="block">If the file already exists and it is opened for <a href="../../../java/nio/file/StandardOpenOption.html#WRITE"><code>WRITE</code></a> access, then its length is truncated to 0. This option is ignored if the file is opened only for <a href="../../../java/nio/file/StandardOpenOption.html#READ"><code>READ</code></a> access.                               </div></li></ul> <a end_ctx_id="field:TRUNCATE_EXISTING"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:CREATE [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:CREATE"/><a name="CREATE"/><ul class="blockList"><li class="blockList"><h4>CREATE</h4><pre>public static final <a href="../../../java/nio/file/StandardOpenOption.html" title="enum in java.nio.file">StandardOpenOption</a> CREATE</pre><div class="block">Create a new file if it does not exist. This option is ignored if the <a href="../../../java/nio/file/StandardOpenOption.html#CREATE_NEW"><code>CREATE_NEW</code></a> option is also set. The check for the existence of the file and the creation of the file if it does not exist is atomic with respect to other file system operations.                                               </div></li></ul> <a end_ctx_id="field:CREATE"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:CREATE_NEW [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:CREATE_NEW"/><a name="CREATE_NEW"/><ul class="blockList"><li class="blockList"><h4>CREATE_NEW</h4><pre>public static final <a href="../../../java/nio/file/StandardOpenOption.html" title="enum in java.nio.file">StandardOpenOption</a> CREATE_NEW</pre><div class="block">Create a new file, failing if the file already exists. The check for the existence of the file and the creation of the file if it does not exist is atomic with respect to other file system operations.                                     </div></li></ul> <a end_ctx_id="field:CREATE_NEW"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:DELETE_ON_CLOSE [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:DELETE_ON_CLOSE"/><a name="DELETE_ON_CLOSE"/><ul class="blockList"><li class="blockList"><h4>DELETE_ON_CLOSE</h4><pre>public static final <a href="../../../java/nio/file/StandardOpenOption.html" title="enum in java.nio.file">StandardOpenOption</a> DELETE_ON_CLOSE</pre><div class="block">Delete on close. When this option is present then the implementation makes a <em>best effort </em> attempt to delete the file when closed by the appropriate <code>close</code> method. If the <code>close</code> method is not invoked then a <em>best effort </em> attempt is made to delete the file when the Java virtual machine terminates (either normally, as defined by the Java Language Specification, or where possible, abnormally). This option is primarily intended for use with <em>work files </em> that are used solely by a single instance of the Java virtual machine. This option is not recommended for use when opening files that are open concurrently by other entities. Many of the details as to when and how the file is deleted are implementation specific and therefore not specified. In particular, an implementation may be unable to guarantee that it deletes the expected file when replaced by an attacker while the file is open. Consequently, security sensitive applications should take care when using this option.<p> For security reasons, this option may imply the <a href="../../../java/nio/file/LinkOption.html#NOFOLLOW_LINKS"><code>LinkOption.NOFOLLOW_LINKS</code></a> option. In other words, if the option is present when opening an existing file that is a symbolic link then it may fail (by throwing <a href="../../../java/io/IOException.html" title="class in java.io"><code>IOException</code></a>).                                   </p>                                                                                                                                                            </div></li></ul> <a end_ctx_id="field:DELETE_ON_CLOSE"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:SPARSE [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:SPARSE"/><a name="SPARSE"/><ul class="blockList"><li class="blockList"><h4>SPARSE</h4><pre>public static final <a href="../../../java/nio/file/StandardOpenOption.html" title="enum in java.nio.file">StandardOpenOption</a> SPARSE</pre><div class="block">Sparse file. When used with the <a href="../../../java/nio/file/StandardOpenOption.html#CREATE_NEW"><code>CREATE_NEW</code></a> option then this option provides a <em>hint</em> that the new file will be sparse. The option is ignored when the file system does not support the creation of sparse files.                                    </div></li></ul> <a end_ctx_id="field:SPARSE"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:SYNC [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:SYNC"/><a name="SYNC"/><ul class="blockList"><li class="blockList"><h4>SYNC</h4><pre>public static final <a href="../../../java/nio/file/StandardOpenOption.html" title="enum in java.nio.file">StandardOpenOption</a> SYNC</pre><div class="block">Requires that every update to the file's content or metadata be written synchronously to the underlying storage device.                 </div><dl> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="package-summary.html#integrity">Synchronized I/O file integrity   </a> </dd> </dl></li></ul> <a end_ctx_id="field:SYNC"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">field:DSYNC [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="field:DSYNC"/><a name="DSYNC"/><ul class="blockListLast"><li class="blockList"><h4>DSYNC</h4><pre>public static final <a href="../../../java/nio/file/StandardOpenOption.html" title="enum in java.nio.file">StandardOpenOption</a> DSYNC</pre><div class="block">Requires that every update to the file's content be written synchronously to the underlying storage device.               </div><dl> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="package-summary.html#integrity">Synchronized I/O file integrity   </a> </dd> </dl></li></ul> <a end_ctx_id="field:DSYNC"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:values-- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:values--"/><a name="values--"/><ul class="blockList"><li class="blockList"><h4>values</h4><pre>public static <a href="../../../java/nio/file/StandardOpenOption.html" title="enum in java.nio.file">StandardOpenOption</a>[] values()</pre><div class="block">Returns an array containing the constants of this enum type, in the order they are declared. This method may be used to iterate over the constants as follows:<pre>
for (StandardOpenOption c : StandardOpenOption.values())
    System.out.println(c);
</pre>                           </div><dl> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>an array containing the constants of this enum type, in the order they are declared              </dd> </dl></li></ul> <a end_ctx_id="method:values--"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:valueOf-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:valueOf-java.lang.String-"/><a name="valueOf-java.lang.String-"/><ul class="blockListLast"><li class="blockList"><h4>valueOf</h4><pre>public static <a href="../../../java/nio/file/StandardOpenOption.html" title="enum in java.nio.file">StandardOpenOption</a> valueOf(<a href="../../../java/lang/String.html" title="class in java.lang">String</a> name)</pre><div class="block">Returns the enum constant of this type with the specified name. The string must match <i>exactly</i> an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)                                </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>name</code> - the name of the enum constant to be returned.           </dd> <dt> <span class="returnLabel">Returns:</span>   </dt><dd>the enum constant with the specified name      </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if this enum type has no constant with the specified name             </dd><dd> <code><a href="../../../java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if the argument is null       </dd>   </dl></li></ul> <a end_ctx_id="method:valueOf-java.lang.String-"/>  </td></tr></table></td></tr></table></diff></diffreport>