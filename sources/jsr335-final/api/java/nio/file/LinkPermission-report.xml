<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:LinkPermission [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><div class="description"> <a start_ctx_id="class:LinkPermission"/><ul class="blockList"><li class="blockList"><dl> <dt>All Implemented Interfaces:  </dt><dd> <a href="../../../java/io/Serializable.html" title="interface in java.io">Serializable</a>, <a href="../../../java/security/Guard.html" title="interface in java.security">Guard</a>  </dd> </dl> <hr/> <br/><pre>public final class <span class="typeNameLabel">LinkPermission</span>
extends <a href="../../../java/security/BasicPermission.html" title="class in java.security">BasicPermission</a></pre><div class="block">The <code>Permission</code> class for link creation operations.<p> The following table provides a summary description of what the permission allows, and discusses the risks of granting code the permission.<table border="1" cellpadding="5" summary="Table shows permission target name, what the permission allows, and associated risks"><tbody><tr><th>Permission Target Name  </th><th>What the Permission Allows   </th><th>Risks of Allowing this Permission    </th></tr><tr><td>hard</td><td> Ability to add an existing file to a directory. This is sometimes known as creating a link, or hard link.                    </td><td> Extreme care should be taken when granting this permission. It allows linking to any file or directory in the file system thus allowing the attacker access to all files.                             </td></tr><tr><td>symbolic</td><td> Ability to create symbolic links.     </td><td> Extreme care should be taken when granting this permission. It allows linking to any file or directory in the file system thus allowing the attacker to access to all files.                              </td></tr></tbody></table>                     </p>      </div><dl> <dt> <span class="simpleTagLabel">Since:</span>   </dt><dd>1.7</dd> <dt> <span class="seeLabel">See Also: </span>   </dt><dd> <a href="../../../java/nio/file/Files.html#createLink-java.nio.file.Path-java.nio.file.Path-"><code>Files.createLink(java.nio.file.Path, java.nio.file.Path) </code></a>, <a href="../../../java/nio/file/Files.html#createSymbolicLink-java.nio.file.Path-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-"><code>Files.createSymbolicLink(java.nio.file.Path, java.nio.file.Path, java.nio.file.attribute.FileAttribute&lt;?&gt;...)  </code></a>, <a href="../../../serialized-form.html#java.nio.file.LinkPermission">Serialized Form </a>   </dd>  </dl>  </li></ul> </div> <a end_ctx_id="class:LinkPermission"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:LinkPermission-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:LinkPermission-java.lang.String-"/><a name="LinkPermission-java.lang.String-"/><ul class="blockList"><li class="blockList"><h4>LinkPermission</h4><pre>public LinkPermission(<a href="../../../java/lang/String.html" title="class in java.lang">String</a> name)</pre><div class="block">Constructs a <code>LinkPermission</code> with the specified name.      </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>name</code> - the name of the permission. It must be "hard" or "symbolic".             </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if name is empty or invalid        </dd>  </dl></li></ul> <a end_ctx_id="constructor:LinkPermission-java.lang.String-"/>  </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">constructor:LinkPermission-java.lang.String-java.lang.String- [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="constructor:LinkPermission-java.lang.String-java.lang.String-"/><a name="LinkPermission-java.lang.String-java.lang.String-"/><ul class="blockListLast"><li class="blockList"><h4>LinkPermission</h4><pre>public LinkPermission(<a href="../../../java/lang/String.html" title="class in java.lang">String</a> name,
                      <a href="../../../java/lang/String.html" title="class in java.lang">String</a> actions)</pre><div class="block">Constructs a <code>LinkPermission</code> with the specified name.      </div><dl> <dt> <span class="paramLabel">Parameters:</span>   </dt><dd> <code>name</code> - the name of the permission; must be "hard" or "symbolic".            </dd><dd> <code>actions</code> - the actions for the permission; must be the empty string or <code>null</code>              </dd> <dt> <span class="throwsLabel">Throws:</span>   </dt><dd> <code><a href="../../../java/lang/IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if name is empty or invalid, or actions is a non-empty string              </dd>  </dl></li></ul> <a end_ctx_id="constructor:LinkPermission-java.lang.String-java.lang.String-"/>  </td></tr></table></td></tr></table></diff></diffreport>